{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#unity-catalog-open-multimodal-catalog-for-data-ai","title":"Unity Catalog: Open, Multimodal Catalog for Data &amp; AI","text":"<p>Unity Catalog is the industry\u2019s only universal catalog for data and AI.</p> <ul> <li>Multimodal interface supports any format, engine, and asset<ul> <li>Multi-format support: It is extensible and supports Delta Lake, Apache Iceberg and Apache Hudi via UniForm,     Apache Parquet, JSON, CSV, and many others.</li> <li>Multi-engine support: Unity Catalog's open APIs allow many leading compute engines to read data cataloged in Unity.</li> <li>Multimodal: It supports all your data and AI assets, including tables, files, functions, AI models.</li> </ul> </li> <li>Open source API and implementation - OpenAPI spec and OSS implementation (Apache 2.0 license). It is also     compatible with Apache Hive's metastore API and Apache Iceberg's REST catalog API. Unity Catalog is currently a     sandbox project with LF AI and Data Foundation (part of the Linux Foundation).</li> <li>Unified governance for data and AI - Govern and secure tabular data, unstructured assets, and AI assets with a     single interface.</li> </ul> <p>The first release of Unity Catalog focuses on a core set of APIs for tables, unstructured data, and AI assets. More will come soon on governance, access, and client interoperability. This is just the beginning!</p> <p></p>"},{"location":"#project-governance","title":"Project Governance","text":"<p>Unity Catalog is proud to be hosted by the LF AI &amp; Data Foundation.</p> <p></p>"},{"location":"deployment/","title":"Deployment","text":"<p>This guide outlines how to deploy the Unity Catalog server.</p>"},{"location":"deployment/#deploying-using-tarball","title":"Deploying using tarball","text":""},{"location":"deployment/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>To generate the tarball, run the following command in the source code:</p> <pre><code>build/sbt createTarball\n</code></pre> </li> </ul>"},{"location":"deployment/#unpacking-the-tarball","title":"Unpacking the tarball","text":"<ul> <li> <p>The tarball generated in the <code>target</code> directory can be unpacked using the following command:</p> <pre><code>tar -xvf unitycatalog-&lt;version&gt;.tar.gz\n</code></pre> </li> <li> <p>Unpacking the tarball will create the following directory structure:</p> <pre><code>unitycatalog-&lt;version&gt;\n\u251c\u2500\u2500 bin\n\u2502   \u251c\u2500\u2500 start-uc-server\n\u2502   \u2514\u2500\u2500 uc\n\u251c\u2500\u2500 etc\n\u2502   \u251c\u2500\u2500 conf\n\u2502   \u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 db\n\u2502   \u2514\u2500\u2500 logs\n\u2514\u2500\u2500 jars\n</code></pre> </li> <li> <p>The <code>bin</code> directory contains the scripts that you can use to start the UC server and run the CLI.</p> </li> <li>The <code>etc</code> directory contains the configuration, data, database, and logs directories.</li> <li>The <code>jars</code> directory contains the jar files required to run the UC server.</li> </ul>"},{"location":"deployment/#configuring-the-uc-server","title":"Configuring the UC server","text":"<ul> <li>The UC server can be configured by modifying the files in <code>etc/conf/</code>. This includes properties related to logging,     server environment and the s3 configuration.</li> <li>Setting the server environment to <code>dev</code> will use properties located in <code>etc/conf/hibernate.properties</code> to configure     the backend database whereas <code>test</code> will spin up an in-memory database.</li> <li>The <code>etc/data/</code> directory contains the data files that are used by the UC server. This includes the tables and volumes     that are created.</li> <li>The <code>etc/db/</code> directory contains the backend database that is used by the UC server.</li> </ul>"},{"location":"deployment/#configuring-the-database","title":"Configuring the database","text":"<ul> <li>The backend database can be configured by modifying the <code>etc/conf/hibernate.properties</code> file.</li> <li>You need to provide the connection details to connect to your database server.</li> </ul>"},{"location":"deployment/#example-mysql-connection","title":"Example MySQL Connection","text":""},{"location":"deployment/#prerequisites_1","title":"Prerequisites","text":"<ul> <li>Install docker.</li> <li>Download JDBC driver for MySQL.</li> </ul>"},{"location":"deployment/#start-mysql-server","title":"Start MySQL server","text":"<ul> <li>In a terminal, navigate to the cloned repository root directory.</li> <li> <p>Modify <code>etc/db/mysql-example.yml</code> to configure MySQL server. Then start MySQL using Docker:</p> <pre><code>docker-compose -f etc/db/mysql-example.yml up -d\n</code></pre> </li> <li> <p>Modify the <code>etc/conf/hibernate.properties</code> file with your MySQL connection details:</p> <pre><code>hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver\nhibernate.connection.url=jdbc:mysql://localhost:3306/ucdb\nhibernate.connection.user=uc_default_user\nhibernate.connection.password=uc_default_password\n</code></pre> </li> <li> <p>Modify the <code>jars/classpath</code> file and add path to your JDBC driver.</p> </li> </ul>"},{"location":"deployment/#example-postgresql-connection","title":"Example PostgreSQL Connection","text":""},{"location":"deployment/#prerequisites_2","title":"Prerequisites","text":"<ul> <li>Install docker.</li> <li>Download JDBC driver for PostgreSQL.</li> </ul>"},{"location":"deployment/#start-postgresql-server","title":"Start PostgreSQL server","text":"<ul> <li>In a terminal, navigate to the cloned repository root directory.</li> <li> <p>Modify <code>etc/db/postgres-example.yml</code> to configure PostgreSQL server. Then start PostgreSQL using Docker:</p> <pre><code>docker-compose -f etc/db/postgres-example.yml up -d\n</code></pre> </li> <li> <p>Modify the <code>etc/conf/hibernate.properties</code> file with your PostgreSQL connection details:</p> <pre><code>hibernate.connection.driver_class=org.postgresql.Driver\nhibernate.connection.url=jdbc:postgresql://localhost:5432/ucdb\nhibernate.connection.user=uc_default_user\nhibernate.connection.password=uc_default_password\n</code></pre> </li> <li> <p>Modify the <code>jars/classpath</code> file and add path to your jdbc driver.</p> </li> </ul>"},{"location":"docker_compose/","title":"Docker Compose","text":"<p>To start Unity Catalog in Docker Compose in one command, install the latest version of Docker Desktop and run the following from the project's root directory:</p> <pre><code>docker compose up -d\n</code></pre> <p>This starts the Unity Catalog server and UI. You can access the UI at <code>http://localhost:3000</code> and the server at <code>http://localhost:8080</code>. Clients like DuckDB or Spark running on the host machine will be able to interact on those ports with the containers running Unity Catalog.</p> <p>To use the Unity Catalog CLI, attach to a shell in the Unity Catalog server container:</p> <pre><code>docker exec -it unitycatalog-server-1 /bin/bash\n</code></pre> <p>Use the Unity Catalog CLI from the attached shell to interact with the server:</p> <pre><code>bin/uc table list --catalog unity --schema default\n</code></pre> <p>To remove the containers and persistent volumes, <code>exit</code> the attached shell and run the following from the host machine:</p> <pre><code>docker compose down --volumes --remove-orphans\n</code></pre> <p>Refer the the main Quickstart for more examples of how to interact with the catalog.</p>"},{"location":"docker_compose/#configurations","title":"Configurations","text":"<p>Docker Compose is configured in the <code>./compose.yaml</code> file.</p> <p>The configuration will create a bind mount to the local files in <code>./etc/conf</code>. The UC server can be configured by editing the configuration files on the host, and the mount will reflect the changes in the container.</p> <p>The congfiguration will also create a persistent, named volume to store the server's data. This will persist between restarts of the container. See the deployment page for more details on how to configure other databases like Postgres.</p>"},{"location":"quickstart/","title":"Quickstart","text":"<p>This quickstart shows how to run Unity Catalog on localhost which is great for experimentation and testing.</p>"},{"location":"quickstart/#how-to-start-the-unity-catalog-server","title":"How to start the Unity Catalog server","text":"<p>Start by cloning the open source Unity Catalog GitHub repository:</p> <pre><code>git clone git@github.com:unitycatalog/unitycatalog.git\n</code></pre> <p>To start Unity Catalog in Docker, refer to the Docker Compose docs.</p> <p>To run Unity Catalog, you need Java 17 installed on your machine.  You can always run the <code>java --version</code> command to verify that you have the right version of Java installed such as the following example output.</p> <pre><code>% java --version\nopenjdk 17.0.12 2024-07-16\nOpenJDK Runtime Environment Homebrew (build 17.0.12+0)\nOpenJDK 64-Bit Server VM Homebrew (build 17.0.12+0, mixed mode, sharing)\n</code></pre> <p>Change into the <code>unitycatalog</code> directory and run <code>bin/start-uc-server</code> to instantiate the server. Here is what you should see:</p> <pre><code>################################################################### \n#  _    _       _ _            _____      _        _              #\n# | |  | |     (_) |          / ____|    | |      | |             #\n# | |  | |_ __  _| |_ _   _  | |     __ _| |_ __ _| | ___   __ _  #\n# | |  | | '_ \\| | __| | | | | |    / _` | __/ _` | |/ _ \\ / _` | #\n# | |__| | | | | | |_| |_| | | |___| (_| | || (_| | | (_) | (_| | #\n#  \\____/|_| |_|_|\\__|\\__, |  \\_____\\__,_|\\__\\__,_|_|\\___/ \\__, | #\n#                      __/ |                                __/ | #\n#                     |___/               v0.2.0           |___/  #\n###################################################################\n</code></pre> <p>Well, that was pretty easy!</p>"},{"location":"quickstart/#verify-unity-catalog-server-is-running","title":"Verify Unity Catalog server is running","text":"<p>Let\u2019s create a new Terminal window and verify that the Unity Catalog server is running.</p> <p>Unity Catalog has a few built-in tables that are great for quick experimentation. Let\u2019s look at all the tables that have a catalog name of \u201cunity\u201d and a schema name of \u201cdefault\u201d with the Unity Catalog CLI.</p> <pre><code>bin/uc table list --catalog unity --schema default\n</code></pre> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502      NAME       \u2502 CATALOG_NAME \u2502 ... \u2502              TABLE_ID              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502marksheet        \u2502unity         \u2502 ... \u2502c389adfa-5c8f-497b-8f70-26c2cca4976d\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502marksheet_uniform\u2502unity         \u2502 ... \u25029a73eb46-adf0-4457-9bd8-9ab491865e0d\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502numbers          \u2502unity         \u2502 ... \u250232025924-be53-4d67-ac39-501a86046c01\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502user_countries   \u2502unity         \u2502 ... \u250226ed93b5-9a18-4726-8ae8-c89dfcfea069\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Let\u2019s read the content of the <code>unity.default.numbers</code> table with the Unity Catalog CLI.</p> <pre><code>bin/uc table read --full_name unity.default.numbers\n</code></pre> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502as_int(integer)    \u2502as_double(double)   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502564                \u2502188.75535598441473  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502755                \u2502883.6105633023361   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502...                \u2502...                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502958                \u2502509.3712727285101   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>We can see it\u2019s straightforward to make queries with the Unity Catalog CLI.</p>"},{"location":"quickstart/#unity-catalog-structure","title":"Unity Catalog structure","text":"<p>Unity Catalog stores all assets in a 3-level namespace:</p> <ol> <li>catalog</li> <li>schema</li> <li>assets like tables, volumes, functions, etc.</li> </ol> <p></p> <p>Here's an example Unity Catalog instance:</p> <p></p> <p>This Unity Catalog instance contains a single catalog named <code>cool_stuff</code>.</p> <p>The <code>cool_stuff</code> catalog contains two schema: <code>thing_a</code> and <code>thing_b</code>.</p> <p><code>thing_a</code> contains a Delta table, a function, and a Lance volume. <code>thing_b</code> contains two Delta tables.</p> <p>Unity Catalog provides a nice organizational structure for various datasets.</p>"},{"location":"quickstart/#list-the-catalogs-and-schemas-with-the-cli","title":"List the catalogs and schemas with the CLI","text":"<p>The UC server is pre-populated with a few sample catalogs, schemas, Delta tables, etc.</p> <p>Let's start by listing the catalogs using the CLI.</p> <pre><code>bin/uc catalog list\n</code></pre> <p>You should see a catalog named <code>unity</code>. Let's see what's in this <code>unity</code> catalog (pun intended).</p> <pre><code>bin/uc schema list --catalog unity\n</code></pre> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 NAME  \u2502CATALOG_NAME\u2502...\u2502             SCHEMA_ID              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502default\u2502unity       \u2502...\u2502b08dfd57-a939-46cf-b102-9b906b884fae\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>You should see that there is a schema named <code>default</code>. To go deeper into the contents of this schema, you have to list different asset types separately. Let's start with tables.</p>"},{"location":"quickstart/#operate-on-delta-tables-with-the-cli","title":"Operate on Delta tables with the CLI","text":"<p>Let's list the tables.</p> <pre><code>bin/uc table list --catalog unity --schema default\n</code></pre> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502      NAME       \u2502CATALOG_NAME\u2502....\u2502              TABLE_ID              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502marksheet        \u2502unity       \u2502....\u2502c389adfa-5c8f-497b-8f70-26c2cca4976d\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502marksheet_uniform\u2502unity       \u2502....\u25029a73eb46-adf0-4457-9bd8-9ab491865e0d\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502numbers          \u2502unity       \u2502....\u250232025924-be53-4d67-ac39-501a86046c01\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502user_countries   \u2502unity       \u2502....\u250226ed93b5-9a18-4726-8ae8-c89dfcfea069\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>You should see a few tables. Some details are truncated because of the nested nature of the data.</p> <p>To see all the content, you can add <code>--output jsonPretty</code> to any command.</p> <p>Next, let's get the metadata of one those tables.</p> <pre><code>bin/uc table get --full_name unity.default.numbers\n</code></pre> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         KEY          \u2502                  VALUE                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502NAME                  \u2502numbers                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CATALOG_NAME          \u2502unity                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCHEMA_NAME           \u2502default                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502TABLE_TYPE            \u2502EXTERNAL                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502DATA_SOURCE_FORMAT    \u2502DELTA                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COLUMNS               \u2502{\"name\":\"as_int\",\"type_text\":\"int\",\"type_js\u2502\n\u2502                      \u2502NT\",\"type_precision\":0,\"type_scale\":0,\"type\u2502\n\u2502                      \u2502{\"name\":\"as_double\",\"type_text\":\"double\",\"t\u2502\n\u2502                      \u2502name\":\"DOUBLE\",\"type_precision\":0,\"type_sca\u2502\n\u2502                      \u2502column\",\"nullable\":false,\"partition_index\":\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502...                   \u2502...                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502TABLE_ID              \u250232025924-be53-4d67-ac39-501a86046c01       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>You can see this is a Delta table from the <code>DATA_SOURCE_FORMAT</code> metadata.</p> <p>Here's how to print a snippet of a Delta table (powered by the Delta Kernel Java project).</p> <p>Let's try creating a new table.</p> <pre><code>bin/uc table create --full_name unity.default.mytable \\\n--columns \"col1 int, col2 double\" --storage_location /tmp/uc/my_table\n</code></pre> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         KEY          \u2502                  VALUE                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502NAME                  \u2502mytable                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CATALOG_NAME          \u2502unity                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCHEMA_NAME           \u2502default                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502TABLE_TYPE            \u2502EXTERNAL                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502DATA_SOURCE_FORMAT    \u2502DELTA                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COLUMNS               \u2502{\"name\":\"as_int\",\"type_text\":\"int\",\"type_js\u2502\n\u2502                      \u2502NT\",\"type_precision\":0,\"type_scale\":0,\"type\u2502\n\u2502                      \u2502{\"name\":\"as_double\",\"type_text\":\"double\",\"t\u2502\n\u2502                      \u2502name\":\"DOUBLE\",\"type_precision\":0,\"type_sca\u2502\n\u2502                      \u2502column\",\"nullable\":false,\"partition_index\":\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502...                   \u2502...                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502TABLE_ID              \u2502263a234a-7a29-44c8-8e41-8c46aa30650c       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>If you list the tables (e.g., <code>bin/uc table list --catalog unity --schema default</code>) again, you should see this new table.</p> <p>mytable is an empty table</p> <p>Note, at this point, <code>unity.default.mytable</code> is an empty table; e.g. if you run <code>bin/uc table read --full_name unity.default.mytable</code> there will be no rows.</p> <p>Next, append some randomly generated data to the table using <code>write</code>.</p> <pre><code>bin/uc table write --full_name unity.default.mytable\n</code></pre> <p>Read the table to confirm the random data was appended:</p> <pre><code>bin/uc table read --full_name unity.default.mytable\n</code></pre> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502col1(integer)      \u2502col2(double)        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502358                \u2502289.04381385477393  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502571                \u250222.709993302915787  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502...                \u2502...                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502221                \u2502917.8549104485671   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Delete the table to clean up:</p> <pre><code>bin/uc table delete --full_name unity.default.mytable\n</code></pre> <p>Note, while you have deleted the table from Unity Catalog, the underlying file system may still have the files (i.e., check the /tmp/uc/my_table/ folder).  </p>"},{"location":"quickstart/#interact-with-the-unity-catalog-ui","title":"Interact with the Unity Catalog UI","text":"<p>To use the Unity Catalog UI, start a new terminal and ensure you have already started the UC server (e.g., <code>./bin/start-uc-server</code>)</p> <p>Prerequisites</p> <p>The Unity Catalog UI requires both Node and Yarn.</p> <p>To start the UI locally, run the following commands to start <code>yarn</code></p> <pre><code>cd /ui\nyarn install\nyarn start\n</code></pre>"},{"location":"quickstart/#manage-models-in-unity-catalog-using-mlflow","title":"Manage models in Unity Catalog using MLflow","text":"<p>Unity Catalog supports the management and governance of ML models as securable assets. Starting with MLflow 2.16.1, MLflow offers integrated support for using Unity Catalog as the backing resource for the MLflow model registry.  What this means is that with the MLflow client, you will be able to interact directly with your Unity Catalog service for the creation and access of registered models.</p>"},{"location":"quickstart/#setup-mlflow-for-usage-with-unity-catalog","title":"Setup MLflow for usage with Unity Catalog","text":"<p>In your desired development environment, install MLflow 2.16.1 or higher:</p> <pre><code>pip install mlflow\n</code></pre> <p>The installation of MLflow includes the MLflow CLI tool, so you can start a local MLflow server with UI by running the command below in your terminal:</p> <pre><code>mlflow ui\n</code></pre> <p>It will generate logs with the IP address, for example:</p> <pre><code>[2023-10-25 19:39:12 -0700] [50239] [INFO] Starting gunicorn 20.1.0\n[2023-10-25 19:39:12 -0700] [50239] [INFO] Listening at: http://127.0.0.1:5000 (50239)\n</code></pre> <p>Next, from within a python script or shell, import MLflow and set the tracking URI and the registry URI.</p> <pre><code>import mlflow\n\nmlflow.set_tracking_uri(\"http://127.0.0.1:5000\")\nmlflow.set_registry_uri(\"uc:http://127.0.0.1:8080\")\n</code></pre> <p>At this point, your MLflow environment is ready for use with the newly started MLflow tracking server and the Unity Catalog server acting as your model registry.</p>"},{"location":"quickstart/#train-your-model-and-register-it-into-unity-catalog","title":"Train your model and register it into Unity Catalog","text":"<p>You can quickly train a test model and validate that the MLflow/Unity catalog integration is fully working.</p> <pre><code>import os\nfrom sklearn import datasets\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nimport pandas as pd\n\nX, y = datasets.load_iris(return_X_y=True, as_frame=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\nwith mlflow.start_run():\n    # Train a sklearn model on the iris dataset\n    clf = RandomForestClassifier(max_depth=7)\n    clf.fit(X_train, y_train)\n    # Take the first row of the training dataset as the model input example.\n    input_example = X_train.iloc[[0]]\n    # Log the model and register it as a new version in UC.\n    mlflow.sklearn.log_model(\n        sk_model=clf,\n        artifact_path=\"model\",\n        # The signature is automatically inferred from the input example and its predicted output.\n        input_example=input_example,\n        registered_model_name=\"unity.default.iris\",\n    )\n\nloaded_model = mlflow.pyfunc.load_model(f\"models:/unity.default.iris/1\")\npredictions = loaded_model.predict(X_test)\niris_feature_names = datasets.load_iris().feature_names\nresult = pd.DataFrame(X_test, columns=iris_feature_names)\nresult[\"actual_class\"] = y_test\nresult[\"predicted_class\"] = predictions\nresult[:4]\n</code></pre> <p>This code snippet will create a registered model <code>default.unity.iris</code> and log the trained model as model version 1. It then loads the model from the Unity Catalog server, and performs batch inference on the test set using the loaded model.</p> <p>The results can be seen in the Unity Catalog UI at http://localhost:3000, per the instructions in the Interact with the Unity Catalog tutorial.</p> <p></p>"},{"location":"quickstart/#apis-and-compatibility","title":"APIs and Compatibility","text":"<ul> <li>Open API specification: See the Unity Catalog Rest API.</li> <li>Compatibility and stability: The APIs are currently evolving and should not be assumed to be stable.</li> </ul>"},{"location":"ai/client/","title":"Client Guide","text":"<p>This guide provides detailed information about the Unity Catalog AI clients, including caveats, environment variables, public APIs, and examples to help you effectively utilize the Unity Catalog AI Core Library.</p>"},{"location":"ai/client/#unity-catalog-function-client","title":"Unity Catalog Function Client","text":""},{"location":"ai/client/#client-overview","title":"Client Overview","text":"<p>The <code>UnitycatalogFunctionClient</code> is a specialized client within the Unity Catalog AI Core Library designed for managing and executing functions within Unity Catalog (UC). Built on top of the asynchronous <code>unitycatalog-client</code>, this client provides both asynchronous and synchronous interfaces to interact seamlessly with UC functions. It facilitates the creation, retrieval, listing, execution, and deletion of UC functions, enabling developers to integrate both CRUD and execution capabilities into GenAI authoring workflows easily.</p>"},{"location":"ai/client/#caveats","title":"Caveats","text":"<p>When using the <code>UnitycatalogFunctionClient</code> be aware of the following points:</p> <ol> <li>Asynchronous API usage: The <code>unitycatalog-client</code> SDK is based on aiohttp, making it an async client. The <code>UnitycatalogFuncitonClient</code> exposes async methods for nearly all of its interfaces (except for <code>execute_function</code>) to provide seamless experience for asynchronous calls to a Unity Catalog server. If you are using asynchronous methods within an environment that has a running event loop (such as a Jupyter Notebook), ensure that you are not attempting to create additional event loops for async method calls. Additionally, all methods within <code>unitycatalog-ai</code> offer synchronous versions, in case you prefer a simpler interface.</li> <li>Security Considerations: Function execution occurs within the environment where a Unity Catalog function is called for execution. Be aware of the contents of any function prior to execution by checking the <code>routine_definition</code> entry by calling the <code>get_function</code> API if you did not author the function. Additionally, be aware that GenAI-generated Python code (for the use case of building a Unity Catalog function whose sole purpose is to execute arbitrary code) execution is inherently unsafe and should be performed in an isolated VM that is not connected to user data or is in an environment that is not ephemeral (a VM is ideal for this use case).</li> <li>External Dependencies: The environment that is executing the function that you're calling needs to have the appropriate packages pre-installed in order for functions that use external non-core-Python import statements. Ensure that dependent libraries are installed via <code>pip</code>. Additionally, import statements should be contained within the function body (using local imports) to ensure that the dependency is available for use by your function's internal logic.</li> <li>Function overwriting: The <code>create_function</code> and <code>create_function_async</code> APIs expose the ability to overwrite a function definition for convenience. Ensure that you are fully aware of the implications of replacing a function as this operation is permanent and could be disruptive to other Agent workflows that are dependent on existing functionality.</li> </ol>"},{"location":"ai/client/#key-features","title":"Key Features","text":"<ul> <li>Asynchronous and Synchronous Operations: Offers both async and sync methods, allowing flexibility based on the application's concurrency requirements.</li> <li>Function Management: Simplifies the process of creating, retrieving, listing, executing, and deleting UC functions.</li> <li>Integration with GenAI: Supports the registration of UC functions as tools for Generative AI agents, enabling intelligent tool calling within AI-driven workflows.</li> <li>Type Validation and Caching: Ensures that function parameters and return types adhere to defined schemas and caches function executions for optimized performance.</li> </ul>"},{"location":"ai/client/#using-the-unitycatalog-functions-client","title":"Using the UnityCatalog Functions Client","text":"<p>Warning: Function execution for the UnityCatalog APIs involves executing code locally from the point of invocation of your GenAI application. For deterministic functions that you are authoring yourself, this does not pose a security concern. However, if you are writing an application that allows for code to be injected to the function from an LLM (a Python code execution function), there is a risk to the environment that you are running your agent from if the code being executed is unsafe (involving file system operations or accessing networks). If your use case involves such a function declaration that permits execution of arbitrary Python code, it is highly advised to run your Agent from an isolated environment with restricted permissions.</p> <p>Note: Future development efforts may involve the creation of a secure function execution environment to eliminate the risks associated with GenAI-generated Python code execution from within Unity Catalog functions.</p>"},{"location":"ai/client/#using-the-client-for-agent-tool-calling","title":"Using the Client for Agent tool calling","text":""},{"location":"ai/client/#installation","title":"Installation","text":"<ul> <li>Installation: ensure that you have the following package installed from PyPI:</li> </ul> <pre><code>pip install unitycatalog-openai\n</code></pre>"},{"location":"ai/client/#initialization","title":"Initialization","text":"<p>Configure and instantiate the Unity Catalog Python Client to connect to your running Unity Catalog server:</p> <pre><code>import asyncio\nfrom unitycatalog.ai.core.client import UnitycatalogFunctionClient\nfrom unitycatalog.client import ApiClient, Configuration\n\nconfig = Configuration()\nconfig.host = \"http://localhost:8080/api/2.1/unity-catalog\"\n\n# The base ApiClient is async\napi_client = ApiClient(configuration=config)\n\nuc_client = UnitycatalogFunctionClient(api_client=api_client)\n\nCATALOG = \"my_catalog\"\nSCHEMA = \"my_schema\"\n</code></pre>"},{"location":"ai/client/#catalog-and-schema-handlers","title":"Catalog and Schema Handlers","text":"<p>As a measure of convenience, a catalog and schema handler class is available. This can either be instantiated independently:</p> <pre><code>from unitycatalog.ai.core.client import UnitycatalogClient\nfrom unitycatalog.client import ApiClient, Configuration\n\nconfig = Configuration(host=\"http://localhost:8080/api/2.1/unity-catalog\")\napi_client = ApiClient(configuration=config)\n\n# Instantiate the catalog and schema handler directly to create catalogs and schemas as needed\ncore_client = UnitycatalogClient(api_client=api_client)\n\ncatalog_info = core_client.create_catalog(\n    name=\"MyTestCatalog\",\n    comment=\"A catalog used for testing purposes\",\n    properties={\"key\": \"value\"},\n)\nschema_info = core_client.create_schema(\n    name=\"MyTestSchema\",\n    catalog_name=\"MyTestCatalog\",\n    comment=\"A schema for testing\",\n    properties={\"key\": \"value\"},\n)\n</code></pre> <p>Alternatively, these same APIs are available by accessing the <code>uc</code> property on the instance of <code>UnitycatalogFunctionClient</code>, as shown below.</p> <p>Tip: Ensure that you have created a catalog and a schema before attempting to create functions.</p> <p>The <code>UnitycatalogFunctionClient</code> provides helper methods for creating both Catalogs and Schemas in Unity Catalog. For full API-based CRUD operations, you will need to use the <code>unitycatalog-client</code> package.</p> <p>To create a Catalog, you can call the <code>create_catalog</code> method:</p> <pre><code>uc_client.uc.create_catalog(\n    name=CATALOG,\n    comment=\"A catalog for demonstrating the use of Unity Catalog function usage in GenAI applications\",\n)\n</code></pre> <p>NOTE: If the Catalog already exists, you will receive a warning and the existing <code>CatalogInfo</code> metadata will be returned.</p> <p>To create a Schema, you can call the <code>create_schema</code> method:</p> <pre><code>uc_client.uc.create_schema(\n    name=SCHEMA,\n    catalog_name=CATALOG,\n    comment=\"A schema for holding UC functions for GenAI use cases\",\n)\n</code></pre> <p>NOTE: Similar to the <code>create_catalog</code> API, if a schema exists with the name that you specify, you will receive a warning and the existing schema's metadata will be returned.</p>"},{"location":"ai/client/#creating-functions-for-tool-use","title":"Creating Functions for tool use","text":"<p>In order to make a Python callable recognizable to the Unity Catalog functions data model, there are a few requirements that need to be met in the authoring of your functions:</p> <ol> <li>The function must use type hints in both the signature and the return of the function.</li> <li>A Google-style docstring must be used. A description of the function is required and descriptions of the parameters are strongly recommended for proper use by GenAI agents.</li> <li>Dependent libraries must be imported within the body of the function. Imports outside of the function will not be resolvable when executing otherwise.</li> </ol> <p>Below, we show a proper function definition (with type hints and docstring) that is then used to register the function to Unity Catalog using the async API for creating functions.</p> <pre><code>def my_test_func(a: str, b: str) -&gt; str:\n    \"\"\"\n    Returns an upper case concatenation of two strings separated by a space.\n\n    Args:\n        a: the first string\n        b: the second string\n\n    Returns:\n        Uppercased concatenation of the two strings.\n    \"\"\"\n    concatenated = f\"{a} {b}\"\n    return concatenated.upper()\n\n# Asynchronously create the function within a Jupyter notebook\nmy_function = await uc_client.create_python_function_async(\n    func=my_test_func,\n    catalog=CATALOG,\n    schema=SCHEMA,\n)\n</code></pre> <p>Note: within a Python script, you will need to directly call <code>asyncio.run()</code> on your async API call in order to create an event loop. In a Jupyter Notebook environment, an event loop is provided for you.</p> <p>Alternatively, you can use the synchronous API:</p> <pre><code>my_function = uc_client.create_python_function(\n    func=my_test_func,\n    catalog=CATALOG,\n    schema=SCHEMA,\n)\n</code></pre>"},{"location":"ai/client/#testing-a-function","title":"Testing a function","text":"<p>Before attempting to use the function within an Agent integration, you can validate that the function is behaving as intended by using the <code>execute_function</code> API. Unlike with the variants of the <code>create_python_function</code> API, there is not an async version of this API.</p> <p>Testing with the synchronous API:</p> <pre><code>result = uc_client.execute_function(\n    function_name=f\"{CATALOG}.{SCHEMA}.my_test_func\",\n    parameters={\"a\": \"hello\", \"b\": \"world\"}\n)\n\nresult.value  # Outputs: HELLO WORLD\n</code></pre>"},{"location":"ai/client/#building-and-using-a-toolkit-instance-with-an-openai-agent","title":"Building and using a toolkit instance with an OpenAI Agent","text":"<p>In order for a supported GenAI library to use our function, we need to wrap it in a <code>UCFunctionToolkit</code> instance. These abstractions exist for all supported integrations within the <code>unitycatalog-ai</code> ecosystem and permit their respective integration package to directly interact with the functions that you define within Unity Catalog.</p> <p>For example, creating a <code>UCFunctionToolkit</code> instance for integrating with OpenAI is done as follows:</p> <pre><code>import openai\nfrom unitycatalog.ai.openai.toolkit import UCFunctionToolkit\n\n# Assume we have two functions for our agent:\nfunction_1 = f\"{CATALOG}.{SCHEMA}.calculate_dew_point\"\nfunction_2 = f\"{CATALOG}.{SCHEMA}.calculate_vapor_pressure_deficit\"\n\ntoolkit = UCFunctionToolkit(\n    client=uc_client,\n    function_names=[function1, function2]\n)\n\nagent_tools = toolkit.tools\n\nmessage = [\n    {\n        \"role\": \"system\",\n        \"content\": \"You are an assistant that provides accurate assessments of atmospheric conditions based on questions asked.\"\n    },\n    {\n        \"role\": \"user\",\n        \"content\": \"It's 98.9F today with 60 percent humidity. After it rains this afternoon, how long will it be before the haze lifts?\"\n    }\n]\n\ntool_call_response = openai.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    messages=message,\n    tools=agent_tools,\n)\n</code></pre> <p>The response from calling <code>gpt-4o-mini</code> will show a request for the execution of the functions that we provided in order to answer the original question.</p> <p>We can use the <code>generate_tool_call_messages</code> utility API within <code>unitycatalog-openai</code> to process this request, execute the functions, and generate the appropriate interface structure for send back to the LLM for the final processing.</p> <pre><code>from unitycatalog.ai.openai.utils import generate_tool_call_messages\n\nresponse_message = generate_tool_call_messages(response=tool_call_response, client=uc_client)\n\n# merge the conversation history for context\nfinal_message = message + response_message\n\nanswer = openai.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    messages=final_message,\n    tools=agent_tools,\n)\n</code></pre>"},{"location":"ai/client/#databricks-function-client","title":"Databricks Function Client","text":"<p>The <code>DatabricksFunctionClient</code> is a core component of the Unity Catalog AI Core Library that allows you to interact with Unity Catalog (UC) functions on Databricks. It provides APIs for creating, retrieving, listing, executing, and deleting UC functions.</p>"},{"location":"ai/client/#caveats-for-databricks","title":"Caveats for Databricks","text":"<ul> <li>Python Version: Python 3.10 or higher is required when using <code>databricks-connect</code> for serverless compute.</li> <li>Databricks Connect: To create UC functions using SQL body definitions or to execute functions using serverless compute, <code>databricks-connect</code> version <code>15.1.0</code> is required. This is the only supported version that is compatible.</li> <li>Serverless Compute: Function creation and execution using <code>databricks-connect</code> require serverless compute.</li> <li>Warehouse: If the <code>warehouse_id</code> is not provided during client initialization, <code>databricks-connect</code> with serverless compute will be used.<ul> <li>Classic SQL Warehouses are not supported for function execution due to excessive latency, long startup times, and noticeable overhead with executing functions. Function creation can run on any Warehouse type.</li> <li>The SQL Warehouse must be of a serverless type for function execution. To learn more about the different warehouse types, see the docs.</li> </ul> </li> </ul>"},{"location":"ai/client/#environment-variables-for-databricks","title":"Environment Variables for Databricks","text":"<p>You can configure the behavior of function execution using the following environment variables:</p> Environment Variable Description Default Value <code>UCAI_DATABRICKS_WAREHOUSE_EXECUTE_FUNCTION_WAIT_TIMEOUT</code> Time in seconds to wait for function execution. Format: <code>Ns</code> where <code>N</code> is between 0 and 50. Setting to <code>0s</code> executes asynchronously. <code>30s</code> <code>UCAI_DATABRICKS_WAREHOUSE_EXECUTE_FUNCTION_ROW_LIMIT</code> Maximum number of rows in the function execution result. <code>100</code> <code>UCAI_DATABRICKS_WAREHOUSE_EXECUTE_FUNCTION_BYTE_LIMIT</code> Maximum byte size of the function execution result. If exceeded, the <code>truncated</code> field in the response is set to <code>true</code>. <code>1048576</code> <code>UCAI_DATABRICKS_WAREHOUSE_RETRY_TIMEOUT</code> Client-side retry timeout in seconds for function execution. If execution doesn't complete within <code>wait_timeout</code>, the client retries until this timeout is reached. <code>120</code> <code>UCAI_DATABRICKS_SERVERLESS_EXECUTION_RESULT_ROW_LIMIT</code> Maximum number of rows when executing functions using serverless compute with <code>databricks-connect</code>. <code>100</code>"},{"location":"ai/client/#initialization_1","title":"Initialization","text":"<p>In order to perform CRUD operations and to execute UC functions, you will need to instantiate an instance of the UC functions Client. This client interface is used not only for direct interface with functions, but also is the mechanism by which a function will be called as a tool by a GenAI application.</p> <pre><code>from ucai.core.databricks import DatabricksFunctionClient\n\n# Initialize with a warehouse ID (for executing functions using a SQL Warehouse)\nclient = DatabricksFunctionClient(warehouse_id=\"YOUR_WAREHOUSE_ID\")\n\n# Or initialize without a warehouse ID to use serverless compute with databricks-connect\nclient = DatabricksFunctionClient()\n</code></pre>"},{"location":"ai/client/#caveats_1","title":"Caveats","text":"<ul> <li>Type Annotations: When creating functions from Python code, all parameters and return types must have type annotations.</li> <li>Supported Types: Not all Python types are supported in SQL. Refer to the Python to SQL Compatibility Matrix for supported types.</li> <li>Docstrings: Use Google-style docstrings to provide metadata for functions. This enhances function discoverability and usability in GenAI applications.</li> </ul>"},{"location":"ai/client/#client-public-apis","title":"Client Public APIs","text":""},{"location":"ai/client/#creating-functions-from-a-python-callable","title":"Creating functions from a Python Callable","text":"<p>The UC Functions Client's <code>create_python_function</code> API provides a high-level Python-native approach to creating a UC function. This API automates the conversion process between a Python function's definition and the required syntax of a SQL Body statement by parsing the contents of your function definition and extracting the relevant information.</p>"},{"location":"ai/client/#caveats-of-python-callable-function-creation","title":"Caveats of Python Callable function creation","text":"<ul> <li>type hints: All declared arguments and the return of the function must use valid type hints. Failing to define these hints will raise an Exception.</li> <li>type hints in collections: If you are using a collection (<code>tuple</code>, <code>list</code>, or <code>dict</code>), all internal types must be defined. Generic collections are not permitted.</li> <li>generics: the <code>Any</code> type is not supported. All types must be concrete.</li> <li>defaults: Default values that are defined in your function signature will be extracted as UC function <code>DEFAULT</code> entries in your function. Ensure that the default values are valid for your function and that your type hints are correct (using <code>Optional[&lt;type&gt;]</code>).</li> <li>docstring formatting: In order for relevant information to be extracted from the docstring, the syntax of your docstring must match the Google Docstring conventions. <code>reST</code>, <code>Epytext</code> and <code>Numpydoc</code> style docstrings are not supported.</li> <li>external dependencies: There is limited library support within the function execution environment. The list of supported available libraries can be seen here and is subject to change over time.</li> <li>overwriting functions: To replace an existing function, specify the argument <code>replace=True</code> when calling <code>create_python_function</code>.</li> </ul>"},{"location":"ai/client/#example-of-a-valid-function","title":"Example of a Valid Function","text":"<pre><code>def your_function_name(param: str) -&gt; str:\n    \"\"\"\n    Converts the input string to uppercase.\n\n    Args:\n        param (str): The input string.\n\n    Returns:\n        str: The uppercase string.\n    \"\"\"\n    return param.upper()\n\nclient.create_python_function(\n    func=your_function_name,\n    catalog=\"your_catalog\",\n    schema=\"your_schema\"\n)\n</code></pre>"},{"location":"ai/client/#example-of-an-invalid-function","title":"Example of an Invalid Function","text":"<p>The following function definition will not successfully be created as a UC function due to several reasons:</p> <ul> <li>Missing type annotations for arguments and for the return value.</li> <li>Missing docstring.</li> </ul> <pre><code>def invalid_func(a, b):\n    return a + b\n\n# This will raise a ValueError\nclient.create_python_function(\n    func=invalid_func,\n    catalog=\"your_catalog\",\n    schema=\"your_schema\"\n)\n</code></pre>"},{"location":"ai/client/#creating-functions-from-a-sql-body-statement","title":"Creating functions from a SQL Body statement","text":"<p>If you prefer to have full control over your function definition, the <code>create_function</code> API in the client allows you to submit your function definition as a SQL Body statement.</p> <pre><code>sql_body = \"\"\"\nCREATE FUNCTION your_catalog.your_schema.your_function_name(param STRING COMMENT 'A string to convert to uppercase.')\nRETURNS STRING\nLANGUAGE PYTHON\nCOMMENT 'Converts an input string to uppercase.'\nAS $$\n    return param.upper()\n$$\n\"\"\"\n\nclient.create_function(sql_function_body=sql_body)\n</code></pre> <p>The general guidelines for function creation within UC apply to the SQL Body statement. There are no additional restrictions applied to this API.</p> <p>Note: It is highly recommended to provide verbose and accurate <code>COMMENT</code> blocks to both the function and the parameters configured. This information is provided to LLMs that will be deciding on whether it is appropriate to call the defined tool. Detailed descriptions can reduce the chances of a tool call failing due to ambiguous references on how to use the tool.</p> <p>If you create a function without both a <code>COMMENT</code> block (the function description) and <code>COMMENT</code> entries for each parameter defined for your function, a warning will be issued upon creation. It is highly advised to correct your function definition and overwrite your function when you see this warning. Most LLM's will not be able to effectively use your defined function as a tool if the description is a placeholder or is lacking appropriate information that describes the purpose of and how to use your defined function as a tool.</p>"},{"location":"ai/client/#retrieving-functions","title":"Retrieving Functions","text":"<p>You can retrieve the function definition from UC by using the <code>get_function</code> client API:</p> <pre><code>function_info = client.get_function(\"your_catalog.your_schema.your_function_name\")\n</code></pre>"},{"location":"ai/client/#listing-functions","title":"Listing Functions","text":"<p>You can list all functions that are defined within a given catalog and schema by using the <code>list_functions</code> client API:</p> <pre><code>functions = client.list_functions(catalog=\"your_catalog\", schema=\"your_schema\", max_results=10)\n</code></pre>"},{"location":"ai/client/#deleting-functions","title":"Deleting Functions","text":"<p>A function can be deleted through the use of the <code>delete_function</code> client API:</p> <pre><code>client.delete_function(\"your_catalog.your_schema.your_function_name\")\n</code></pre>"},{"location":"ai/client/#executing-functions","title":"Executing Functions","text":"<p>Executing a function directly using the client is done through the <code>execute_function</code> API:</p> <pre><code>result = client.execute_function(\n    \"your_catalog.your_schema.uppercase_function\",\n    parameters={\"param\": \"hello world\"}\n)\n\nprint(result.value)  # Outputs: HELLO WORLD\n</code></pre>"},{"location":"ai/client/#examples","title":"Examples","text":""},{"location":"ai/client/#create-and-execute-a-function","title":"Create and Execute a Function","text":"<pre><code>from ucai.core.databricks import DatabricksFunctionClient\n\n# Initialize the client\nclient = DatabricksFunctionClient(warehouse_id=\"YOUR_WAREHOUSE_ID\")\n\n# Define the function\ndef add_numbers(a: float, b: float) -&gt; float:\n    \"\"\"\n    Adds two numbers and returns the result.\n\n    Args:\n        a (float): First number.\n        b (float): Second number.\n\n    Returns:\n        float: The sum of the two numbers.\n    \"\"\"\n    return a + b\n\n# Create the function in UC\nclient.create_python_function(\n    func=add_numbers,\n    catalog=\"your_catalog\",\n    schema=\"your_schema\"\n)\n\n# Execute the function\nresult = client.execute_function(\n    \"your_catalog.your_schema.add_numbers\",\n    parameters={\"a\": 10.5, \"b\": 5.5}\n)\n\nprint(result.value)  # Outputs: 16.0\n</code></pre>"},{"location":"ai/client/#using-environment-variables","title":"Using Environment Variables","text":"<p>Adjust the function execution timeout value by overriding the default via the environment variable.</p> <pre><code>import os\nfrom ucai.core.databricks import DatabricksFunctionClient\n\n# Set the wait timeout to 50 seconds\nos.environ[\"UCAI_DATABRICKS_WAREHOUSE_EXECUTE_FUNCTION_WAIT_TIMEOUT\"] = \"50s\"\n\nclient = DatabricksFunctionClient(warehouse_id=\"YOUR_WAREHOUSE_ID\")\n\n# Execute your function as before\nresult = client.execute_function(\n    \"your_catalog.your_schema.your_function_name\",\n    parameters={\"param\": \"test\"}\n)\n</code></pre>"},{"location":"ai/client/#additional-notes","title":"Additional Notes","text":"<ul> <li>Error Handling: If a function execution fails, <code>FunctionExecutionResult</code> will contain an <code>error</code> attribute with details on the failure.</li> <li>Asynchronous Execution: Setting UCAI_DATABRICKS_WAREHOUSE_EXECUTE_FUNCTION_WAIT_TIMEOUT to 0s will execute the function asynchronously. The call will immediately return in async mode and the result will need to be polled and fetched for its completed state when executing in async mode.</li> </ul>"},{"location":"ai/quickstart/","title":"Quickstart Guide","text":"<p>Welcome to the Unity Catalog AI Core Library! This guide will help you get started with installing the library, setting up your environment, creating and executing Unity Catalog (UC) functions. Whether you're using your own UC open-source server or connecting with a Databricks-managed UC, this quickstart will walk you through the essential steps.</p>"},{"location":"ai/quickstart/#installation","title":"Installation","text":"<p>Install the Unity Catalog AI Core library directly from PyPI:</p> <pre><code>pip install unitycatalog-ai\n</code></pre> <p>Note: If you install any of the integration packages directly, the AI core client library <code>unitycatalog-ai</code> will be included as a dependency.</p>"},{"location":"ai/quickstart/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have the following:</p> <ul> <li>Python Version: Python 3.10 or higher is recommended for simplified type hint processing within the Unity Catalog functions client.</li> </ul>"},{"location":"ai/quickstart/#unity-catalog-open-source","title":"Unity Catalog Open Source","text":"<p>Ensure that you have met all of the prerequisites and have followed the Unity Catalog Quickstart Guide. Once your server is up and running and you are able to create a catalog, schemas, and functions, you're all set to continue with this guide.</p>"},{"location":"ai/quickstart/#databricks-unity-catalog","title":"Databricks Unity Catalog","text":"<p>If you are going to interface with <code>Databricks Unity Catalog</code>, you can install the optional package extension from PyPI:</p> <pre><code>pip install unitycatalog-ai[databricks]\n</code></pre> <p>Note: Python 3.10 or higher is required to use <code>unitycatalog-ai</code> with Databricks serverless compute for function execution.</p> <ul> <li> <p>Serverless Compute: For creating UC functions directly with a SQL body definition, only serverless compute is supported. You cannot run the function creation APIs while attached to a classic SQL Warehouse.</p> </li> <li> <p>SQL Warehouse: Needed for executing UC functions.</p> </li> </ul> <p>Create a serverless SQL warehouse as per this guide. After creating the warehouse, note down the <code>warehouse id</code> for use within the <code>DatabricksFunctionClient</code>.</p>"},{"location":"ai/quickstart/#using-a-function-with-langchain","title":"Using a function with LangChain","text":""},{"location":"ai/quickstart/#integration-package-installation","title":"Integration package installation","text":"<p>For this quick example with LangChain, we're first going to need to install the Unity Catalog AI LangChain Integration package, <code>unitycatalog-langchain</code>. This package contains the tool definition logic specifically for LangChain, allowing you to seamlessly define a native LangChain tool that can interface with functions stored in Unity Catalog and be used in your GenAI applications.</p> <pre><code>pip install unitycatalog-langchain\n</code></pre>"},{"location":"ai/quickstart/#client-setup","title":"Client Setup","text":"<p>Create an instance of the Functions Client</p> <pre><code>from unitycatalog.client import ApiClient, Configuration\nfrom unitycatalog.ai.core.client import UnitycatalogFunctionClient\n\nconfig = Configuration()\n# This is the default address when starting a UnityCatalog server locally. Update this to the uri\n# of your running UnityCatalog server.\nconfig.host = \"http://localhost:8080/api/2.1/unity-catalog\"\n\n# Create the UnityCatalog client\napi_client = ApiClient(configuration=config)\n\n# Use the UnityCatalog client to create an instance of the AI function client\nclient = UnitycatalogFunctionClient(api_client=api_client)\n\nCATALOG = \"my_catalog\"\nSCHEMA = \"my_schema\"\n</code></pre>"},{"location":"ai/quickstart/#client-setup-databricks","title":"Client Setup - Databricks","text":"<p>In order to be able to both create and execute a function defined within UC as a tool in LangChain, we need to initialize the UC function client. In this example, we're connecting to Databricks UC and specifying a <code>warehouse_id</code> that will be used for executing the functions that are defined as tools. When accessing functions by name, we will need to specify which catalog and schema the function resides in, so we're defining constants to store those values.</p> <pre><code>from unitycatalog.ai.core.databricks import DatabricksFunctionClient\n\nclient = DatabricksFunctionClient(warehouse_id=\"YOUR_WAREHOUSE_ID\")\n\nCATALOG = \"my_catalog\"\nSCHEMA = \"my_schema\"\n</code></pre>"},{"location":"ai/quickstart/#create-a-function-in-uc","title":"Create a function in UC","text":"<p>In order to define a tool for a GenAI framework to use, we first need a function to be created and available within UC. There are two primary APIs for creating Python functions: <code>create_python_function</code> (accepts a Python callable) and <code>create_function</code> (accepts a SQL body create function statement).</p> <p>We'll use the <code>create_python_function</code> API to create our function. Keep in mind that there are some requirements for the successful use of this API:</p> <ul> <li>type hints: The function signature must define valid Python type hints. Both the named arguments and the return value must have their types defined.</li> <li>no variable arguments: All arguments must be defined. <code>*args</code> and <code>**kwargs</code> are not permitted.</li> <li>type compatibility: Not all python types are supported in SQL. Ensure that your function is using compatible types according to the  compatibility matrix.</li> <li>docstring verbosity and formatting: The UC functions toolkit will read, parse, and extract important information from your docstring.<ul> <li>Docstrings must be formatted according to the Google docstring syntax (shown below).</li> <li>The more descriptive the function description and argument descriptions that your docstring provides, the greater the chances are that an LLM will understand when and how to use your function.</li> </ul> </li> </ul> <pre><code>def add_numbers(number_1: float, number_2: float) -&gt; float:\n    \"\"\"\n    A function that accepts two floating point numbers, adds them,\n    and returns the resulting sum as a float.\n\n    Args:\n        number_1 (float): The first of the two numbers to add.\n        number_2 (float): The second of the two numbers to add.\n\n    Returns:\n        float: The sum of the two input numbers.\n    \"\"\"\n    return number_1 + number_2\n\n# Create the function in UC\nfunction_info = client.create_python_function(\n    func=add_numbers,\n    catalog=CATALOG,\n    schema=SCHEMA,\n)\n</code></pre>"},{"location":"ai/quickstart/#create-a-langchain-tool","title":"Create a LangChain tool","text":"<p>For our LangChain application to understand how to call a function within UC, we need to define the toolkit specification first. The example below shows a single UC function for simplicity. If you're defining multiple tools, simply define the function reference names within the <code>function_names</code> list.</p> <pre><code>from unitycatalog.ai.langchain.toolkit import UCFunctionToolkit\n\n# Define the UC function to be used as a tool\nfunc_name = f\"{CATALOG}.{SCHEMA}.add_numbers\"\n\n# Create a toolkit with the UC function\ntoolkit = UCFunctionToolkit(function_names=[func_name], client=client)\n</code></pre>"},{"location":"ai/quickstart/#use-the-tool-in-an-agent","title":"Use the tool in an agent","text":"<p>Now that we have our toolkit defined, we can use the property <code>tools</code> of the <code>UCFunctionToolkit</code> object just as any other tool would be defined for use in LangChain.</p> <pre><code>from langchain.agents import AgentExecutor, create_tool_calling_agent\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain_community.chat_models.databricks import ChatDatabricks\n\n# Initialize the LLM\nllm = ChatDatabricks(endpoint=\"databricks-meta-llama-3-1-70b-instruct\")\n\n# Define the prompt\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", \"You are a helpful assistant. Use tools for computations if applicable.\"),\n    (\"placeholder\", \"{chat_history}\"),\n    (\"human\", \"{input}\"),\n    (\"placeholder\", \"{agent_scratchpad}\")\n])\n\n# Create the agent with our tools\nagent = create_tool_calling_agent(llm, toolkit.tools, prompt)\n\n# Create the executor, adding our defined tools from the UCFunctionToolkit instance\nagent_executor = AgentExecutor(agent=agent, tools=toolkit.tools, verbose=True)\n\n# Run the agent with an input\nagent_executor.invoke({\"input\": \"What is the sum of 4321.9876 and 1234.5678?\"})\n</code></pre>"},{"location":"ai/quickstart/#next-steps","title":"Next Steps","text":"<ul> <li>To learn more about Unity Catalog AI functionality, see the main guide.</li> <li>To explore the available GenAI framework integrations, see the integrations guide.</li> </ul>"},{"location":"ai/usage/","title":"Unity Catalog AI","text":"<p>Welcome to Unity Catalog AI, your comprehensive solution for integrating powerful AI functionalities with Unity Catalog. Whether you're a GenAI developer looking to enhance your applications or a Data Engineer seeking robust governance and access control, Unity Catalog AI bridges the gap between advanced AI tools and enterprise-grade data management.</p>"},{"location":"ai/usage/#what-is-unity-catalog-ai","title":"What is Unity Catalog AI?","text":"<p>Unity Catalog AI is a core library designed to seamlessly integrate Unity Catalog with various Generative AI (GenAI) frameworks and tools. It allows you to define, manage, and execute functions within Unity Catalog and utilize them as tools in your GenAI applications. By leveraging Unity Catalog's robust data governance and management capabilities, Unity Catalog AI ensures that your AI tools are secure, well-organized, and easily accessible.</p>"},{"location":"ai/usage/#key-concepts","title":"Key Concepts","text":""},{"location":"ai/usage/#genai-tools","title":"GenAI Tools","text":"<p>GenAI Tools are external functions or services that Generative AI models can invoke to perform specific tasks. These tools extend the capabilities of AI models by allowing them to interact with external systems, perform computations, access databases, and more. In the context of Unity Catalog AI, GenAI Tools are UC functions that have been integrated into AI workflows, enabling seamless interaction between AI models and your managed functions.</p>"},{"location":"ai/usage/#uc-functions","title":"UC Functions","text":"<p>UC Functions are functions defined and stored within Unity Catalog. They encapsulate specific business logic or operations that can be executed on demand. By storing these functions in Unity Catalog, you benefit from centralized management, versioning, and access control. UC Functions can be invoked as tools within GenAI applications, allowing AI models to utilize these predefined operations securely and efficiently.</p>"},{"location":"ai/usage/#why-unity-catalog-ai","title":"Why Unity Catalog AI?","text":""},{"location":"ai/usage/#simplified-agent-authoring","title":"Simplified Agent Authoring","text":"<p>Creating and managing agents in GenAI applications can be complex, especially when dealing with multiple tools and ensuring they operate seamlessly. Unity Catalog AI simplifies Agent Authoring by:</p> <ul> <li>Handling Access Control: Automatically manages permissions, ensuring that only authorized agents can invoke specific UC Functions.</li> <li>Parsing and Execution: Takes care of parsing function inputs and executing them correctly, reducing the overhead on developers.</li> <li>Native Integrations: Provides per-library integrations, allowing developers to use UC Functions as tools without extensive setup or configuration.</li> </ul>"},{"location":"ai/usage/#enhanced-access-control","title":"Enhanced Access Control","text":"<p>Security is paramount when dealing with data and AI functionalities. Unity Catalog AI leverages Unity Catalog's robust access control mechanisms to ensure that:</p> <ul> <li>Function Access is Secured: Only authorized users and agents can access and execute UC Functions.</li> <li>Granular Permissions: Define precise permissions at the catalog, schema, and function levels.</li> <li>Auditability: Track and audit function usage for compliance and monitoring purposes.</li> </ul>"},{"location":"ai/usage/#seamless-integrations","title":"Seamless Integrations","text":"<p>Unity Catalog AI offers native integrations with a variety of popular GenAI frameworks, making it easy to incorporate UC Functions into your existing workflows. Supported integrations include:</p> <ul> <li>LangChain</li> <li>LlamaIndex</li> <li>OpenAI</li> <li>Anthropic</li> <li>CrewAI</li> <li>AutoGen</li> </ul> <p>Each integration is designed to provide a smooth and intuitive experience, allowing you to focus on building intelligent applications without worrying about the underlying infrastructure.</p>"},{"location":"ai/usage/#getting-started","title":"Getting Started","text":"<p>Embark on your journey with Unity Catalog AI by following our Quickstart Guide. This guide will walk you through the essential steps of installing the library, setting up your environment, and creating and executing UC Functions. Whether you're using an open-source UC server or a Databricks-managed UC, our quickstart ensures you can get up and running swiftly.</p>"},{"location":"ai/usage/#integrations","title":"Integrations","text":"<p>Unity Catalog AI integrates with a range of GenAI frameworks to enhance your AI applications. Explore our Integrations Page to discover detailed guides and example notebooks for each supported framework.</p>"},{"location":"ai/usage/#who-should-use-unity-catalog-ai","title":"Who Should Use Unity Catalog AI?","text":"<p>Unity Catalog AI is designed for:</p> <ul> <li>GenAI Developers: Enhance your AI models with robust, secure, and manageable tools.</li> <li>Data Engineers: Leverage Unity Catalog's data governance capabilities to manage and execute AI functions seamlessly.</li> <li>AI Teams: Collaborate efficiently by centralizing function definitions and access controls.</li> <li>Enterprise Applications: Integrate AI functionalities into large-scale applications with ease, ensuring security and compliance.</li> </ul>"},{"location":"ai/usage/#learn-more","title":"Learn More","text":"<ul> <li>Support: Reach out to our support team for assistance.</li> <li>GitHub Repository: Explore the source code, report issues, and contribute to the project.</li> </ul>"},{"location":"ai/usage/#get-involved","title":"Get Involved","text":"<p>Join our community to stay updated on the latest developments, share your experiences, and collaborate with other users:</p> <ul> <li>Community Forum</li> </ul> <p>Empower your AI applications with the structured and secure capabilities of Unity Catalog AI.</p>"},{"location":"ai/integrations/","title":"Unity Catalog AI Integrations","text":""},{"location":"ai/integrations/#langchain","title":"LangChain","text":"<p>LangChain is a powerful framework for developing applications powered by language models. The Unity Catalog AI integration with LangChain and LangGraph allows you to seamlessly incorporate functions defined in Unity Catalog as tools within your LangChain and LangGraph Agentic workflows, enhancing the capabilities and flexibility of your language model applications.</p> <p>Installation:</p> <pre><code>pip install unitycatalog-langchain\n</code></pre> <p>To learn more about this integration:</p> <p>Guide: Step-by-step instructions to integrate Unity Catalog AI with LangChain. Example Notebook: A Jupyter notebook demonstrating practical usage of the integration.</p>"},{"location":"ai/integrations/#llamaindex","title":"LlamaIndex","text":"<p>LlamaIndex is a data framework for LLM applications. The Unity Catalog AI integration with LlamaIndex enables you to utilize UC functions as part of your data indexing and querying workflows, providing a robust and scalable solution for managing large datasets.</p> <p>Installation:</p> <pre><code>pip install unitycatalog-llamaindex\n</code></pre> <p>To learn more about this integration:</p> <p>Guide: Detailed guide on integrating Unity Catalog AI with the LlamaIndex framework. Example Notebook</p>"},{"location":"ai/integrations/#openai","title":"OpenAI","text":"<p>The OpenAI integration with Unity Catalog AI allows you to harness the capabilities of OpenAI's language models while managing and utilizing UC functions as tools within your OpenAI-powered applications. This integration enhances your ability to build intelligent and responsive applications with ease.</p> <p>Installation:</p> <pre><code>pip install unitycatalog-openai\n</code></pre> <p>To learn more about this integration:</p> <p>Guide: Detailed guide on integrating Unity Catalog AI with OpenAI's sophisticated GPT-based systems. Example Notebook</p>"},{"location":"ai/integrations/#anthropic","title":"Anthropic","text":"<p>Anthropic offers cutting-edge language models designed with a focus on safety and reliability. The Unity Catalog AI integration with Anthropic enables you to utilize UC functions as tools within Anthropic's language model calls, enhancing the functionality and control of your AI applications.</p> <p>Installation:</p> <pre><code>pip install unitycatalog-anthropic\n</code></pre> <p>To learn more about this integration:</p> <p>Anthropic Guide: Detailed guide on integrating Unity Catalog AI with Anthropic's powerful Claude LLMs. Example Notebook</p>"},{"location":"ai/integrations/#crewai","title":"CrewAI","text":"<p>CrewAI is a collaborative AI framework that allows multiple agents to work together to accomplish complex tasks. The Unity Catalog AI integration with CrewAI enables you to define CrewAI Tools directly within your agent definitions, leveraging UC functions to enhance agent capabilities and streamline workflows.</p> <p>Installation:</p> <pre><code>pip install unitycatalog-crewai\n</code></pre> <p>To learn more about this integration:</p> <p>Guide: Detailed guide on integrating Unity Catalog AI with CrewAI Agents.</p>"},{"location":"ai/integrations/#autogen","title":"AutoGen","text":"<p>AutoGen is a framework designed to facilitate the creation of multi-agent workflows. The Unity Catalog AI integration with AutoGen allows for the direct application of UC functions to distinct agents within AutoGen applications or via universal application mapping, enhancing the capabilities of multi-turn agentic workflows.</p> <p>Installation:</p> <pre><code>pip install unitycatalog-autogen\n</code></pre> <p>To learn more about using UC functions as tools within AutoGen's framework:</p> <p>Guide: Detailed guide on integrating Unity Catalog AI with AutoGen's multi-agent framework.</p>"},{"location":"ai/integrations/anthropic/","title":"Using Unity Catalog AI with the Anthropic SDK","text":"<p>Integrate Unity Catalog AI with the Anthropic SDK to utilize functions defined in Unity Catalog as tools in Anthropic LLM calls. This guide covers installation, setup, caveats, environment variables, public APIs, and examples to help you get started.</p>"},{"location":"ai/integrations/anthropic/#installation","title":"Installation","text":"<p>Install the Unity Catalog AI Anthropic integration from PyPI:</p> <pre><code>pip install unitycatalog-anthropic\n</code></pre>"},{"location":"ai/integrations/anthropic/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python version: Python 3.10 or higher is required.</li> </ul>"},{"location":"ai/integrations/anthropic/#unity-catalog","title":"Unity Catalog","text":"<p>Ensure that you have a functional UC server set up and that you are able to access the catalog and schema where defined functions are stored.</p>"},{"location":"ai/integrations/anthropic/#databricks-unity-catalog","title":"Databricks Unity Catalog","text":"<p>To interact with Databricks Unity Catalog, install the optional package dependency when installing the integration package:</p> <pre><code>pip install unitycatalog-anthropic[databricks]\n</code></pre>"},{"location":"ai/integrations/anthropic/#tutorial","title":"Tutorial","text":""},{"location":"ai/integrations/anthropic/#client-setup","title":"Client Setup","text":"<p>Create an instance of the Functions Client</p> <pre><code>from unitycatalog.client import ApiClient, Configuration\nfrom unitycatalog.ai.core.client import UnitycatalogFunctionClient\n\nconfig = Configuration()\n# This is the default address when starting a UnityCatalog server locally. Update this to the uri\n# of your running UnityCatalog server.\nconfig.host = \"http://localhost:8080/api/2.1/unity-catalog\"\n\n# Create the UnityCatalog client\napi_client = ApiClient(configuration=config)\n\n# Use the UnityCatalog client to create an instance of the AI function client\nclient = UnitycatalogFunctionClient(api_client=api_client)\n</code></pre>"},{"location":"ai/integrations/anthropic/#client-setup-databricks","title":"Client Setup - Databricks","text":"<p>Create an instance of the Unity Catalog Functions client</p> <pre><code>from unitycatalog.ai.core.databricks import DatabricksFunctionClient\n\nclient = DatabricksFunctionClient()\n</code></pre>"},{"location":"ai/integrations/anthropic/#creating-a-uc-function","title":"Creating a UC function","text":"<p>Create a Python function within Unity Catalog</p> <pre><code>CATALOG = \"your_catalog\"\nSCHEMA = \"your_schema\"\n\nfunc_name = f\"{CATALOG}.{SCHEMA}.weather_function\"\n\ndef weather_function(location: str) -&gt; str:\n    \"\"\"\n    Fetches the current weather from a given location in degrees Celsius.\n\n    Args:\n        location (str): The location to fetch the current weather from.\n    Returns:\n        str: The current temperature for the location provided in Celsius.\n    \"\"\"\n    return f\"The current temperature for {location} is 24.5 celsius\"\n\nclient.create_python_function(\n    func=weather_function,\n    catalog=CATALOG,\n    schema=SCHEMA\n)\n</code></pre>"},{"location":"ai/integrations/anthropic/#creating-a-toolkit-instance-from-a-uc-function","title":"Creating a toolkit instance from a UC function","text":"<pre><code>from unitycatalog.ai.anthropic.toolkit import UCFunctionToolkit\n\n# Create an instance of the toolkit\ntoolkit = UCFunctionToolkit(function_names=[func_name], client=client)\n</code></pre>"},{"location":"ai/integrations/anthropic/#use-a-tool-within-a-call-to-anthropic","title":"Use a tool within a call to Anthropic","text":"<pre><code>import anthropic\n\nanthropic_client = anthropic.Anthropic(api_key=\"YOUR_ANTHROPIC_API_KEY\")\n\n# User's question\nquestion = [{\"role\": \"user\", \"content\": \"What's the weather in New York City?\"}]\n\n# Make the initial call to Anthropic\nresponse = anthropic_client.messages.create(\n    model=\"claude-3-5-sonnet-20240620\",\n    max_tokens_to_sample=1024,\n    tools=toolkit.tools,\n    messages=question,\n)\n\nprint(response)\n</code></pre>"},{"location":"ai/integrations/anthropic/#construct-a-tool-response","title":"Construct a tool response","text":"<p>The response from the call to Claude will contain a tool request metadata block if a tool needs to be called. In order to simplify the parsing and handling of a call to the UC function that has been created, the <code>ucai-anthropic</code> package includes a message handler utility that will detect, extract, perform the call to the UC function, parse the response, and craft the next message format for the continuation of the conversation with Claude.</p> <p>Note: The entire conversation history must be provided in the <code>conversation_history</code> argument to the <code>generate_tool_call_messages</code> API. Claude models require the initialization of the conversation (the original user input question) as well as all subsequent LLM-generated responses and multi-turn tool call results.</p> <pre><code>from unitycatalog.ai.anthropic.utils import generate_tool_call_messages\n\n# Call the UC function and construct the required formatted response\ntool_messages = generate_tool_call_messages(\n    response=response,\n    client=client,\n    conversation_history=question\n)\n\n# Continue the conversation with Anthropic\ntool_response = anthropic_client.messages.create(\n    model=\"claude-3-5-sonnet-20240620\",\n    max_tokens_to_sample=1024,\n    tools=tools,\n    messages=tool_messages,\n)\n\nprint(tool_response)\n</code></pre>"},{"location":"ai/integrations/anthropic/#additional-notes","title":"Additional Notes","text":"<ul> <li>control: If you need to intercept and filter or adjust content between a request for a tool call and the next turn's interaction, the <code>generate_tool_call_messages</code> utility may not meet your needs. This utility is entirely optional to use. You can always manually construct the conversation history for multi-turn conversations with Claude.</li> </ul> <p>For access to the lower-level API for more control over tool calling execution with Anthropic, you can use the <code>extract_tool_call_data</code> utility:</p> <pre><code>from unitycatalog.ai.anthropic.utils import extract_tool_call_data\n\n# This returns a List[ToolCallData]\nparsed_messages = extract_tool_call_data(response)\n\nresults = []\nfor message in parsed_messages:\n    tool_result = message.execute(client)\n    results.append(message.to_tool_result_message(tool_result))\n</code></pre> <p>If using the above lower-level approach, remember that you will still need to construct the entire conversation history yourself before calling the Anthropic APIs for the next phase in the conversation.</p> <ul> <li>multiple tool calls: Claude models may submit requests for multiple tools to be called in a single response. Ensure that the handling logic for your application is capable of making multiple calls to your UC tools if needed.</li> </ul>"},{"location":"ai/integrations/autogen/","title":"Using Unity Catalog AI with AutoGen","text":"<p>Integrate Unity Catalog AI with the AutoGen SDK to utilize functions defined in Unity Catalog as tools in AutoGen Agent Application calls. This guide covers the installation, setup, caveats, environment variables, public APIs, and examples to help you get started.</p> <p>NOTE: Ensure that the base AutoGen package is installed with version <code>autogen-agentchat~=0.2</code> or earlier, as there are significant changes in the API after this release.</p>"},{"location":"ai/integrations/autogen/#installation","title":"Installation","text":"<p>Install the Unity Catalog AI AutoGen integration from PyPI:</p> <pre><code>pip install unitycatalog-autogen\n</code></pre>"},{"location":"ai/integrations/autogen/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python version: Python 3.10 or higher is required.</li> </ul>"},{"location":"ai/integrations/autogen/#unity-catalog","title":"Unity Catalog","text":"<p>Ensure that you have a functional UC server set up and that you are able to access the catalog and schema where defined functions are stored.</p>"},{"location":"ai/integrations/autogen/#databricks-unity-catalog","title":"Databricks Unity Catalog","text":"<p>To interact with Databricks Unity Catalog, install the optional package dependency when installing the integration package:</p> <pre><code>pip install unitycatalog-autogen[databricks]\n</code></pre>"},{"location":"ai/integrations/autogen/#authentication-with-databricks-unity-catalog","title":"Authentication with Databricks Unity Catalog","text":"<p>To use Databricks-managed Unity Catalog with this package, follow the Databricks CLI authentication instructions to authenticate to your workspace and ensure that your access token has workspace-level privileges for managing UC functions.</p>"},{"location":"ai/integrations/autogen/#tutorial","title":"Tutorial","text":""},{"location":"ai/integrations/autogen/#client-setup","title":"Client Setup","text":"<p>Create an instance of the Functions Client</p> <pre><code>from unitycatalog.client import ApiClient, Configuration\nfrom unitycatalog.ai.core.client import UnitycatalogFunctionClient\n\nconfig = Configuration()\n# This is the default address when starting a UnityCatalog server locally. Update this to the uri\n# of your running UnityCatalog server.\nconfig.host = \"http://localhost:8080/api/2.1/unity-catalog\"\n\n# Create the UnityCatalog client\napi_client = ApiClient(configuration=config)\n\n# Use the UnityCatalog client to create an instance of the AI function client\nclient = UnitycatalogFunctionClient(api_client=api_client)\n</code></pre>"},{"location":"ai/integrations/autogen/#client-setup-databricks","title":"Client Setup - Databricks","text":"<p>Initialize a client for managing Unity Catalog functions in a Databricks workspace and set it as the global client.</p> <pre><code>from unitycatalog.ai.core.base import set_uc_function_client\nfrom unitycatalog.ai.core.databricks import DatabricksFunctionClient\n\nclient = DatabricksFunctionClient(\n    warehouse_id=\"your_warehouse_id\",  # replace with your warehouse_id\n    cluster_id=\"your_cluster_id\"       # optional, only pass when you want to use a cluster for function creation\n)\n\n# Set the default UC function client\nset_uc_function_client(client)\n</code></pre>"},{"location":"ai/integrations/autogen/#create-uc-functions-to-use-as-tools","title":"Create UC functions to use as tools","text":"<p>Define and create Python functions that will be stored in Unity Catalog</p> <pre><code>from typing import Annotated\n\nCATALOG = \"your_catalog\"\nSCHEMA = \"your_schema\"\n\ndef get_temperature(location: Annotated[str, \"Retrieves the current weather from a provided location.\"]) -&gt; str:\n    \"\"\"\n    Returns the current temperature from a given location in degrees Celsius.\n    \"\"\"\n    return \"31.9 C\"\n\ndef temp_c_to_f(celsius: Annotated[str, \"Temperature in Celsius\"]) -&gt; float:\n    \"\"\"\n    Converts temperature from Celsius to Fahrenheit.\n    \"\"\"\n    celsius = float(celsius)\n    fahrenheit = (9/5 * celsius) + 32\n    return fahrenheit\n\n# Create UC functions\nfunction_info_temp_c_to_f = client.create_python_function(\n    func=temp_c_to_f,\n    catalog=CATALOG,\n    schema=SCHEMA\n)\n\nfunction_info_get_temp = client.create_python_function(\n    func=get_temperature,\n    catalog=CATALOG,\n    schema=SCHEMA\n)\n</code></pre>"},{"location":"ai/integrations/autogen/#create-a-toolkit-instance","title":"Create a Toolkit instance","text":"<p>Create an instance of the toolkit to interface with the defined UC functions. This definition will be the bridge between UC functions and AutoGen's tool calling interface.</p> <pre><code>from unitycatalog.ai.autogen.toolkit import UCFunctionToolkit\n\n# Define the full function names in 'catalog.schema.function_name' format\nfunction_names = [\n    f\"{CATALOG}.{SCHEMA}.get_temperature\",\n    f\"{CATALOG}.{SCHEMA}.temp_c_to_f\"\n]\n\n# Create an instance of the toolkit with the specified functions\ntoolkit = UCFunctionToolkit(function_names=function_names, client=client)\n\n# Access the tool definitions expected by Autogen's SDK\ntools = toolkit.tools\n</code></pre>"},{"location":"ai/integrations/autogen/#use-the-tools-with-a-conversable-agent-in-autogen","title":"Use the tools with a Conversable Agent in AutoGen","text":"<p>Set up agents and register the tools to enable conversations that utilize the UC functions.</p> <pre><code>import os\nfrom autogen import ConversableAgent, GroupChat, GroupChatManager\n\n# Set up API keys\nOPENAI_API_KEY = os.environ[\"OPENAI_API_KEY\"]\n\n# Define the assistant agent that suggests tool calls\nassistant = ConversableAgent(\n    name=\"Assistant\",\n    system_message=\"\"\"You are a helpful AI assistant.\nYou can tell the temperature of a location using function calling.\nReturn 'TERMINATE' when the task is done and the final answer is returned.\"\"\",\n    llm_config={\"config_list\": [{\"model\": \"gpt-4\", \"api_key\": OPENAI_API_KEY}]},\n)\n\n# The user proxy agent is used for interacting with the assistant agent\n# and executes tool calls\nuser_proxy = ConversableAgent(\n    name=\"User\",\n    llm_config=False,\n    is_termination_msg=lambda msg: msg.get(\"content\") is not None and \"TERMINATE\" in msg[\"content\"],\n    human_input_mode=\"NEVER\",\n)\n\n# Define another agent for additional tool execution if needed\nconverter = ConversableAgent(\n    name=\"Fahrenheit_converter\",\n    system_message=\"You are a helpful AI assistant.\",\n    llm_config={\"config_list\": [{\"model\": \"gpt-4\", \"api_key\": OPENAI_API_KEY}]},\n)\n</code></pre>"},{"location":"ai/integrations/autogen/#registering-the-tools-with-the-defined-agents","title":"Registering the tools with the defined Agents","text":"<p>There are two ways to register your UC functions as tools from the toolkit instance:</p> <p>Option 1: Register each tool with the appropriate agents to enable function calling within conversations.</p> <pre><code># Define agent pairs for each tool\nagent_pairs_get_temp = {\"callers\": assistant, \"executors\": user_proxy}\nagent_pairs_temp_c_to_f = {\"callers\": converter, \"executors\": user_proxy}\n\n# Register the 'get_temperature' tool with its agent pair\ntool_get_temp = next(tool for tool in tools if 'get_temperature' in tool.name)\ntool_get_temp.register_function(\n    callers=agent_pairs_get_temp['callers'],\n    executors=agent_pairs_get_temp['executors']\n)\n\n# Register the 'temp_c_to_f' tool with its agent pair\ntool_temp_c_to_f = next(tool for tool in tools if 'temp_c_to_f' in tool.name)\ntool_temp_c_to_f.register_function(\n    callers=agent_pairs_temp_c_to_f['callers'],\n    executors=agent_pairs_temp_c_to_f['executors']\n)\n</code></pre> <p>Option 2: Alternatively, register all tools at once using the <code>register_with_agents</code> method from the <code>UCFunctionToolkit</code> object:</p> <pre><code>toolkit.register_with_agents(\n    callers=[assistant, converter],\n    executors=[user_proxy]\n)\n</code></pre>"},{"location":"ai/integrations/autogen/#initialize-a-conversation-with-your-agents","title":"Initialize a Conversation with your Agents","text":"<p>Create a group chat and initiate a conversation that utilizes the registered tools.</p> <pre><code>groupchat = GroupChat(\n    agents=[user_proxy, assistant, converter],\n    messages=[],\n    max_round=10\n)\nmanager = GroupChatManager(\n    groupchat=groupchat,\n    llm_config={\"config_list\": [{\"model\": \"gpt-4\", \"api_key\": OPENAI_API_KEY}]}\n)\n\nuser_proxy.initiate_chat(\n    manager, message=\"What is the temperature in SF in Fahrenheit?\"\n)\n</code></pre> <p>An example output of this chat interaction is:</p> <pre><code>What is the temperature in SF in Fahrenheit?\n\n--------------------------------------------------------------------------------\nNext speaker: Assistant\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; USING AUTO REPLY...\nAssistant (to chat_manager):\n\n***** Suggested tool call: get_temperature *****\nArguments: \n{\n  \"location\": \"SF\"\n}\n***********************************************\n\n--------------------------------------------------------------------------------\nNext speaker: User\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; EXECUTING FUNCTION get_temperature...\nUser (to chat_manager):\n\n***** Response from calling tool *****\n{\"format\": \"SCALAR\", \"value\": \"31.9 C\", \"truncated\": false}\n***********************************************\n\n--------------------------------------------------------------------------------\nNext speaker: Fahrenheit_converter\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; USING AUTO REPLY...\nFahrenheit_converter (to chat_manager):\n\n***** Suggested tool call: temp_c_to_f *****\nArguments: \n{\n  \"celsius\": \"31.9\"\n}\n***********************************************\n\n--------------------------------------------------------------------------------\nNext speaker: User\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; EXECUTING FUNCTION temp_c_to_f...\nUser (to chat_manager):\n\n***** Response from calling tool *****\n{\"format\": \"SCALAR\", \"value\": \"89.42\", \"truncated\": false}\n***********************************************\n\n--------------------------------------------------------------------------------\nNext speaker: Assistant\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; USING AUTO REPLY...\nAssistant (to chat_manager):\n\nThe temperature in SF is 89.42\u00b0F.\n\n--------------------------------------------------------------------------------\nNext speaker: User\nUser (to chat_manager):\n\n--------------------------------------------------------------------------------\nNext speaker: User\nUser (to chat_manager):\n\n--------------------------------------------------------------------------------\nNext speaker: Assistant\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; USING AUTO REPLY...\nAssistant (to chat_manager):\n\nTERMINATE\n--------------------------------------------------------------------------------\n</code></pre>"},{"location":"ai/integrations/crewai/","title":"Using Unity Catalog AI with CrewAI","text":"<p>Integrate Unity Catalog AI with the CrewAI SDK to utilize functions defined in Unity Catalog (UC) as tools within CrewAI LLM calls. This guide covers installation, setup, caveats, environment variables, public APIs, and examples to help you get started.</p>"},{"location":"ai/integrations/crewai/#installation","title":"Installation","text":"<p>Install the Unity Catalog AI CrewAI integration from PyPI:</p> <pre><code>pip install unitycatalog-crewai\n</code></pre>"},{"location":"ai/integrations/crewai/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python version: Python 3.10 or higher is required.</li> </ul>"},{"location":"ai/integrations/crewai/#unity-catalog","title":"Unity Catalog","text":"<p>Ensure that you have a functional UC server set up and that you are able to access the catalog and schema where defined functions are stored.</p>"},{"location":"ai/integrations/crewai/#databricks-unity-catalog","title":"Databricks Unity Catalog","text":"<p>To interact with Databricks Unity Catalog, install the optional package dependency when installing the integration package:</p> <pre><code>pip install unitycatalog-crewai[databricks]\n</code></pre>"},{"location":"ai/integrations/crewai/#authentication-with-databricks-unity-catalog","title":"Authentication with Databricks Unity Catalog","text":"<p>To use Databricks-managed Unity Catalog with this package, follow the Databricks CLI authentication instructions to authenticate to your workspace and ensure that your access token has workspace-level privileges for managing UC functions.</p>"},{"location":"ai/integrations/crewai/#tutorial","title":"Tutorial","text":""},{"location":"ai/integrations/crewai/#client-setup","title":"Client Setup","text":"<p>Create an instance of the Functions Client</p> <pre><code>from unitycatalog.client import ApiClient, Configuration\nfrom unitycatalog.ai.core.client import UnitycatalogFunctionClient\n\nconfig = Configuration()\n# This is the default address when starting a UnityCatalog server locally. Update this to the uri\n# of your running UnityCatalog server.\nconfig.host = \"http://localhost:8080/api/2.1/unity-catalog\"\n\n# Create the UnityCatalog client\napi_client = ApiClient(configuration=config)\n\n# Use the UnityCatalog client to create an instance of the AI function client\nclient = UnitycatalogFunctionClient(api_client=api_client)\n</code></pre>"},{"location":"ai/integrations/crewai/#client-setup-databricks","title":"Client Setup - Databricks","text":"<p>Initialize a client for managing Unity Catalog functions in a Databricks workspace and set it as the global client.</p> <pre><code>from unitycatalog.ai.core.base import set_uc_function_client\nfrom unitycatalog.ai.core.databricks import DatabricksFunctionClient\n\nclient = DatabricksFunctionClient(\n    warehouse_id=\"your_warehouse_id\",  # replace with your warehouse_id\n    cluster_id=\"your_cluster_id\"       # optional, only pass when you want to use a cluster for function creation\n)\n\n# Set the default UC function client\nset_uc_function_client(client)\n</code></pre>"},{"location":"ai/integrations/crewai/#create-a-uc-function-to-use-as-a-tool","title":"Create a UC function to use as a tool","text":"<p>Define and create Python functions that will be stored in Unity Catalog</p> <pre><code># Replace with your own catalog and schema where your function will be stored\nCATALOG = \"your_catalog\"\nSCHEMA = \"your_schema\"\nfunction_name = f\"{CATALOG}.{SCHEMA}.make_uppercase\"\n\ndef make_uppercase(s: str) -&gt; str:\n    \"\"\"\n    Convert the string to uppercase.\n    \"\"\"\n    return s.upper()\n\n# Create UC function\nresponse = client.create_python_function(\n    func=make_uppercase,\n    catalog=CATALOG,\n    schema=SCHEMA\n)\n</code></pre>"},{"location":"ai/integrations/crewai/#creating-an-instance-of-a-crewai-compatible-tool","title":"Creating an Instance of a CrewAI-Compatible Tool","text":"<p>CrewAI Tools are callable external functions that GenAI applications can use (invoked by an LLM), which are exposed with a UC interface through the use of the <code>unitycatalog-crewai</code> package via the <code>UCFunctionToolkit</code> API.</p> <pre><code>from unitycatalog.ai.crewai.toolkit import UCFunctionToolkit\n\n# Pass the UC function name that we created to the constructor\ntoolkit = UCFunctionToolkit(function_names=[function_name])\n\n# Get the CrewAI-compatible tools definitions\ntools = toolkit.tools\n</code></pre>"},{"location":"ai/integrations/crewai/#validating-the-tool","title":"Validating the tool","text":"<p>Before integrating the tool with CrewAI, you can validate its functionality by calling it directly:</p> <pre><code>my_tool = tools[0]\n\n# Call the tool function with the necessary arguments\nresult = my_tool.fn(**{\"s\": \"lowercase string\"})\nprint(result)  # Output: \"LOWERCASE STRING\"\n</code></pre>"},{"location":"ai/integrations/crewai/#utilizing-the-function-as-a-tool-within-a-crewai-crew","title":"Utilizing the Function as a Tool within a CrewAI 'Crew'","text":"<p>With the interface to your UC function defined as a CrewAI tool collection, you can directly use it within a CrewAI <code>Crew</code>. This involves setting up agents, defining tasks, and executing the crew to perform desired operations using the integrated tools.</p> <pre><code>import os\nfrom crewai import Agent, Task, Crew\n\n# Set up API keys\nos.environ[\"OPENAI_API_KEY\"] = \"your_openai_api_key\"\n\n# Create agents\ncoder = Agent(\n    role=\"Simple Coder\",\n    goal=\"Create a program that prints 'Hello Unity Catalog!'\",\n    backstory=\"Enjoys solving coding challenges\",\n    expected_output=\"string\",\n    tools=tools,\n    verbose=True\n)\n\nreviewer = Agent(\n    role=\"Reviewer\",\n    goal=\"Ensure the coder calls the function and verifies the output\",\n    backstory=\"Meticulous and detail-oriented\",\n    expected_output=\"string\",\n    verbose=True\n)\n\n# Define tasks\nresearch = Task(\n    description=\"Call a tool to transform a string to uppercase\",\n    expected_output=\"string\",\n    agent=coder\n)\n\nreview = Task(\n    description=\"Review the tool call output. Once complete, stop.\",\n    expected_output=\"string\",\n    agent=reviewer,\n)\n\n# Assemble a crew with planning enabled\ncrew = Crew(\n    agents=[coder, reviewer],\n    tasks=[research, review],\n    verbose=True,\n    planning=True,  # Enable planning feature\n)\n\n# Execute tasks\ncrew.kickoff()\n</code></pre> <p>An example output:</p> <pre><code>[2024-10-08 14:29:25][INFO]: Planning the crew execution\n\n# Agent: Simple coder\n## Task: Call a tool1. **Agent Identification**: Identify the agent responsible for this task, which is \"Simple Coder\".\n\n2. **Agent Goal Confirmation**: Confirm the goal of the Simple Coder is to create a program that prints \"Hello Unity Catalog!\".\n\n3. **Tool Selection**: The appropriate tool to use is the `UnityCatalogTool` named `main__default__make_uppercase`.\n\n4. **Initial Setup**: Ensure the Simple Coder has access to the necessary environment to write and execute code.\n\n5. **Code Implementation**: The Simple Coder will write the following code snippet:\n   \\`\\`\\`python\n   def main():\n       print(\"Hello Unity Catalog!\")\n\n   main()\n   \\`\\`\\`\n   - The above code fulfills the requirement of printing \"Hello Unity Catalog!\" as expected.\n\n6. **Using the Tool**: The Simple Coder will then use the `UnityCatalogTool` to convert the string \"Hello Unity Catalog!\" to uppercase:\n   - Prepare the arguments schema for the tool:\n     - `s: \"Hello Unity Catalog!\"`.\n   - Call the tool function:\n   \\`\\`\\`python\n   result = main__default__make_uppercase(s=\"Hello Unity Catalog!\")\n   \\`\\`\\`\n\n7. **Output Handling**: The Simple Coder will ensure that the result of the tool call is stored and can be reviewed.\n\n\n\n# Agent: Simple coder\n## Thought: I will print \"Hello Unity Catalog!\" and then convert that string to uppercase using the specified tool.\n## Using tool: main__default__make_uppercase\n## Tool Input: \n\"{\\\"s\\\": \\\"Hello Unity Catalog!\\\"}\"\n## Tool Output: \n{\"format\": \"SCALAR\", \"value\": \"HELLO UNITY CATALOG!\", \"truncated\": false}\n\n\n# Agent: Simple coder\n## Final Answer: \nHELLO UNITY CATALOG!\n\n\n# Agent: reviewer\n## Task: Review the tool call output. Once complete, stop.1. **Agent Identification**: Identify the agent responsible for this task, which is \"Reviewer\".\n\n2. **Expected Outcome Review**: The Reviewer\u2019s goal is to ensure that the Simple Coder has called the function correctly and that it outputs the expected answer.\n\n3. **Output Review Process**: The Reviewer will retrieve the output generated by the Simple Coder's tool call to `main__default__make_uppercase`.\n   - The expected output should be the string \"HELLO UNITY CATALOG!\" since it is the uppercase conversion of the input.\n\n4. **Assessment**: The Reviewer will compare the received output against the expected output:\n   - If the output matches the expected output (\"HELLO UNITY CATALOG!\"), then the function call is verified as successful.\n   - If there is a discrepancy, the Reviewer will notify the Simple Coder to correct the issue.\n\n5. **Completion**: Once the review is complete and the expected output is confirmed:\n   - The Reviewer will log the result and confirm the completion of the task.\n   - The Reviewer will stop any further actions as the task is finished.\n\n\n# Agent: reviewer\n## Final Answer: \nThe output generated by the Simple Coder's tool call to `main__default__make_uppercase` has been reviewed. The expected output is \"HELLO UNITY CATALOG!\" which matches the received output perfectly. Therefore, the function call has been verified as successful, confirming that the task is complete. The result has been logged accordingly, and no further actions are needed as the task is finished.\n</code></pre>"},{"location":"ai/integrations/langchain/","title":"\ud83e\udd9c\ud83d\udd17 Using Unity Catalog AI with LangChain","text":"<p>Integrate Unity Catalog AI with LangChain to seamlessly use Unity Catalog (UC) functions as tools in agent applications. This guide covers installation, setup, and examples to help you get started.</p>"},{"location":"ai/integrations/langchain/#installation","title":"Installation","text":"<p>Install the Unity Catalog AI LangChain integration from PyPI:</p> <pre><code>pip install unitycatalog-langchain\n</code></pre>"},{"location":"ai/integrations/langchain/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python version: Python 3.10 or higher is required.</li> </ul>"},{"location":"ai/integrations/langchain/#unity-catalog","title":"Unity Catalog","text":"<p>Ensure that you have a functional UC server set up and that you are able to access the catalog and schema where defined functions are stored.</p>"},{"location":"ai/integrations/langchain/#databricks-unity-catalog","title":"Databricks Unity Catalog","text":"<p>To interact with Databricks Unity Catalog, install the optional package dependency when installing the integration package:</p> <pre><code>pip install unitycatalog-langchain[databricks]\n</code></pre>"},{"location":"ai/integrations/langchain/#tutorial","title":"Tutorial","text":""},{"location":"ai/integrations/langchain/#client-setup","title":"Client Setup","text":"<p>Create an instance of the Functions Client</p> <pre><code>from unitycatalog.client import ApiClient, Configuration\nfrom unitycatalog.ai.core.client import UnitycatalogFunctionClient\n\nconfig = Configuration()\n# This is the default address when starting a UnityCatalog server locally. Update this to the uri\n# of your running UnityCatalog server.\nconfig.host = \"http://localhost:8080/api/2.1/unity-catalog\"\n\n# Create the UnityCatalog client\napi_client = ApiClient(configuration=config)\n\n# Use the UnityCatalog client to create an instance of the AI function client\nclient = UnitycatalogFunctionClient(api_client=api_client)\n</code></pre>"},{"location":"ai/integrations/langchain/#client-setup-databricks","title":"Client Setup - Databricks","text":"<p>Create an instance of the Unity Catalog Functions client</p> <pre><code>from unitycatalog.ai.core.databricks import DatabricksFunctionClient\n\nclient = DatabricksFunctionClient()\n</code></pre>"},{"location":"ai/integrations/langchain/#creating-a-uc-function","title":"Creating a UC function","text":"<p>Create a Python function within Unity Catalog</p> <pre><code>CATALOG = \"your_catalog\"\nSCHEMA = \"your_schema\"\n\nfunc_name = f\"{CATALOG}.{SCHEMA}.code_function\"\n\ndef code_function(code: str) -&gt; str:\n    \"\"\"\n    Executes Python code.\n\n    Args:\n        code (str): The python code to execute.\n    Returns:\n        str: The result of the execution of the Python code.\n    \"\"\"\n    import sys\n    from io import StringIO\n    stdout = StringIO()\n    sys.stdout = stdout\n    exec(code)\n    return stdout.getvalue()\n\nclient.create_python_function(\n    func=code_function,\n    catalog=CATALOG,\n    schema=SCHEMA\n)\n</code></pre>"},{"location":"ai/integrations/langchain/#creating-a-toolkit-instance","title":"Creating a toolkit instance","text":"<p>Here we create an instance of our UC function as a toolkit, then verify that the tool is behaving properly by executing the function.</p> <pre><code>from unitycatalog.ai.langchain.toolkit import UCFunctionToolkit\n\n# Create a UCFunctionToolkit that includes the UC function\ntoolkit = UCFunctionToolkit(function_names=[func_name])\n\n# Fetch the tools stored in the toolkit\ntools = toolkit.tools\npython_exec_tool = tools[0]\n\n# Execute the tool directly\nresult = python_exec_tool.invoke({\"code\": \"print(1 + 1)\"})\nprint(result)  # Outputs: 2\n</code></pre>"},{"location":"ai/integrations/langchain/#using-the-tool-in-a-langchain-agent","title":"Using the tool in a LangChain Agent","text":"<pre><code>from langchain.agents import AgentExecutor, create_tool_agent\nfrom langchain.llms import OpenAI\nfrom langchain.prompts import ChatPromptTemplate\n\n# Initialize the LLM (replace with your LLM of choice, if desired)\nllm = OpenAI(temperature=0)\n\n# Define the prompt\nprompt = ChatPromptTemplate.from_messages(\n    [\n        (\n            \"system\",\n            \"You are a helpful assistant. Make sure to use tool for information.\",\n        ),\n        (\"placeholder\", \"{chat_history}\"),\n        (\"human\", \"{input}\"),\n        (\"placeholder\", \"{agent_scratchpad}\"),\n    ]\n)\n\n# Define the agent, specifying the tools from the toolkit above\nagent = create_tool_calling_agent(llm, tools, prompt)\n\n# Create the agent executor\nagent_executor = AgentExecutor(agent=agent, tools=tools, verbose=True)\nagent_executor.invoke({\"input\": \"What is 36939 * 8922.4?\"})\n</code></pre>"},{"location":"ai/integrations/llamaindex/","title":"\ud83e\udd99 Using Unity Catalog AI with LlamaIndex","text":"<p>Integrate Unity Catalog AI with LlamaIndex to directly use UC functions as tools in LlamaIndex-based agent applications. This guide covers installation, client setup, and examples to get started.</p>"},{"location":"ai/integrations/llamaindex/#installation","title":"Installation","text":"<p>Install the Unity Catalog AI LlamaIndex integration from PyPI:</p> <pre><code>pip install unitycatalog-llamaindex\n</code></pre>"},{"location":"ai/integrations/llamaindex/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python version: Python 3.10 or higher is required.</li> </ul> <p>Note: Depending on what you're doing with LlamaIndex, you may need to install additional packages from PyPI.</p>"},{"location":"ai/integrations/llamaindex/#unity-catalog","title":"Unity Catalog","text":"<p>Ensure that you have a functional UC server set up and that you are able to access the catalog and schema where defined functions are stored.</p>"},{"location":"ai/integrations/llamaindex/#databricks-unity-catalog","title":"Databricks Unity Catalog","text":"<p>To interact with Databricks Unity Catalog, install the optional package dependency when installing the integration package:</p> <pre><code>pip install unitycatalog-llamaindex[databricks]\n</code></pre>"},{"location":"ai/integrations/llamaindex/#tutorial","title":"Tutorial","text":""},{"location":"ai/integrations/llamaindex/#client-setup","title":"Client Setup","text":"<p>Create an instance of the Functions Client</p> <pre><code>from unitycatalog.client import ApiClient, Configuration\nfrom unitycatalog.ai.core.client import UnitycatalogFunctionClient\n\nconfig = Configuration()\n# This is the default address when starting a UnityCatalog server locally. Update this to the uri\n# of your running UnityCatalog server.\nconfig.host = \"http://localhost:8080/api/2.1/unity-catalog\"\n\n# Create the UnityCatalog client\napi_client = ApiClient(configuration=config)\n\n# Use the UnityCatalog client to create an instance of the AI function client\nclient = UnitycatalogFunctionClient(api_client=api_client)\n</code></pre>"},{"location":"ai/integrations/llamaindex/#client-setup-databricks","title":"Client Setup - Databricks","text":"<p>Create an instance of the Unity Catalog Functions client</p> <pre><code>from unitycatalog.ai.core.databricks import DatabricksFunctionClient\n\nclient = DatabricksFunctionClient()\n</code></pre>"},{"location":"ai/integrations/llamaindex/#creating-a-uc-function","title":"Creating a UC function","text":"<p>Create a Python function within Unity Catalog</p> <pre><code>CATALOG = \"your_catalog\"\nSCHEMA = \"your_schema\"\n\nfunc_name = f\"{CATALOG}.{SCHEMA}.code_function\"\n\ndef code_function(code: str) -&gt; str:\n    \"\"\"\n    Executes Python code.\n\n    Args:\n        code (str): The python code to execute.\n    Returns:\n        str: The result of the execution of the Python code.\n    \"\"\"\n    import sys\n    from io import StringIO\n    stdout = StringIO()\n    sys.stdout = stdout\n    exec(code)\n    return stdout.getvalue()\n\nclient.create_python_function(\n    func=code_function,\n    catalog=CATALOG,\n    schema=SCHEMA\n)\n</code></pre>"},{"location":"ai/integrations/llamaindex/#creating-a-toolkit-instance","title":"Creating a toolkit instance","text":"<p>Here we create an instance of our UC function as a toolkit, then verify that the tool is behaving properly by executing the function.</p> <pre><code>from unitycatalog.ai.llama_index.toolkit import UCFunctionToolkit\n\n# Create a UCFunctionToolkit that includes the UC function\ntoolkit = UCFunctionToolkit(function_names=[func_name])\n\n# Fetch the tools stored in the toolkit\ntools = toolkit.tools\npython_exec_tool = tools[0]\n\n# Execute the tool directly\nresult = python_exec_tool.invoke({\"code\": \"print(1 + 1)\"})\nprint(result)  # Outputs: 2\n</code></pre>"},{"location":"ai/integrations/llamaindex/#using-the-tool-in-a-llamaindex-reactagent","title":"Using the tool in a LlamaIndex ReActAgent","text":"<p>With our interface to our UC function defined as a LlamaIndex tool collection, we can directly use it within a LlamaIndex agent application. Below, we are going to create a simple <code>ReActAgent</code> and verify that our agent properly calls our UC function.</p> <pre><code>from llama_index.llms.openai import OpenAI\nfrom llama_index.core.agent import ReActAgent\n\nllm = OpenAI()\n\nagent = ReActAgent.from_tools(tools, llm=llm, verbose=True)\n\nagent.chat(\"Please call a python execution tool to evaluate the result of 42 + 97.\")\n</code></pre>"},{"location":"ai/integrations/openai/","title":"Using Unity Catalog AI with the OpenAI SDK","text":"<p>Integrate Unity Catalog AI with OpenAI to directly use UC functions as tools in OpenAI interfaces. This guide covers installation, client setup, and examples to get started.</p>"},{"location":"ai/integrations/openai/#installation","title":"Installation","text":"<p>To get started with the <code>unitycatalog-openai</code> integration, install the following packages from PyPI:</p> <pre><code>pip install unitycatalog-openai\n</code></pre>"},{"location":"ai/integrations/openai/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python version: Python 3.10 or higher is required.</li> </ul>"},{"location":"ai/integrations/openai/#unity-catalog-server","title":"Unity Catalog Server","text":"<p>Ensure that you have a functional UC server set up and that you are able to access the catalog and schema where defined functions are stored.</p>"},{"location":"ai/integrations/openai/#databricks-unity-catalog","title":"Databricks Unity Catalog","text":"<p>To interact with Databricks Unity Catalog, install the optional package dependency when installing the integration package:</p> <pre><code>pip install unitycatalog-openai[databricks]\n</code></pre>"},{"location":"ai/integrations/openai/#tutorial","title":"Tutorial","text":""},{"location":"ai/integrations/openai/#client-setup","title":"Client Setup","text":"<p>Create an instance of the Functions Client</p> <pre><code>from unitycatalog.client import ApiClient, Configuration\nfrom unitycatalog.ai.core.client import UnitycatalogFunctionClient\n\nconfig = Configuration()\n# This is the default address when starting a UnityCatalog server locally. Update this to the uri\n# of your running UnityCatalog server.\nconfig.host = \"http://localhost:8080/api/2.1/unity-catalog\"\n\n# Create the UnityCatalog client\napi_client = ApiClient(configuration=config)\n\n# Use the UnityCatalog client to create an instance of the AI function client\nclient = UnitycatalogFunctionClient(api_client=api_client)\n</code></pre>"},{"location":"ai/integrations/openai/#client-setup-databricks","title":"Client Setup - Databricks","text":"<p>Create an instance of the Unity Catalog Functions client</p> <pre><code>from unitycatalog.ai.core.databricks import DatabricksFunctionClient\n\nclient = DatabricksFunctionClient()\n</code></pre>"},{"location":"ai/integrations/openai/#creating-a-uc-function","title":"Creating a UC function","text":"<p>Create a Python function within Unity Catalog</p> <pre><code>CATALOG = \"your_catalog\"\nSCHEMA = \"your_schema\"\n\nfunc_name = f\"{CATALOG}.{SCHEMA}.code_function\"\n\ndef code_function(code: str) -&gt; str:\n    \"\"\"\n    Executes Python code.\n\n    Args:\n        code (str): The python code to execute.\n    Returns:\n        str: The result of the execution of the Python code.\n    \"\"\"\n    import sys\n    from io import StringIO\n    stdout = StringIO()\n    sys.stdout = stdout\n    exec(code)\n    return stdout.getvalue()\n\nclient.create_python_function(\n    func=code_function,\n    catalog=CATALOG,\n    schema=SCHEMA\n)\n</code></pre>"},{"location":"ai/integrations/openai/#creating-a-toolkit-instance","title":"Creating a toolkit instance","text":"<p>Here we create an instance of our UC function as a toolkit, then verify that the tool is behaving properly by executing the function. OpenAI function calling allows a subset of their more recent models to accept external tool calling capabilities. Ensure that the model that you are selecting to interface with has the capability to accept tool definitions.</p> <pre><code>from unitycatalog.ai.openai.toolkit import UCFunctionToolkit\n\n# Create a UCFunctionToolkit that includes the UC function\ntoolkit = UCFunctionToolkit(function_names=[func_name])\n\n# Fetch the tools stored in the toolkit\ntools = toolkit.tools\npython_exec_tool = tools[0]\n\n# Execute the tool directly\nresult = python_exec_tool.invoke({\"code\": \"print(1 + 1)\"})\nprint(result)  # Outputs: 2\n</code></pre>"},{"location":"ai/integrations/openai/#send-a-tool-enabled-question-to-openai","title":"Send a tool-enabled question to OpenAI","text":"<p>With the client defined, we can now submit the tools along with our request to our defined OpenAI model.</p> <pre><code>import openai\n\nmessages = [\n            {\n                \"role\": \"system\",\n                \"content\": \"You are a helpful customer support assistant. Use the supplied tools to assist the user.\",\n            },\n            {\"role\": \"user\", \"content\": \"What is the result of 2**10?\"},\n        ]\nresponse = openai.chat.completions.create(\n                model=\"gpt-4o-mini\",\n                messages=messages,\n                tools=tools,\n            )\n# check the model response\nprint(response)\n</code></pre> <p>After the response is returned from OpenAI, you will need to invoke the UC function call to generate the response answer back to OpenAI.</p> <pre><code>import json\n\n# OpenAI will only send a single request per tool call\ntool_call = response.choices[0].message.tool_calls[0]\n# extract arguments that the UC function will need for its execution\narguments = json.loads(tool_call.function.arguments)\n\n# execute the function based on the arguments\nresult = client.execute_function(func_name, arguments)\nprint(result.value)\n</code></pre> <p>Once the answer has been returned, you can construct the response payload for the subsequent call to OpenAI.</p> <pre><code># Create a message containing the result of the function call\nfunction_call_result_message = {\n    \"role\": \"tool\",\n    \"content\": json.dumps({\"content\": result.value}),\n    \"tool_call_id\": tool_call.id,\n}\nassistant_message = response.choices[0].message.to_dict()\ncompletion_payload = {\n    \"model\": \"gpt-4o-mini\",\n    \"messages\": [*messages, assistant_message, function_call_result_message],\n}\n\n# Generate final response\nopenai.chat.completions.create(\n    model=completion_payload[\"model\"], messages=completion_payload[\"messages\"]\n)\n</code></pre>"},{"location":"ai/integrations/openai/#utilities","title":"Utilities","text":"<p>To simplify the process of crafting the tool response, the ucai-openai package has a utility, <code>generate_tool_call_messages</code>, that will convert the <code>ChatCompletion</code> response message from OpenAI so that it can be used for response generation.</p> <pre><code>from unitycatalog.ai.openai.utils import generate_tool_call_messages\n\nmessages = generate_tool_call_messages(response=response, client=client)\nprint(messages)\n</code></pre> <p>Note: if the response contains multiple <code>choice</code> entries, you can pass the <code>choice_index</code> argument when calling <code>generate_tool_call_messages</code> to choose which <code>choice</code> entry to utilize. There is currently no support for processing multiple <code>choice</code> entries.</p>"},{"location":"integrations/","title":"Unity Catalog Integrations","text":"<p>Unity Catalog integrates with many other great tools. Below is a non-exhaustive list. See the respective sections for more detail.</p> <ul> <li>Celerdata</li> <li>Daft</li> <li>DuckDB</li> <li>PuppyGraph</li> <li>Spark</li> <li>SpiceAI</li> <li>Trino</li> <li>XTable</li> </ul>"},{"location":"integrations/unity-catalog-celerdata/","title":"CelerData Integration","text":"<p>This document walks through the steps to use CelerData Cloud BYOC to query data governed by Unity Catalog OSS. CelerData is a lakehouse query engine that delivers data warehouse performance on open data lakes.</p>"},{"location":"integrations/unity-catalog-celerdata/#pre-requisites","title":"Pre-requisites","text":"<ul> <li>CelerData Cloud BYOC Environment: You can follow this link to deploy one with the     30-day free trial.</li> </ul>"},{"location":"integrations/unity-catalog-celerdata/#deploying-unity-catalog","title":"Deploying Unity Catalog","text":"<p>In this example, for simplicity, we query the data that comes with the  UC quickstart, which is stored on local disk. For this to work, you would need to deploy a UC server on every FE and BE/CN in your CelerData environment, under the same path.</p> <p>SSH into each FE and BE/CN node, install JDK 17, and under the same path, Clone, build, start Unity Catalog:</p> <pre><code>sudo apt install openjdk-17-jdk\n\ngit clone https://github.com/unitycatalog/unitycatalog.git\n\ncd unitycatalog\n\nbuild/sbt package\n\nbin/start-uc-server\n</code></pre>"},{"location":"integrations/unity-catalog-celerdata/#connecting-celerdata-cloud-byoc-to-unity-catalog","title":"Connecting CelerData Cloud BYOC to Unity Catalog","text":"<p>Now we connect CelerData Cloud BYOC to Unity Catalog through the CelerData Unity external catalog feature.</p> <pre><code>create external catalog uc properties (\n\"type\"=\"deltalake\",\n\"hive.metastore.type\" = \"unity\",\n\"databricks.host\"= \"http://127.0.0.1:8080\",\n\"databricks.token\" = \"not-used\",\n\"databricks.catalog.name\" = \"unity\",\n\"aws.s3.region\"= \"us-west-2\");\n</code></pre> <p>Check whether the connection is successful and query the data.</p> <pre><code>-- show databases from the catalog\nshow databases from uc;\n\n-- show tables from the `default` database\nshow tables from uc.`default`;\n\n-- query\nselect * from uc.`default`.marksheet;\n</code></pre>"},{"location":"integrations/unity-catalog-daft/","title":"Unity Catalog Daft Integration","text":"<p>This page shows you how to use Unity Catalog with Daft.</p> <p>Daft is a library for parallel and distributed processing of multimodal data.</p>"},{"location":"integrations/unity-catalog-daft/#set-up","title":"Set up","text":"<p>To start, install Daft with the extra Unity Catalog dependencies using:</p> <pre><code>pip install -U \"getdaft[unity,deltalake]\"\n</code></pre> <p>Then import Daft and the <code>UnityCatalog</code> abstraction:</p> <pre><code>import daft\nfrom daft.unity_catalog import UnityCatalog\n</code></pre> <p>You need to have a Unity Catalog server running to connect to.</p> <p>For testing purposes, you can spin up a local server by running the code below in a terminal:</p> <pre><code>bin/start-uc-server\n</code></pre>"},{"location":"integrations/unity-catalog-daft/#connect-daft-to-unity-catalog","title":"Connect Daft to Unity Catalog","text":"<p>Use the <code>UnityCatalog</code> abstraction to point Daft to your UC server.</p> <p>This object requires an <code>endpoint</code> and a <code>token</code>. If you launched the UC server locally using the command above then you can use the values below. Otherwise, substitute the <code>endpoint</code> and <code>token</code> values with the corresponding values for your UC server.</p> <pre><code># point Daft to your UC server\nunity = UnityCatalog(\n    endpoint=\"http://127.0.0.1:8080\",\n    token=\"not-used\",\n)\n</code></pre> <p>You can also connect to a Unity Catalog in your Databricks workspace by using the following setting:</p> <pre><code>endpoint = \"https://&lt;databricks_workspace_id&gt;.cloud.databricks.com\"\n</code></pre> <p>Once you're connected, you can list all your available catalogs using:</p> <pre><code>&gt; print(unity.list_catalogs())\n['unity']\n</code></pre> <p>You can list all available schemas in a given catalog:</p> <pre><code>&gt; print(unity.list_schemas(\"unity\"))\n['unity.default']\n</code></pre> <p>And you can list all the available tables in a given schema:</p> <pre><code>print(unity.list_tables(\"unity.default\"))\n['unity.default.numbers', 'unity.default.marksheet_uniform', 'unity.default.marksheet']\n</code></pre>"},{"location":"integrations/unity-catalog-daft/#load-unity-tables-into-daft-dataframe","title":"Load Unity Tables into Daft DataFrame","text":"<p>You can use Daft to read Delta Lake tables in a Unity Catalog.</p> <p>First, point Daft to your Delta table stored in your Unity Catalog:</p> <pre><code>unity_table = unity.load_table(\"unity.default.numbers\")\n</code></pre> <p>Unity Catalog tables are stored in the Delta Lake format.</p> <p>Simply read your table using the Daft <code>read_deltalake</code> method:</p> <pre><code>&gt; df = daft.read_deltalake(unity_table)\n&gt; df.show()\n\nas_int  as_double\n564     188.755356\n755     883.610563\n644     203.439559\n75      277.880219\n42      403.857969\n680     797.691220\n821     767.799854\n484     344.003740\n477     380.678561\n131     35.443732\n294     209.322436\n150     329.197303\n539     425.661029\n247     477.742227\n958     509.371273\n</code></pre> <p>Any subsequent filter operations on the Daft <code>df</code> DataFrame object will be correctly optimized to take advantage of Delta Lake features.</p> <pre><code>&gt; df = df.where(df[\"as_int\"] &gt; 500)\n&gt; df.show()\n\nas_int   as_double\n564      188.755356\n755      883.610563\n644      203.439559\n680      797.691220\n821      767.799854\n539      425.661029\n958      509.371273\n</code></pre> <p>Daft support for Unity Catalog is under rapid development. Refer to the Daft documentation for more information.</p>"},{"location":"integrations/unity-catalog-duckdb/","title":"Unity Catalog DuckDB Integration","text":""},{"location":"integrations/unity-catalog-duckdb/#operate-on-delta-tables-with-duckdb","title":"Operate on Delta tables with DuckDB","text":"<p>To try operating on Delta tables with DuckDB, you will have to install it (at least version 1.0).</p> <p>Let's start DuckDB and install a couple of extensions. To start DuckDB, run the command <code>duckdb</code> in the terminal.</p> <p>Then, in the DuckDB shell, run the following commands:</p> <pre><code>install uc_catalog from core_nightly;\nload uc_catalog;\ninstall delta;\nload delta;\n</code></pre> <p>If you have installed these extensions before, you may have to run <code>update extensions</code> and restart DuckDB for the following steps to work.</p> <p>Now that we have DuckDB all set up, let's try connecting to UC by specifying a secret.</p> <pre><code>CREATE SECRET (\n      TYPE UC,\n      TOKEN 'not-used',\n      ENDPOINT 'http://127.0.0.1:8080',\n      AWS_REGION 'us-east-2'\n );\n</code></pre> <p>You should see it print a short table saying <code>Success</code> = <code>true</code>. Next we can attach the <code>unity</code> catalog to DuckDB.</p> <pre><code>ATTACH 'unity' AS unity (TYPE UC_CATALOG);\n</code></pre> <p>Now we are ready to query. Try the following</p> <pre><code>SHOW ALL TABLES;\nSELECT * from unity.default.numbers;\n</code></pre> <p>You should see the tables listed and the contents of the <code>numbers</code> table printed. To quit DuckDB, run the command <code>Ctrl+D</code> or type <code>.exit</code> in the DuckDB shell.</p>"},{"location":"integrations/unity-catalog-puppygraph/","title":"Unity Catalog PuppyGraph Integration","text":"<p>This document walks through how to use PuppyGraph to query data from Delta tables registered in Unity Catalog as a graph.</p>"},{"location":"integrations/unity-catalog-puppygraph/#prerequisites","title":"Prerequisites","text":"<ul> <li>JDK 17 to build and run Unity Catalog and Spark</li> <li>Docker</li> <li>This repository <code>unitycatalog</code> cloned</li> <li>Spark downloaded</li> </ul>"},{"location":"integrations/unity-catalog-puppygraph/#build-the-unity-server-and-spark-support","title":"Build the Unity Server and Spark support","text":"<p>Run the command From the cloned repository root directory</p> <pre><code>build/sbt clean package publishLocal spark/publishLocal\n</code></pre>"},{"location":"integrations/unity-catalog-puppygraph/#run-the-unity-catalog-server","title":"Run the Unity Catalog Server","text":"<p>Run the command to start a Unity Server.</p> <pre><code>./bin/start-uc-server\n</code></pre> <p>For the remaining steps, continue in a different terminal.</p>"},{"location":"integrations/unity-catalog-puppygraph/#create-tables-under-the-unity-catalog","title":"Create Tables under the Unity Catalog","text":"<p>Create a catalog <code>puppygraph</code> and several Delta tables under the schema <code>modern</code> in that catalog.</p> <pre><code>./bin/uc catalog create --name puppygraph\n./bin/uc schema create --name modern --catalog puppygraph\n./bin/uc table create --full_name puppygraph.modern.person --columns \"id STRING, name STRING, age INT\" --storage_location /tmp/puppygraph/person/ --format DELTA\n./bin/uc table create --full_name puppygraph.modern.knows --columns \"id STRING, from_id STRING, to_id STRING, weight DOUBLE\" --storage_location /tmp/puppygraph/knowns/ --format DELTA\n./bin/uc table create --full_name puppygraph.modern.software --columns \"id STRING, name STRING, lang STRING\" --storage_location /tmp/puppygraph/software/ --format DELTA\n./bin/uc table create --full_name puppygraph.modern.created --columns \"id STRING, from_id STRING, to_id STRING, weight DOUBLE\" --storage_location /tmp/puppygraph/created/ --format DELTA\n</code></pre>"},{"location":"integrations/unity-catalog-puppygraph/#load-data-into-the-tables","title":"Load Data into the Tables","text":"<p>Run the command from the Spark folder to start a Spark SQL shell .</p> <pre><code>./bin/spark-sql \\\n  --packages \\\n    io.delta:delta-spark_2.12:3.2.0,io.unitycatalog:unitycatalog-spark:0.2.0-SNAPSHOT \\\n  --conf spark.sql.extensions=io.delta.sql.DeltaSparkSessionExtension \\\n  --conf spark.sql.catalog.spark_catalog=org.apache.spark.sql.delta.catalog.DeltaCatalog \\\n  --conf spark.sql.catalog.puppygraph=io.unitycatalog.spark.UCSingleCatalog \\\n  --conf spark.sql.catalog.puppygraph.uri=http://localhost:8080\n</code></pre> <p>Run the following SQL to insert data into the Delta tables.</p> <pre><code>insert into puppygraph.modern.person VALUES\n                                         ('v1', 'marko', 29),\n                                         ('v2', 'vadas', 27),\n                                         ('v4', 'josh', 32),\n                                         ('v6', 'peter', 35);\nINSERT INTO puppygraph.modern.software VALUES\n                                           ('v3', 'lop', 'java'),\n                                           ('v5', 'ripple', 'java');\nINSERT INTO puppygraph.modern.created VALUES\n                                          ('e9', 'v1', 'v3', 0.4),\n                                          ('e10', 'v4', 'v5', 1.0),\n                                          ('e11', 'v4', 'v3', 0.4),\n                                          ('e12', 'v6', 'v3', 0.2);\nINSERT INTO puppygraph.modern.knows VALUES\n                                        ('e7', 'v1', 'v2', 0.5),\n                                        ('e8', 'v1', 'v4', 1.0);\n</code></pre> <p>Exit the Spark SQL shell after data insertion is done.</p>"},{"location":"integrations/unity-catalog-puppygraph/#querying-the-tables-as-a-graph","title":"Querying the Tables as a Graph","text":"<p>Start PuppyGraph using Docker. Here we map the PuppyGraph port <code>8081</code> to <code>9081</code> on the host.</p> <pre><code>docker run -p 9081:8081 -p 8182:8182 -p 7687:7687 \\\n-v /tmp/puppygraph:/tmp/puppygraph \\\n--name puppy --rm -itd puppygraph/puppygraph:stable\n</code></pre> <p>Create the schema.json and replace <code>&lt;host-name&gt;</code> with your host ip address.</p> <pre><code>{\n    \"catalogs\": [\n        {\n            \"name\": \"puppygraph\", \n            \"type\": \"deltalake\", \n            \"metastore\": {\n                \"type\": \"unity\", \n                \"host\": \"http://&lt;host-name&gt;:8081\", \n                \"token\": \"no-use\", \n                \"databricksCatalogName\": \"puppygraph\"\n            }\n        }\n    ], \n    \"vertices\": [\n        {\n            \"label\": \"person\", \n            \"attributes\": [\n                { \"type\": \"String\", \"name\": \"name\" }, \n                { \"type\": \"Int\"   , \"name\": \"age\"  }\n            ], \n            \"mappedTableSource\": {\n                \"catalog\": \"puppygraph\", \n                \"schema\": \"modern\", \n                \"table\": \"person\", \n                \"metaFields\": {\"id\": \"id\"}\n            }\n        }, \n        {\n            \"label\": \"software\", \n            \"attributes\": [\n                { \"type\": \"String\", \"name\": \"name\" }, \n                { \"type\": \"String\", \"name\": \"lang\" }\n            ], \n            \"mappedTableSource\": {\n                \"catalog\": \"puppygraph\", \n                \"schema\": \"modern\", \n                \"table\": \"software\", \n                \"metaFields\": {\"id\": \"id\"}\n            }\n        }\n    ], \n    \"edges\": [\n        {\n            \"label\": \"knows\",\n            \"from\": \"person\", \n            \"to\": \"person\", \n            \"attributes\": [ {\"type\": \"Double\", \"name\": \"weight\"} ], \n            \"mappedTableSource\": {\n                \"catalog\": \"puppygraph\", \n                \"schema\": \"modern\", \n                \"table\": \"knows\",\n                \"metaFields\": {\"from\": \"from_id\", \"id\": \"id\", \"to\": \"to_id\"}\n            }\n        }, \n        {\n            \"label\": \"created\", \n            \"from\": \"person\", \n            \"to\": \"software\", \n            \"attributes\": [ {\"type\": \"Double\", \"name\": \"weight\"} ], \n            \"mappedTableSource\": {\n                \"catalog\": \"puppygraph\", \n                \"schema\": \"modern\", \n                \"table\": \"created\", \n                \"metaFields\": {\"from\": \"from_id\", \"id\": \"id\", \"to\": \"to_id\"}\n            }\n        }\n    ]\n}\n</code></pre> <p>Upload the schema to PuppyGraph. Note here port is 9081 as 8081 is used by Unity Catalog.</p> <pre><code>curl -XPOST -H \"content-type: application/json\" --data-binary @./schema.json --user \"puppygraph:puppygraph123\" localhost:9081/schema\n</code></pre> <p>Start a PuppyGraph Gremlin Console to query the graph.</p> <pre><code>docker exec -it puppygraph ./bin/console\n</code></pre> <p>Input the following query string to get all the software created by people that marko knows.</p> <pre><code>g.V().has(\"name\", \"marko\").out(\"knows\").out(\"created\").valueMap()\n</code></pre> <p>The output should be like this:</p> <pre><code>puppy-gremlin&gt; g.V().has(\"name\", \"marko\").out(\"knows\").out(\"created\").valueMap()\nDone! Elapsed time: 0.080s, rows: 2\n==&gt;map[lang:java name:lop]\n==&gt;map[lang:java name:ripple]\n</code></pre> <p>You can also use Web UI for more features like graph visualization and a notebook-style query interface.</p>"},{"location":"integrations/unity-catalog-puppygraph/#see-also","title":"See Also","text":"<ul> <li>Querying Unity Catalog Data as a Graph</li> <li>The Internals of Unity Catalog | Spark Connector</li> </ul>"},{"location":"integrations/unity-catalog-spark/","title":"Unity Catalog Apache Spark\u2122 Integration","text":"<p>This page explains how to create Unity Catalog tables with Apache Spark\u2122.</p> <p>Apache Spark is a multi-language engine for executing data engineering, data science, and machine learning on single-node machines or clusters.</p> <p>Integrating Apache Spark with Unity Catalog offers significant advantages over traditional catalog solutions. Unity Catalog provides unified governance across both data and AI assets, fine-grained access control down to the column level, automated data lineage tracking, and seamless interoperability with various lakehouse formats and compute engines. It enables centralized metadata management, simplified data discovery, and enhanced security. The credential vending capability of Unity Catalog is particularly noteworthy as it allows Apache Spark to securely access data stored in Unity Catalog through a controlled mechanism.</p> <ul> <li>Neatly organizing data in tables and volumes in the Unity Catalog hierarchy makes it a lot easier to write Spark code.</li> <li>Make it easier to decouple business logic from file paths.</li> <li>Provides easy access to different file formats without end users needing to know how the data is stored.</li> </ul> <p>Prerequisites</p> <p>For Apache Spark and Delta Lake to work together with Unity Catalog, you will need atleast Apache Spark 3.5.3 and Delta Lake 3.2.1.</p>"},{"location":"integrations/unity-catalog-spark/#download-and-configure-unity-catalog-for-apache-spark","title":"Download and Configure Unity Catalog for Apache Spark","text":"<p>The following steps are required to download and configure Unity Catalog for Apache Spark.</p>"},{"location":"integrations/unity-catalog-spark/#download-apache-spark","title":"Download Apache Spark","text":"<p>Download the latest version of Apache Spark &gt;= 3.5.3 or using the following command.</p> Download Apache Spark 3.5.3 using curl<pre><code>curl -O https://archive.apache.org/dist/spark/spark-3.5.3/spark-3.5.3-bin-hadoop3.tgz\ntar xzf spark-3.5.3-bin-hadoop3.tgz\n</code></pre>"},{"location":"integrations/unity-catalog-spark/#optional-configure-server-properties-for-cloud-storage","title":"[Optional] Configure server properties for cloud storage","text":"<p>To have Unity Catalog work with cloud object storage as the storage location for tables, configure the <code>etc/conf/server.properties</code> to add configuration:</p> AWS S3Azure ADLSgen2Google Cloud Storage <pre><code>## S3 Storage Config (Multiple configs can be added by incrementing the index)\ns3.bucketPath.0=&lt;S3_BUCKET&gt;\ns3.region.0=&lt;S3_REGION&gt;\ns3.awsRoleArn.0=&lt;S3_ROLE&gt;\n# Optional (If blank, it will use DefaultCredentialsProviderChain)\ns3.accessKey.0=&lt;SECRET&gt;\ns3.secretKey.0=&lt;SECRET&gt;\n</code></pre> <pre><code>## ADLS Storage Config (Multiple configs can be added by incrementing the index)\nadls.storageAccountName.0=&lt;ADLS_STORAGEACCOUNTNAME&gt;\nadls.tenantId.0=&lt;ADLS_TENANTID&gt;\nadls.clientId.0=&lt;ADLS_CLIENTID&gt;\nadls.clientSecret.0=&lt;SECRET&gt;\n</code></pre> <pre><code>## GCS Storage Config (Multiple configs can be added by incrementing the index)\ngcs.bucketPath.0=&lt;GCS_BUCKET&gt;\n# Optional (If blank, it will use Default Application chain to find credentials)\ngcs.jsonKeyFilePath.0=/path/to/&lt;SECRET&gt;/gcp-key-uc-testing.json\n</code></pre>"},{"location":"integrations/unity-catalog-spark/#optional-restart-unity-catalog-server","title":"[Optional] Restart Unity Catalog Server","text":"<p>If the UC Server is already started, please restart it to account for the cloud storage server properties.</p> <pre><code>cd unitycatalog/\nbin/start-uc-server\n</code></pre>"},{"location":"integrations/unity-catalog-spark/#working-with-unity-catalog-tables-with-apache-spark-and-delta-lake-locally","title":"Working with Unity Catalog Tables with Apache Spark and Delta Lake Locally","text":"<p>Let\u2019s start running some Spark SQL queries in the Spark SQL shell (<code>bin/spark-sql</code>) or PySpark shell (<code>bin/pyspark</code>) within the terminal of your Apache Spark 3.5.3 folder against your local UC.</p> <p>You can run the code below to work with data stored in the <code>unity</code> catalog that comes pre-loaded with the local Unity Catalog server.</p> <p>Catalog name in configs</p> <p>If you want to work with data stored in another catalog, make sure to change <code>unity</code> in the Spark configs to <code>&lt;your_catalog_name&gt;</code>, e.g. <code>spark.sql.catalog.&lt;your_catalog_name&gt;</code>.</p> Spark SQLPySpark <pre><code>bin/spark-sql --name \"local-uc-test\" \\\n    --master \"local[*]\" \\\n    --packages \"io.delta:delta-spark_2.12:3.2.1,io.unitycatalog:unitycatalog-spark_2.12:0.2.0\" \\\n    --conf \"spark.sql.extensions=io.delta.sql.DeltaSparkSessionExtension\" \\\n    --conf \"spark.sql.catalog.spark_catalog=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;.uri=http://localhost:8080\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;.token=\" \\\n    --conf \"spark.sql.defaultCatalog=&lt;catalog_name&gt;\"\n</code></pre> <pre><code>bin/pyspark --name \"local-uc-test\" \\\n    --master \"local[*]\" \\\n    --packages \"io.delta:delta-spark_2.12:3.2.1,io.unitycatalog:unitycatalog-spark_2.12:0.2.0\" \\\n    --conf \"spark.sql.extensions=io.delta.sql.DeltaSparkSessionExtension\" \\\n    --conf \"spark.sql.catalog.spark_catalog=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;.uri=http://localhost:8080\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;.token=\" \\\n    --conf \"spark.sql.defaultCatalog=&lt;catalog_name&gt;\"\n</code></pre> <p>Tip</p> <p>Initially, this may take a few minutes to run to download the necessary dependencies. Afterwards, you can run some quick commands to see your UC assets within Spark SQL shell.</p> <p>Notice the following packages (<code>--packages</code>) and configurations (<code>--conf</code>)</p> <ul> <li><code>--packages</code> points to the delta-spark and unitycatalog-spark packages; update the version numbers to your current versions.</li> <li><code>spark.sql.catalog.&lt;catalog_name&gt;.uri</code> points to your local development UC instance</li> <li><code>spark.sql.catalog.&lt;catalog_name&gt;.token</code> is empty indicating there is no authentication; refer to auth for more information.</li> <li><code>spark.sql.defaultCatalog=&lt;catalog_name&gt;</code> must be filled out to indicate the default catalog. The default name is <code>unity</code>.</li> </ul> Three-part and two-part naming conventions <p></p> <p>As noted in Unity Catalog 101, UC has a three-part naming convention of [<code>catalog</code>].[<code>schema</code>].[<code>asset</code>]. In the following examples, you can use the three-part notation such as <code>SELECT * FROM unity.default.marksheet;</code> or the two-part notation <code>SELECT * FROM default.marksheet;</code> as the <code>defaultCatalog</code> is already configured.</p>"},{"location":"integrations/unity-catalog-spark/#optional-running-spark-sql-for-cloud-object-stores","title":"[Optional] Running Spark SQL for Cloud Object Stores","text":"<p>If you would like to run this against cloud object storage, the following versions of the <code>bin/spark-sql</code> shell command.</p> AWS S3Azure ADLSgen2Google Cloud Storage <pre><code>bin/spark-sql --name \"s3-uc-test\" \\\n    --master \"local[*]\" \\\n    --packages \"org.apache.hadoop:hadoop-aws:3.3.4,io.delta:delta-spark_2.12:3.2.1,io.unitycatalog:unitycatalog-spark_2.12:0.2.0\" \\\n    --conf \"spark.sql.extensions=io.delta.sql.DeltaSparkSessionExtension\" \\\n    --conf \"spark.sql.catalog.spark_catalog=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.hadoop.fs.s3.impl=org.apache.hadoop.fs.s3a.S3AFileSystem\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;.uri=http://localhost:8080\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;.token=\" \\\n    --conf \"spark.sql.defaultCatalog=&lt;catalog_name&gt;\"\n</code></pre> <pre><code>bin/spark-sql --name \"azure-uc-test\" \\\n    --master \"local[*]\" \\\n    --packages \"org.apache.hadoop:hadoop-azure:3.3.6,io.delta:delta-spark_2.12:3.2.1,io.unitycatalog:unitycatalog-spark_2.12:0.2.0\" \\\n    --conf \"spark.sql.extensions=io.delta.sql.DeltaSparkSessionExtension\" \\\n    --conf \"spark.sql.catalog.spark_catalog=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;.uri=http://localhost:8080\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;.token=\" \\\n    --conf \"spark.sql.defaultCatalog=&lt;catalog_name&gt;\"\n</code></pre> <pre><code>bin/spark-sql --name \"gcs-uc-test\" \\\n    --master \"local[*]\" \\\n    --jars \"https://repo1.maven.org/maven2/com/google/cloud/bigdataoss/gcs-connector/3.0.2/gcs-connector-3.0.2-shaded.jar\" \\\n    --packages \"io.delta:delta-spark_2.12:3.2.1,io.unitycatalog:unitycatalog-spark_2.12:0.2.0\" \\\n    --conf \"spark.sql.extensions=io.delta.sql.DeltaSparkSessionExtension\" \\\n    --conf \"spark.sql.catalog.spark_catalog=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.hadoop.fs.gs.impl=com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystem\" \\\n    --conf \"spark.hadoop.fs.AbstractFileSystem.gs.impl=com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;.uri=http://localhost:8080\" \\\n    --conf \"spark.sql.catalog.&lt;catalog_name&gt;.token=\" \\\n    --conf \"spark.sql.defaultCatalog=&lt;catalog_name&gt;\"\n</code></pre>"},{"location":"integrations/unity-catalog-spark/#using-spark-sql-to-query-unity-catalog-schemas-and-tables","title":"Using Spark SQL to query Unity Catalog schemas and tables","text":"<p>Let\u2019s start by running some quick commands from the Spark SQL and pyspark shells.</p> <p>The following <code>SHOW SCHEMA</code> shows the <code>default</code> schema that is included in the initial UC configuration.</p> Spark SQLPySpark <pre><code>-- Show schemas (output = default)\nSHOW SCHEMAS;\n\n-- Show tables\nSHOW TABLES IN default;\n</code></pre> <pre><code># Show schemas (output = default)\nspark.sql(\"SHOW SCHEMAS\").show()\n\n# Show tables\nspark.sql(\"SHOW TABLES IN default\").show()\n</code></pre> <p>with the output similar to:</p> <pre><code>+---------+-----------------+-----------+\n|namespace|        tableName|isTemporary|\n+---------+-----------------+-----------+\n|  default|        marksheet|      false|\n|  default|marksheet_uniform|      false|\n|  default|          numbers|      false|\n|  default|   user_countries|      false|\n+---------+-----------------+-----------+\n</code></pre> <p>Let\u2019s query the first five rows of the <code>marksheet</code> table.</p> Spark SQLPySpark <pre><code>SELECT * FROM default.marksheet LIMIT 5;\n</code></pre> <pre><code>spark.sql(\"SELECT * FROM default.marksheet LIMIT 5;\").show()\n</code></pre> <p>With the output looking similar to the following.</p> <pre><code>+---+----------+-----+\n| id|      name|marks|\n+---+----------+-----+\n|  1|nWYHawtqUw|  930|\n|  2|uvOzzthsLV|  166|\n|  3|WIAehuXWkv|  170|\n|  4|wYCSvnJKTo|  709|\n|  5|VsslXsUIDZ|  993|\n+---+----------+-----+\n</code></pre>"},{"location":"integrations/unity-catalog-spark/#running-crud-operations-on-a-unity-catalog-table","title":"Running CRUD Operations on a Unity Catalog Table","text":"<p>Let\u2019s extend this example by executing various CRUD operations on our UC tables.</p>"},{"location":"integrations/unity-catalog-spark/#create-new-schema","title":"Create New Schema","text":"Spark SQLPySpark <pre><code>-- Create new schema\nCREATE SCHEMA demo;\n\n-- Should now show two schemas: default and demo\nSHOW SCHEMAS;\n</code></pre> <pre><code># Create new schema\nspark.sql(\"CREATE SCHEMA demo\")\n\n# Should now show two schemas: default and demo\nspark.sql(\"SHOW SCHEMAS\").show()\n</code></pre>"},{"location":"integrations/unity-catalog-spark/#create-new-table","title":"Create New Table","text":"Spark SQLPySpark <pre><code>-- Create a new table\nCREATE TABLE demo.mytable (id INT, desc STRING)\nUSING delta\nLOCATION '&lt;LOCATION&gt;';\n-- Example location:\n-- LOCATION '/tmp/tables/mytable';\n</code></pre> <pre><code># Create a new table\nspark.sql(\"\"\"\nCREATE TABLE demo.mytable (id INT, desc STRING)\nUSING delta\nLOCATION '&lt;LOCATION&gt;'\n\"\"\")\n# Example location:\n# LOCATION '/tmp/tables/mytable'\n</code></pre>"},{"location":"integrations/unity-catalog-spark/#insert-new-rows-into-table","title":"Insert New Rows into Table","text":"Spark SQLPySpark <pre><code>-- Insert new rows\nINSERT INTO demo.mytable VALUES (1, \"test 1\");\nINSERT INTO demo.mytable VALUES (2, \"test 2\");\nINSERT INTO demo.mytable VALUES (3, \"test 3\");\nINSERT INTO demo.mytable VALUES (4, \"test 4\");\n\n-- Read table\nSELECT * FROM demo.mytable;\n</code></pre> <pre><code># Insert new rows\nspark.sql(\"INSERT INTO demo.mytable VALUES (1, 'test 1')\")\nspark.sql(\"INSERT INTO demo.mytable VALUES (2, 'test 2')\")\nspark.sql(\"INSERT INTO demo.mytable VALUES (3, 'test 3')\")\nspark.sql(\"INSERT INTO demo.mytable VALUES (4, 'test 4')\")\n\n# Read table\nspark.sql(\"SELECT * FROM demo.mytable\").show()\n</code></pre>"},{"location":"integrations/unity-catalog-spark/#update-row-in-table","title":"Update Row in Table","text":"Spark SQLPySpark <pre><code>-- Update row in table\nUPDATE demo.mytable SET id = 5 WHERE id = 4;\n</code></pre> <pre><code># Update row in table\nspark.sql(\"UPDATE demo.mytable SET id = 5 WHERE id = 4\")\n</code></pre>"},{"location":"integrations/unity-catalog-spark/#delete-row-from-table","title":"Delete Row from Table","text":"Spark SQLPySpark <pre><code>-- Delete rows\nDELETE FROM demo.mytable WHERE id = 5;\n</code></pre> <pre><code># Delete rows\nspark.sql(\"DELETE FROM demo.mytable WHERE id = 5\")\n</code></pre>"},{"location":"integrations/unity-catalog-spark/#merge-mytable-with-srctable","title":"Merge <code>mytable</code> with <code>srctable</code>","text":"<p>Create Secondary Table</p> Spark SQLPySpark <pre><code>-- Create secondary table (we will use this as the source for merge)\nCREATE TABLE demo.srctable (id INT, desc STRING)\nUSING delta\nLOCATION '&lt;LOCATION&gt;';\n-- Example location:\n-- LOCATION '/tmp/tables/srctable';\n\n-- Insert new rows\nINSERT INTO demo.srctable VALUES (3, \"updated\");\nINSERT INTO demo.srctable VALUES (4, \"inserted\");\n</code></pre> <pre><code># Create secondary table (we will use this as the source for merge)\nspark.sql(\"\"\"\nCREATE TABLE demo.srctable (id INT, desc STRING)\nUSING delta\nLOCATION '&lt;LOCATION&gt;'\n\"\"\")\n# Example location:\n# LOCATION '/tmp/tables/srctable';\n\n# Insert new rows\nspark.sql(\"INSERT INTO demo.srctable VALUES (3, 'updated')\")\nspark.sql(\"INSERT INTO demo.srctable VALUES (4, 'inserted')\")\n</code></pre> <p>Merge Command</p> Spark SQLPySpark <pre><code>-- Merge\nMERGE INTO demo.mytable as target\nUSING demo.srctable as source\n    ON target.id = source.id\nWHEN MATCHED THEN\n    UPDATE SET *\nWHEN NOT MATCHED THEN\n    INSERT *\n;\n\n-- Check results\nSELECT * FROM demo.mytable;\n</code></pre> <pre><code># Merge\nspark.sql(\"\"\"\nMERGE INTO demo.mytable AS target\nUSING demo.srctable AS source\n    ON target.id = source.id\nWHEN MATCHED THEN\n    UPDATE SET *\nWHEN NOT MATCHED THEN\n    INSERT *\n\"\"\")\n\n# Check results\nspark.sql(\"SELECT * FROM demo.mytable\").show()\n</code></pre> Merged Results<pre><code>3       updated\n4       inserted\n1       test 1\n2       test 2\n</code></pre> <p>Drop Table</p> Spark SQLPySpark <pre><code>-- Drop tables\nDROP TABLE demo.srctable;\n\n-- Check results\nSHOW TABLES IN default;\n</code></pre> <pre><code># Drop tables\nspark.sql(\"DROP TABLE demo.srctable\")\n\n# Check results\nspark.sql(\"SHOW TABLES IN default\").show()\n</code></pre> <p>Warning</p> <p>Note, this action will only drop the table from UC, it will not remove the data from the file system</p>"},{"location":"integrations/unity-catalog-spiceai/","title":"Unity Catalog Spice OSS Integration","text":"<p>Spice OSS is a unified SQL query interface and portable runtime to locally materialize, accelerate, and query datasets across databases, data warehouses, and data lakes.</p> <p>Unity Catalog and Databricks Unity Catalog can be used with Spice OSS as Catalog Connectors to make catalog tables available for query in Spice.</p> <p>Follow the guide below to connect to open-source Unity Catalog. See the Databricks Unity Catalog quickstart if using Databricks Unity Catalog.</p>"},{"location":"integrations/unity-catalog-spiceai/#prerequisites","title":"Prerequisites","text":"<ul> <li>Spice OSS installed: To install Spice, see Spice OSS Installation.</li> <li>Access to an open-source Unity Catalog server with 1+ tables.</li> </ul>"},{"location":"integrations/unity-catalog-spiceai/#step-1-create-a-new-directory-and-initialize-a-spicepod","title":"Step 1. Create a new directory and initialize a Spicepod","text":"<pre><code>mkdir uc_quickstart\ncd uc_quickstart\nspice init\n</code></pre>"},{"location":"integrations/unity-catalog-spiceai/#step-2-add-the-unity-catalog-connector","title":"Step 2. Add the Unity Catalog Connector","text":"<p>Configure the <code>spicepod.yaml</code> with:</p> <pre><code>catalogs:\n  - from: unity_catalog:https://&lt;unity_catalog_host&gt;/api/2.1/unity-catalog/catalogs/&lt;catalog_name&gt;\n    name: uc_quickstart\n    params:\n      # Configure the object store credentials here\n</code></pre> <p>The Unity Catalog connector currently supports Delta Lake tables only and requires object store credentials.</p>"},{"location":"integrations/unity-catalog-spiceai/#step-3-configure-delta-lake-tables-object-store-credentials","title":"Step 3. Configure Delta Lake tables object store credentials","text":""},{"location":"integrations/unity-catalog-spiceai/#aws-s3","title":"AWS S3","text":"<pre><code>params:\n  unity_catalog_aws_access_key_id: ${env:AWS_ACCESS_KEY_ID}\n  unity_catalog_aws_secret_access_key: ${env:AWS_SECRET_ACCESS_KEY}\n  unity_catalog_aws_region: &lt;region&gt; # E.g. us-east-1, us-west-2\n  unity_catalog_aws_endpoint: &lt;endpoint&gt; # If using an S3-compatible service, like Minio\n</code></pre> <p>Set the <code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code> environment variables to the AWS access key and secret key, respectively.</p>"},{"location":"integrations/unity-catalog-spiceai/#azure-storage","title":"Azure Storage","text":"<pre><code>params:\n  unity_catalog_azure_storage_account_name: ${env:AZURE_ACCOUNT_NAME}\n  unity_catalog_azure_account_key: ${env:AZURE_ACCOUNT_KEY}\n</code></pre> <p>Set the <code>AZURE_ACCOUNT_NAME</code> and <code>AZURE_ACCOUNT_KEY</code> environment variables to the Azure storage account name and account key, respectively.</p>"},{"location":"integrations/unity-catalog-spiceai/#google-cloud-storage","title":"Google Cloud Storage","text":"<pre><code>params:\n  unity_catalog_google_service_account: &lt;/path/to/service-account.json&gt;\n</code></pre>"},{"location":"integrations/unity-catalog-spiceai/#example-delta-lake-spicepod","title":"Example Delta Lake Spicepod","text":"<pre><code>version: v1beta1\nkind: Spicepod\nname: uc_quickstart\n\ncatalogs:\n  - from: unity_catalog:https://&lt;unity_catalog_host&gt;/api/2.1/unity-catalog/catalogs/&lt;catalog_name&gt;\n    name: uc_quickstart\n    params:\n      # delta_lake S3 parameters\n      unity_catalog_aws_region: us-west-2\n      unity_catalog_aws_access_key_id: ${secrets:aws_access_key_id}\n      unity_catalog_aws_secret_access_key: ${secrets:aws_secret_access_key}\n      unity_catalog_aws_endpoint: s3.us-west-2.amazonaws.com\n</code></pre>"},{"location":"integrations/unity-catalog-spiceai/#step-5-start-the-spice-runtime-and-show-the-available-tables","title":"Step 5. Start the Spice runtime and show the available tables","text":"<p>Once the <code>spicepod.yml</code> is configured, start the Spice runtime:</p> <pre><code>spice run\n</code></pre> <p>In a seperate terminal, run the Spice SQL REPL:</p> <pre><code>spice sql\n</code></pre> <p>In the REPL, show the available tables.</p> <pre><code>SHOW TABLES;\n+---------------+--------------+---------------+------------+\n| table_catalog | table_schema | table_name    | table_type |\n+---------------+--------------+---------------+------------+\n| spice         | runtime      | metrics       | BASE TABLE |\n| spice         | runtime      | task_history  | BASE TABLE |\n| uc_quickstart | default      | taxi_trips    | BASE TABLE |\n+---------------+--------------+---------------+------------+\n</code></pre>"},{"location":"integrations/unity-catalog-spiceai/#step-6-query-a-dataset","title":"Step 6. Query a dataset","text":"<p>In the SQL REPL execute query. For example:</p> <pre><code>-- SELECT * FROM uc_quickstart.&lt;SCHEMA_NAME&gt;.&lt;TABLE_NAME&gt; LIMIT 5;\nsql&gt; SELECT fare_amount FROM uc_quickstart.default.taxi_trips LIMIT 5;\n+-------------+\n| fare_amount |\n+-------------+\n| 11.4        |\n| 13.5        |\n| 11.4        |\n| 27.5        |\n| 18.4        |\n+-------------+\n\nTime: 1.4579897499999999 seconds. 5 rows.\n</code></pre>"},{"location":"integrations/unity-catalog-spiceai/#more-information","title":"More information","text":"<ul> <li>Unity Catalog Connector Quickstart</li> <li>Databricks Unity Catalog Connector Quickstart</li> <li>Spice OSS Catalogs Documentation</li> <li>Spice OSS Unity Catalog Documentation</li> <li>Get help on Discord.</li> </ul>"},{"location":"integrations/unity-catalog-trino/","title":"Unity Catalog Trino Integration","text":""},{"location":"integrations/unity-catalog-trino/#setting-up-rest-catalog-with-trino","title":"Setting up REST Catalog with Trino","text":"<p>After setting up Trino, REST Catalog connection can be setup by adding a <code>etc/catalog/iceberg.properties</code> file to configure Trino to use Unity Catalog's Iceberg REST API Catalog endpoint.</p> <pre><code>connector.name=iceberg\niceberg.catalog.type=rest\niceberg.rest-catalog.uri=http://127.0.0.1:8080/api/2.1/unity-catalog/iceberg\niceberg.rest-catalog.security=OAUTH2\niceberg.rest-catalog.oauth2.token=not_used\n</code></pre> <p>Once your properties file is configured, you can run the Trino CLI and issue a SQL query against the Delta UniForm table:</p> <pre><code>SELECT * FROM iceberg.\"unity.default\".marksheet_uniform\n</code></pre>"},{"location":"integrations/unity-catalog-xtable/","title":"Unity Catalog XTable Integration","text":"<p>This document walks through the steps to register an Apache XTable\u2122 (Incubating) synced Delta table in Unity Catalog.</p> <p>Apache XTable provides cross-table omni-directional interoperability between Apache Hudi, Apache Iceberg, and Delta Lake.</p>"},{"location":"integrations/unity-catalog-xtable/#pre-requisites","title":"Pre-Requisites","text":"<ol> <li>Source table(s) (Hudi/Iceberg) already written to external storage locations like S3/GCS/ADLS or local. In this     guide, we will use a S3 example.</li> <li>Follow the XTable installation guide here</li> <li>Clone the Unity Catalog repository from here and build the project     by following the steps outlined here</li> </ol> <p>To sync a source Hudi/Iceberg table using XTable use the following:</p> <pre><code>sourceFormat: HUDI|ICEBERG # choose only one\ntargetFormats:\n  - DELTA\ndatasets:\n    tableBasePath: s3://path/to/source/data\n    tableName: table_name\n    partitionSpec: partitionpath:VALUE \n</code></pre> <p>Now, from your terminal under the cloned Apache XTable\u2122 (Incubating) directory, run the sync process using the below command. This will generate the Delta Lake metadata.</p> <pre><code>java -jar xtable-utilities/target/incubator-xtable-utilities-0.1.0-SNAPSHOT-bundled.jar --datasetConfig my_config.yaml\n</code></pre> <p>Note: At this point, if you check your bucket path, you will be able to see _delta_log directory with the JSON log.</p>"},{"location":"integrations/unity-catalog-xtable/#configure-server-property-for-using-s3","title":"Configure Server Property for using S3","text":"<p>The server config file is at the location <code>etc/conf/server.properties</code> For enabling server to vend AWS temporary credentials to access S3 buckets, the following parameters need to be set:</p> <ul> <li><code>s3.bucketPath.i</code>: The S3 path of the bucket where the data is stored. Should be in the format <code>s3://&lt;bucket-name&gt;</code>.</li> <li><code>s3.accessKey.i</code>: The AWS access key, an identifier of temp credentials.</li> <li><code>s3.secretKey.i</code>: The AWS secret key used to sign API requests to AWS.</li> <li><code>s3.sessionToken.i</code>: THE AWS session token, used to verify that the request is coming from a trusted source.</li> </ul>"},{"location":"integrations/unity-catalog-xtable/#run-the-unity-server","title":"Run the Unity Server","text":"<pre><code>bin/start-uc-server\n</code></pre>"},{"location":"integrations/unity-catalog-xtable/#register-the-xtable-synced-table-in-the-unity-catalog","title":"Register the XTable-synced table in the Unity Catalog","text":"<p>In a separate terminal, run the following commands to register the target table in Unity Catalog.</p> <pre><code>bin/uc table create --full_name unity.default.people --columns \"id INT, name STRING, age INT, city STRING, create_ts STRING\" --storage_location s3://path/to/source/data\n</code></pre>"},{"location":"integrations/unity-catalog-xtable/#validating-the-results","title":"Validating the results","text":"<p>You can now read the table registered in Unity Catalog using the below command.</p> <pre><code>bin/uc table read --full_name unity.default.people\n</code></pre>"},{"location":"integrations/unity-catalog-xtable/#more-references","title":"More References","text":"<ul> <li>Unity Catalog OSS with Hudi, Delta, Iceberg, and EMR + DuckDB</li> <li>Getting Started with X-Table and Unity Catalog | Universal Datalakes | Hands on Labs</li> <li>Video: Getting Started with XTable and Unity Catalof</li> </ul>"},{"location":"server/auth/","title":"Unity Catalog Authentication and Authorization","text":"<p>You can start working with Unity Catalog Access Control integration with an external authentication provider (e.g., Google Auth, Okta, etc.) via the following instructions.</p> <p>It is important to note that Unity Catalog already has its own local user database to restrict user access. When you work with an external authentication provider, we are now relying on that external provider (e.g., Google Identity) to authenticate. For example, for access to Unity Catalog authenticated by Google Identity, a user must have a Google Identity (e.g. gmail address) that is added to the local UC database.</p> <p></p> <p>Throughout the next set of examples, we are using an external identity provider for authentication while the local Unity Catalog database for authorization. The flow is as follows:</p> <ol> <li>The user account used will authenticate against an external authentication provider to confirm the user is who     they say they are (e.g., <code>bobbie@rocinante</code> is in fact Bobbie Draper on the Rocinante)</li> <li>The user account is either authenticated and a user token is provided or not authenticated.</li> <li>With the token at hand, the user account also needs to request if they are authorized to perform the task     (e.g., the user can only read tables but not write any tables).  This authorization step is performed with the     Unity Catalog database.</li> <li>The user account is either authorized and they can perform the task or not authorized.</li> </ol>"},{"location":"server/auth/#configure-your-external-identity-provider","title":"Configure your External Identity Provider","text":"<p>To try out authentication and authorization, first configure your preferred external identity provider following their instructions. Ultimately you will have configuration properties to configure:</p> <ul> <li><code>etc/conf/server.properties</code> to fill in the Identity Provider authorization parameters</li> <li>[Optional] <code>ui/.env</code> so the Unity Catalog UI can also use the same <code>client_id</code>.  </li> </ul> <p>Unity Catalog UI supported Identity Authentication Providers</p> <p>Currently, the Unity Catalog User Interface supports Google Identity Provider.</p> <p>You can follow these instructions if would like to use Google as your external identity provider.</p> <p>Once you have configured your identity provider, the next step is to configure your Unity Catalog server settings.</p>"},{"location":"server/auth/#configure-uc-server-settings","title":"Configure UC Server Settings","text":"<p>Start by editing <code>etc/conf/server.properties</code> with the Client ID and Client secret provided to you by the Identity Provider.</p> <pre><code>server.authorization=enable\nserver.authorization-url=https://accounts.google.com/o/oauth2/auth\nserver.token-url=https://oauth2.googleapis.com/token\nserver.client-id=&lt;Client ID provided earlier&gt;\nserver.client-secret=&lt;Client secret provided earlier&gt;\n</code></pre>"},{"location":"server/auth/#restart-the-uc-server","title":"Restart the UC Server","text":"<p>Now that the Google Authentication is configured, restart the UC Server with the following command.</p> <pre><code>bin/start-uc-server\n</code></pre> <p>Behind the scenes, on startup, the UC server will configure itself with the following:</p> <ul> <li>Creation of internal signing keys and authentication files in <code>etc/conf</code></li> <li>Creation of an admin access token in <code>etc/conf/token.txt</code></li> <li>Creation of an admin account in the user database</li> <li>Granting the admin account as the metastore admin for the server</li> </ul>"},{"location":"server/auth/#testing-user-and-admin-authentication","title":"Testing User and Admin Authentication","text":"<p>The following steps allow you to test user and admin authentication to your local Unity Catalog.</p>"},{"location":"server/auth/#use-admin-token-to-verify-admin-user-is-in-local-database","title":"Use admin token to verify admin user is in local database","text":"<p>As noted earlier, on startup the UC server configured itself and created the admin access token at <code>etc/conf/token.txt</code>. The following command uses the same admin authentication token to view the user list.</p> <pre><code>bin/uc --auth_token $(cat etc/conf/token.txt) user list\n</code></pre> <p>The output should look something like this</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                 ID                 \u2502  NAME   \u2502         EMAIL          \u2502EXTERNAL_ID\u2502 STATE \u2502PICTURE_URL\u2502 CREATED_AT  \u2502 UPDATED_AT  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502c6e354c9-ec27-4815-9212-4bdb4fdbfea4\u2502Admin    \u2502admin                   \u2502null       \u2502ENABLED\u2502null       \u25021727198813231\u25021727220886536\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n</code></pre>"},{"location":"server/auth/#try-to-log-in-with-no-user-in-the-local-database","title":"Try to log in with no user in the local database","text":"<p>As noted earlier, Unity Catalog has a local database that contains the users allowed to access it. While an administrative account was created, no user account has been created yet. Thus, the following command will fail.</p> <pre><code>bin/uc auth login\n</code></pre> <p>Your browser will open and you will authenticate with the specific Google identity (e.g., bobbie@rocinante). While authenticated, the user account has not been added to the local database.  Hence the command will fail with the output similar to the following:</p> <pre><code>Listening on port: 61918\nAttempting to open the authorization page in your default browser.\nIf the browser does not open, you can manually open the following URL:\n\nhttps://accounts.google.com/o/oauth2/auth?client_id=$$.apps.googleusercontent.com&amp;redirect_uri=http%3A%2F%2Flocalhost%3A61918&amp;response_type=code&amp;scope=openid+profile+email&amp;state=$$\n\nReceived authentication response.\nReceived token response.\nException in thread \"main\" java.lang.RuntimeException: io.unitycatalog.client.ApiException: Error authenticating - {\"error_code\":\"INVALID_ARGUMENT\",\"details\":[{\"reason\":\"INVALID_ARGUMENT\",\"metadata\":{},\"@type\":\"google.rpc.ErrorInfo\"}],\"stack_trace\":null,\"message\":\"User not allowed: bobbie@rocinante\"}\n    at io.unitycatalog.cli.UnityCatalogCli.main(UnityCatalogCli.java:168)\nCaused by: io.unitycatalog.client.ApiException: Error authenticating - {\"error_code\":\"INVALID_ARGUMENT\",\"details\":[{\"reason\":\"INVALID_ARGUMENT\",\"metadata\":{},\"@type\":\"google.rpc.ErrorInfo\"}],\"stack_trace\":null,\"message\":\"User not allowed: bobbie@rocinante\"}\n    at io.unitycatalog.cli.AuthCli.doExchange(AuthCli.java:102)\n    at io.unitycatalog.cli.AuthCli.login(AuthCli.java:62)\n    at io.unitycatalog.cli.AuthCli.handle(AuthCli.java:46)\n    at io.unitycatalog.cli.UnityCatalogCli.main(UnityCatalogCli.java:124)\n</code></pre> <p>Warning</p> <p>Note, <code>bobbie@rocinante</code> is not a real Google Identity account, please replace this with your own.</p>"},{"location":"server/auth/#add-user-account-to-the-local-database","title":"Add user account to the local database","text":"<p>To fix this error, let\u2019s start by adding your user account to the UC local database. Use the CLI with the admin token to add your account to the local database.</p> <pre><code>bin/uc --auth_token $(cat etc/conf/token.txt) user create --name \"Bobbie Draper\" --email bobbie@rocinante\n</code></pre>"},{"location":"server/auth/#try-to-log-in-with-your-user-account","title":"Try to log in with your user account","text":"<p>Now use the CLI to authenticate and gain an access token using the account that has been created.</p> <pre><code>bin/uc auth login --output jsonPretty\n</code></pre> <p>Similar to the previous steps, your browser will open and you will authenticate with the specific Google identity (e.g., <code>bobbie@rocinante</code>). This time it should succeed provided the Google Identity you are authenticating with is the same one authorized in the Unity Catalog local database. The output should be similar to the following</p> <pre><code>Listening on port: 51798\nAttempting to open the authorization page in your default browser.\nIf the browser does not open, you can manually open the following URL:\n\nhttps://accounts.google.com/o/oauth2/auth?client_id=$$.apps.googleusercontent.com&amp;redirect_uri=http%3A%2F%2Flocalhost%3A51798&amp;response_type=code&amp;scope=openid+profile+email&amp;state=$$\n\nReceived authentication response.\nReceived token response.\n{\n  \"access_token\" : \"exJ...N8zt$w\"\n}\n</code></pre> <p>Save the returned token in an environment variable for later</p> <pre><code>export token='exJ...N8zt$w'\n</code></pre>"},{"location":"server/auth/#try-to-list-catalogs-with-your-user-account","title":"Try to list catalogs with your user account","text":"<p>Note, that while we have authenticated (with Google Identity) your account with an authorized user in the local database, that user does not yet have any permissions. Thus if one tries to list catalogs, an unauthenticated user will fail, your user account will return nothing (as it does not have permission to list), and the admin account will succeed.</p> <pre><code># Fails as the user is UNAUTHENTICATED\nbin/uc catalog list\n\n# Returns nothing\nbin/uc --auth_token $token catalog list\n\n# Succeeds\nbin/uc --auth_token $(cat etc/conf/token.txt) catalog list\n</code></pre> <p>But if you were to add <code>USE CATALOG</code> permission to your user account</p> <pre><code>bin/uc --auth_token $(cat etc/conf/token.txt) permission create  --securable_type catalog --name unity --privilege 'USE CATALOG' --principal bobbie@rocinante \n</code></pre> <p>then the following command would work.</p> <pre><code># Succeeds\nbin/uc --auth_token $token catalog list\n</code></pre>"},{"location":"server/auth/#try-creating-a-catalog-with-your-user-account","title":"Try creating a catalog with your user account","text":"<p>The following command will initially fail as your user account does not have permissions to create a catalog.</p> <pre><code>bin/uc --auth_token $token catalog create --name myfirstcatalog\n</code></pre> <p>Thus, let\u2019s provide your account with the necessary permissions.</p> <pre><code>bin/uc --auth_token $(cat etc/conf/token.txt) permission create --securable_type metastore --name metastore --privilege \"CREATE CATALOG\" --principal bobbie@rocinante\n</code></pre> <p>With the permission set, the preceding command will succeed because your user account has the <code>CREATE CATALOG</code> permissions.</p>"},{"location":"server/auth/#try-to-access-your-table-using-duckdb","title":"Try to access your table using DuckDB","text":"<p>First, let\u2019s give our user account (<code>bobbie@rocinante</code>) <code>USE CATALOG</code>, <code>USE SCHEMA</code>, and <code>SELECT</code> permissions. Notice how we\u2019re providing access using the three-part naming convention of catalog, schema, and table. As we provide each level of permissions, we progress down the three parts.</p> <pre><code>bin/uc --auth_token $(cat etc/conf/token.txt ) permission create --securable_type catalog --name unity --privilege \"USE CATALOG\" --principal bobbie@rocinante \nbin/uc --auth_token $(cat etc/conf/token.txt ) permission create --securable_type schema --name unity.default --privilege \"USE SCHEMA\" --principal bobbie@rocinante\nbin/uc --auth_token $(cat etc/conf/token.txt ) permission create --securable_type table --name unity.default.numbers --privilege \"SELECT\" --principal bobbie@rocinante\n</code></pre> <p>Then start a new DuckDB session.</p> <pre><code>duckdb\n</code></pre> <p>Within the <code>duckdb</code> session, let\u2019s query the <code>unity.default.numbers</code> table. Note the <code>CREATE SECRET</code> statement uses the auth_token (<code>$token</code>) thus please fill the <code>TOKEN</code> field in with your saved <code>$token</code> value.</p> <pre><code>install uc_catalog from core_nightly;\nload uc_catalog;\ninstall delta;\nload delta;\n\nCREATE SECRET (\n      TYPE UC,\n      TOKEN 'exJ...N8zt$w',\n      ENDPOINT 'http://127.0.0.1:8080',\n      AWS_REGION 'us-east-2'\n );\n\nATTACH 'unity' AS unity (TYPE UC_CATALOG);\n\nSHOW ALL TABLES;\nSELECT * from unity.default.numbers;\n</code></pre>"},{"location":"server/auth/#using-spark-with-a-user-token","title":"Using Spark with a User Token","text":"<p>Now that you have enabled Google Authentication for your UC instance, any unauthenticated clients such as a spark-sql shell without using an identity token will fail.  For example, if you were to run the <code>SHOW SCHEMA</code> step in the working with Unity Catalog Tables with Spark using the unauthenticated spark-sql command, you would get the following error.</p> <pre><code>spark-sql ()&gt; SHOW SCHEMAS;\n24/09/25 15:36:28 ERROR SparkSQLDriver: Failed in [SHOW SCHEMAS]\nio.unitycatalog.client.ApiException: listSchemas call failed with: 401 - {\"error_code\":\"UNAUTHENTICATED\",\"details\":[{\"reason\":\"UNAUTHENTICATED\",\"metadata\":{},\"@type\":\"google.rpc.ErrorInfo\"}],\"stack_trace\":null,\"message\":\"No authorization found.\"}\n    at io.unitycatalog.client.api.SchemasApi.getApiException(SchemasApi.java:77)\n    at io.unitycatalog.client.api.SchemasApi.listSchemasWithHttpInfo(SchemasApi.java:358)\n</code></pre> <p>To solve this issue, ensure that the configuration spark.sql.catalog.unity.token is populated  such as using the <code>$token</code> environment variable that you had set in the try to log in with your user account step.</p> <pre><code>bin/spark-sql --name \"local-uc-test\" \\\n    --master \"local[*]\" \\\n    --packages \"io.delta:delta-spark_2.12:3.2.1,io.unitycatalog:unitycatalog-spark_2.12:0.2.0\" \\\n    --conf \"spark.sql.extensions=io.delta.sql.DeltaSparkSessionExtension\" \\\n    --conf \"spark.sql.catalog.spark_catalog=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.sql.catalog.unity=io.unitycatalog.spark.UCSingleCatalog\" \\\n    --conf \"spark.sql.catalog.unity.uri=http://localhost:8080\" \\\n    --conf \"spark.sql.catalog.unity.token=$token\" \\\n    --conf \"spark.sql.defaultCatalog=unity\"\n</code></pre> <p>With this set, now you can continue your Using Spark SQL to query Unity Catalog schemas and tables and Running CRUD Operations on a Unity Catalog table steps with Spark as an authenticated client to UC.</p>"},{"location":"server/auth/#using-google-identity-with-unity-catalog-ui","title":"Using Google Identity with Unity Catalog UI","text":"<p>We previously configured Google as the Identity Provider and configured UC Server settings for CLI access. However, we can also apply this authentication and authorization to the Unity Catalog UI.</p>"},{"location":"server/auth/#configure-and-restart-the-unity-catalog-ui","title":"Configure and restart the Unity Catalog UI","text":"<p>First, you will need to edit the <code>ui/.env</code> file to enable Google Auth and add the Google Client ID that you created when you - in this example - previously configured Google as the Identity Provider.</p> <pre><code>REACT_APP_GOOGLE_AUTH_ENABLED=true\nREACT_APP_GOOGLE_CLIENT_ID=&lt;Client ID provided earlier&gt;\n</code></pre> <p>If you have not already done so, restart the UI.</p> <pre><code>cd ui\nyarn install\nyarn start\n</code></pre> <p>This will open a new browser window with your identity provider login (e.g., Google Identity).</p> <p></p> <p>Upon authentication, you will be able to view your Unity Catalog data and AI assets including the catalog (<code>myfirstcatalog</code>) you recently created in the try creating a catalog with your account step.  </p> <p></p>"},{"location":"server/auth/#optional-understanding-server-and-ui-authentication","title":"[Optional] Understanding Server and UI authentication","text":"<p>Unity Catalog requires both the server and the UI to be authenticated - in this case using Google Identity. If either or both are disabled, it will result in the following expected errors.</p>"},{"location":"server/auth/#disabling-server-authentication-ui-authenticated-is-enabled","title":"Disabling Server authentication, UI authenticated is enabled","text":"<p>Modify the <code>server.properties</code> file to disable the server authentication by changing server.authorization to disabled.</p> <pre><code>server.authorization=disable\n</code></pre> <p>Restarting your UC server (i.e., <code>bin/start-uc-server</code>) and UI (i.e., <code>yarn start</code>) will open a new browser window with the Google Auth login but fail with the following login failed error.</p> <p></p>"},{"location":"server/auth/#enabling-server-authentication-ui-authentication-is-disabled","title":"Enabling server authentication, UI authentication is disabled","text":"<p>Let\u2019s go the other way and enable server authentication and disable UI authentication. Modify <code>server.properties</code> so it is now enabled</p> <pre><code>server.authorization=enable\n</code></pre> <p>and edit <code>ui/.env</code> file so the UI authentication is disabled.</p> <pre><code>REACT_APP_GOOGLE_AUTH_ENABLED=false\nREACT_APP_GOOGLE_CLIENT_ID=\n</code></pre> <p>Restarting your UC server (i.e., <code>bin/start-uc-server</code>)  and UI (i.e., <code>yarn start</code>) will open a new browser window with the Google Auth login. You will successfully log into the UI but fail to show any Unity Catalog assets as the UI is not authenticated to query those assets.</p> <p></p>"},{"location":"server/auth/#disable-both-server-and-authentication","title":"Disable both server and authentication","text":"<p>Finally, let\u2019s disable both server and UI authentication by modifying the <code>server.properties</code></p> <pre><code>server.authorization=disable\n</code></pre> <p>and the <code>ui/.env</code> file so both are disabled.</p> <pre><code>REACT_APP_GOOGLE_AUTH_ENABLED=false\nREACT_APP_GOOGLE_CLIENT_ID=\n</code></pre> <p>Restarting your UC server (i.e., <code>bin/start-uc-server</code>) and UI (i.e., <code>yarn start</code>) will open a new browser window with the Google Auth login. In this case, there will be no profile menu nor any login screen but you will be able to see your UC assets.</p>"},{"location":"server/configuration/","title":"Unity Catalog Server Configuration","text":"<p>This is the  Unity Catalog server implementation that can be run in the cloud or started locally.</p>"},{"location":"server/configuration/#running-the-server","title":"Running the Server","text":"<p>To run against the latest main branch, start by cloning the open source Unity Catalog GitHub repository:</p> <pre><code>git clone git@github.com:unitycatalog/unitycatalog.git\n</code></pre> <p>To run Unity Catalog, you need Java 17 installed on your machine. You can always run the <code>java --version</code> command to verify that you have the right version of Java installed such as the following example output.</p> <pre><code>% java --version\nopenjdk 17.0.12 2024-07-16\nOpenJDK Runtime Environment Homebrew (build 17.0.12+0)\nOpenJDK 64-Bit Server VM Homebrew (build 17.0.12+0, mixed mode, sharing)\n</code></pre> <p>Change into the <code>unitycatalog</code> directory and run <code>bin/start-uc-server</code> to instantiate the server. Here is what you should see:</p> <pre><code>################################################################### \n#  _    _       _ _            _____      _        _              #\n# | |  | |     (_) |          / ____|    | |      | |             #\n# | |  | |_ __  _| |_ _   _  | |     __ _| |_ __ _| | ___   __ _  #\n# | |  | | '_ \\| | __| | | | | |    / _` | __/ _` | |/ _ \\ / _` | #\n# | |__| | | | | | |_| |_| | | |___| (_| | || (_| | | (_) | (_| | #\n#  \\____/|_| |_|_|\\__|\\__, |  \\_____\\__,_|\\__\\__,_|_|\\___/ \\__, | #\n#                      __/ |                                __/ | #\n#                     |___/               v0.2.0           |___/  #\n###################################################################\n</code></pre> <p>The server can be started by issuing the below command from the project root directory:</p> <pre><code>bin/start-uc-server\n</code></pre> <p>Running Unity Catalog Server on a specific port</p> <p>To run the server on a specific port, use the <code>-p</code> or <code>--port</code> option followed by the port number:</p> Use -p or --port to specify your port<pre><code>bin/start-uc-server -p &lt;port_number&gt;\nbin/start-uc-server -port &lt;port_number&gt;\n</code></pre> <p>If no port is specified, the server defaults to port 8080.</p>"},{"location":"server/configuration/#configuration","title":"Configuration","text":"<p>The server config file is at the location <code>etc/conf/server.properties</code> (relative to the project root).</p> <ul> <li><code>server.env</code>: The environment in which the server is running. This can be set to <code>dev</code> or <code>test</code>. When set to <code>test</code>     the server will instantiate an empty in-memory h2 database for storing metadata. If set to <code>dev</code>, the server will     use the file <code>etc/db/h2db.mv.db</code> as the metadata store. Any changes made to the metadata will be persisted in this     file.</li> </ul> <p>For enabling server to vend AWS temporary credentials to access S3 buckets (for accessing External tables/volumes), the following parameters need to be set:</p> <ul> <li><code>s3.bucketPath.i</code>: The S3 path of the bucket where the data is stored. Should be in the format <code>s3://&lt;bucket-name&gt;</code>.</li> <li><code>s3.accessKey.i</code>: The AWS access key, an identifier of temp credentials.</li> <li><code>s3.secretKey.i</code>: The AWS secret key used to sign API requests to AWS.</li> <li><code>s3.sessionToken.i</code>: THE AWS session token, used to verify that the request is coming from a trusted source.</li> </ul> <p>You can configure multiple buckets by incrementing the index i in the above parameters. The starting index should be 0.</p> <p>All the above parameters are required for each index. For vending temporary credentials, the server matches the bucket path in the table/volume storage_location with the bucket path in the configuration and returns the corresponding access key, secret key, and session token.</p> <p>Any params that are not required can be left empty.</p>"},{"location":"server/configuration/#logging","title":"Logging","text":"<p>The server logs are located at <code>etc/logs/server.log</code>. The log level and log rolling policy can be set in log4j2 config file: <code>etc/conf/server.log4j2.properties</code>.</p>"},{"location":"server/configuration/#authentication-and-authorization","title":"Authentication and Authorization","text":"<p>Please refer to Authentication and Authorization section for more information.</p>"},{"location":"server/google-auth/","title":"Configure Google as the Identity Provider","text":"<p>To configure Google as your external identity provider, go to the Google Cloud Console Resource Manager to create a new project.</p> <ul> <li>Click on Create Project and name it (e.g, UC demo)</li> </ul>"},{"location":"server/google-auth/#configure-oauth","title":"Configure OAuth","text":"<ul> <li> <p>Go to your project, then select APIs &amp; Services &gt; OAuth consent screen</p> <p></p> </li> <li> <p>Choose External and then click Create.</p> </li> </ul>"},{"location":"server/google-auth/#configure-app-information","title":"Configure App Information","text":"<ul> <li> <p>For the App information dialog, please provide the App name, user-supported email, and     Developer contact information at a minimum.  Click Save and Continue.</p> </li> <li> <p>For the purpose of this demo, skip Scopes, Test users, and go directly to Summary return Back to Dashboard.</p> </li> </ul>"},{"location":"server/google-auth/#configure-oauth-client-id","title":"Configure OAuth client ID","text":"<ul> <li> <p>Click APIs &amp; Services &gt; Credentials and click the Create Credentials button to create an OAuth client ID.</p> <ul> <li>Application type:  Web application</li> <li>Name: UC demo web client</li> <li>Authorized JavaScript origins: <code>http://localhost</code>, <code>http://localhost:3000</code> (this is required for the UI)</li> <li>Authorized redirect URIs: <code>http://localhost</code>, <code>http://localhost:3000</code> (this is required for the UI)</li> </ul> <p></p> </li> </ul>"},{"location":"server/google-auth/#obtain-client-id-and-client-secret","title":"Obtain Client ID and client secret","text":"<ul> <li> <p>Once the OAuth client ID is created, a pop-up dialog box will appear containing the Client ID and     client secret. Make sure to copy and/or download it (via the Download JSON button), as this will be needed in     the following steps.</p> <p></p> </li> </ul>"},{"location":"usage/cli/","title":"Unity Catalog CLI","text":"<p>This page shows you how to use the Unity Catalog CLI.</p> <p>The CLI tool allows users to interact with a Unity Catalog server to create and manage catalogs, schemas, tables across different formats, volumes with unstructured data, functions, ML and AI models, and control catalog server and metastore configuration.</p> <p>Specify token for authenticated access</p> <p>If you have set up authentication, you will need to provide an authentication token when executng all of the following commands on this page. For example, in the following section, to run the catalog list command, you would specify:</p> <pre><code>bin/uc --auth_token $token catalog list\n</code></pre> <p>where <code>$token</code> is the authentication token provided by an identity provider. For more information on how to support both authentication and authorization, please refer to the auth documentation.</p>"},{"location":"usage/cli/#catalog-management-cli-usage","title":"Catalog Management CLI Usage","text":"<p>You can use the Unity Catalog CLI to manage catalogs within your system. The <code>bin/uc</code> script supports various operations such as creating, retrieving, listing, updating and deleting catalogs. Let's take a look at each operation.</p> <p>Default local Unity Catalog instance</p> <p>All examples on this page will use the local Unity Catalog instance which comes pre-loaded with a default catalog (<code>unity</code>), schema (<code>default</code>) and some default assets.</p>"},{"location":"usage/cli/#list-catalogs","title":"List Catalogs","text":"<p>Here's how to list catalogs contained in a Unity Catalog instance.</p> <pre><code>bin/uc catalog list \\\n  [--max_results &lt;max_results&gt;] # (1)\n</code></pre> <ol> <li><code>max_results</code>: optional flag to set the maximum number of results to return.</li> </ol> <p>This will output:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502NAME \u2502  COMMENT   \u2502PROPERTIES\u2502OWNER\u2502 CREATED_AT  \u2502CREATED_BY\u2502UPDATED_AT\u2502UPDATED_BY\u2502                 ID                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502unity\u2502Main catalog\u2502{}        \u2502null \u25021721238005334\u2502null      \u2502null      \u2502null      \u2502f029b870-9468-4f10-badc-630b41e5690d\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/cli/#get-details-of-a-catalog","title":"Get details of a Catalog","text":"<p>Here's how to retrieve the details of a catalog:</p> <pre><code>bin/uc catalog get \\\n  --name &lt;name&gt; # (1)\n</code></pre> <ol> <li><code>name</code>: The name of the catalog.</li> </ol> <p>This should output:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         KEY         \u2502                  VALUE                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502NAME                 \u2502unity                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COMMENT              \u2502Main catalog                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502PROPERTIES           \u2502{}                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502OWNER                \u2502null                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_AT           \u25021721238005334                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_BY           \u2502null                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_AT           \u2502null                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_BY           \u2502null                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502ID                   \u2502f029b870-9468-4f10-badc-630b41e5690d      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/cli/#create-a-catalog","title":"Create a Catalog","text":"<p>You can create a new catalog using:</p> <pre><code>bin/uc catalog create \\\n  --name &lt;name&gt; \\ # (1)\n  [--comment &lt;comment&gt;] \\ # (2)\n  [--properties &lt;properties&gt;] # (3)\n</code></pre> <ol> <li><code>name</code>: The name of the catalog.</li> <li><code>comment</code>: [Optional] The description of the catalog.</li> <li><code>properties</code>: [Optional] The properties of the catalog in JSON format    (e.g., <code>'{\"key1\": \"value1\", \"key2\": \"value2\"}'</code>). Make sure to either escape the double quotes(<code>\\\"</code>) inside the    properties string or just use single quotes(<code>''</code>) around the same.</li> </ol> <p>Here's an example:</p> <pre><code>bin/uc catalog create --name my_catalog --comment \"My First Catalog\" --properties '{\"key1\": \"value1\", \"key2\": \"value2\"}'\n</code></pre>"},{"location":"usage/cli/#update-a-catalog","title":"Update a Catalog","text":"<p>You can update an existing catalog using:</p> <pre><code>bin/uc catalog update \\\n--name &lt;name&gt; \\ # (1)\n[--new_name &lt;new_name&gt;] \\ # (2)\n[--comment &lt;comment&gt;] \\ # (3)\n[--properties &lt;properties&gt;] # (4)\n</code></pre> <ol> <li><code>name</code>: The name of the existing catalog.</li> <li><code>new_name</code>: [Optional] The new name of the catalog.</li> <li><code>comment</code>: [Optional] The new description of the catalog.</li> <li><code>properties</code>: [Optional] The new properties of the catalog in JSON format    (e.g., <code>'{\"key1\": \"value1\", \"key2\": \"value2\"}'</code>). Make sure to either escape the double quotes(<code>\\\"</code>) inside the    properties string or just use single quotes(<code>''</code>) around the same.</li> </ol> <p>At least one of the optional parameters must be specified.</p> <p>Here's an example:</p> <pre><code>bin/uc catalog update \\\n  --name my_catalog \\\n  --new_name my_updated_catalog \\\n  --comment \"Updated Catalog\" \\\n  --properties '{\"updated_key\": \"updated_value\"}'\n</code></pre>"},{"location":"usage/cli/#delete-a-catalog","title":"Delete a Catalog","text":"<p>You can delete an existing catalog using:</p> <pre><code>bin/uc catalog delete \\\n  --name &lt;name&gt; # (1)\n</code></pre> <ol> <li><code>name</code>: The name of the catalog.</li> </ol>"},{"location":"usage/cli/#schema-management-cli-usage","title":"Schema Management CLI Usage","text":"<p>You can use the Unity Catalog CLI to manage schemas within your catalog. The <code>bin/uc</code> script supports various operations such as creating, retrieving, listing, updating and deleting schemas. Let's take a look at each operation.</p>"},{"location":"usage/cli/#list-schemas","title":"List Schemas","text":"<p>You can list schemas within your catalog using:</p> <pre><code>bin/uc schema list \\\n  --catalog &lt;catalog&gt; \\ # (1)\n  [--max_results &lt;max_results&gt;] # (2)\n</code></pre> <ol> <li><code>catalog</code>: The name of the catalog.</li> <li><code>max_results</code>: [Optional] The maximum number of results to return.</li> </ol>"},{"location":"usage/cli/#get-a-schema","title":"Get a Schema","text":"<p>You can retrieve the details of a schema using:</p> <pre><code>bin/uc schema get \\\n  --full_name &lt;full_name&gt; # (1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the existing schema. The full name is the concatenation of the catalog name and schema name separated by a dot (e.g., <code>catalog_name.schema_name</code>).</li> </ol>"},{"location":"usage/cli/#create-a-schema","title":"Create a Schema","text":"<p>You can create a new schema stored within a catalog using:</p> <pre><code>bin/uc schema create \\\n  --catalog &lt;catalog&gt; \\ # (1)\n  --name &lt;name&gt; \\ # (2)\n  [--comment &lt;comment&gt;] \\ # (3)\n  [--properties &lt;properties&gt;] # (4)\n</code></pre> <ol> <li><code>catalog</code>: The name of the catalog.</li> <li><code>name</code>: The name of the schema.</li> <li><code>comment</code>: [Optional] The description of the schema.</li> <li><code>properties</code>: [Optional] The properties of the schema in JSON format    (e.g., <code>'{\"key1\": \"value1\", \"key2\": \"value2\"}'</code>). Make sure to either escape the double quotes(<code>\\\"</code>) inside the    properties string or just use single quotes(<code>''</code>) around the same.</li> </ol> <p>Here's an example:</p> <pre><code>bin/uc schema create \\\n  --catalog my_catalog \\\n  --name my_schema \\\n  --comment \"My Schema\"\n  --properties '{\"key1\": \"value1\", \"key2\": \"value2\"}'\n</code></pre>"},{"location":"usage/cli/#update-a-schema","title":"Update a Schema","text":"<p>You can update an existing schema using:</p> <pre><code>bin/uc schema update \\\n  --full_name &lt;full_name&gt; \\ # (1)\n  [--new_name &lt;new_name&gt;] \\ # (2)\n  [--comment &lt;comment&gt;] \\ # (3)\n  [--properties &lt;properties&gt;] # (4)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the existing schema. The full name is the concatenation of the catalog name and schema name separated by a dot (e.g., <code>catalog_name.schema_name</code>).</li> <li><code>new_name</code>: [Optional] The new name of the schema.</li> <li><code>comment</code>: [Optional] The new description of the schema.</li> <li><code>properties</code>: [Optional] The new properties of the schema in JSON format    (e.g., <code>'{\"key1\": \"value1\", \"key2\": \"value2\"}'</code>). Make sure to either escape the double quotes(<code>\\\"</code>) inside the    properties string or just use single quotes(<code>''</code>) around the same.</li> </ol> <p>At least one of the optional parameters must be specified.</p> <p>Here's an example:</p> <pre><code>bin/uc schema update \\\n  --full_name my_catalog.my_schema \\\n  --new_name my_updated_schema \\\n  --comment \"Updated Schema\" \\\n  --properties '{\"updated_key\": \"updated_value\"}'\n</code></pre>"},{"location":"usage/cli/#delete-a-schema","title":"Delete a Schema","text":"<p>You can delete an existing schema using:</p> <pre><code>bin/uc schema delete \\\n  --full_name &lt;full_name&gt; # (1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the existing schema. The full name is the concatenation of the catalog name and schema name separated by a dot (e.g., <code>catalog_name.schema_name</code>).</li> </ol>"},{"location":"usage/cli/#table-management-cli-usage","title":"Table Management CLI Usage","text":"<p>You can use the Unity Catalog CLI to manage tables within your schema. The <code>bin/uc</code> script supports various operations such as creating, retrieving, listing, updating and deleting tables. Let's take a look at each operation.</p> <p>You can also read more in the Tables section.</p>"},{"location":"usage/cli/#list-tables","title":"List Tables","text":"<p>You can list tables stored in a schema using:</p> <pre><code>bin/uc table list \\\n  --catalog &lt;catalog&gt; \\ # (1)\n  --schema &lt;schema&gt; \\ # (2)\n  [--max_results &lt;max_results&gt;] # (3)\n</code></pre> <ol> <li><code>catalog</code>: The name of the catalog.</li> <li><code>schema</code>: The name of the schema.</li> <li><code>max_results</code>: [Optional] The maximum number of results to return.</li> </ol>"},{"location":"usage/cli/#retrieve-table-information","title":"Retrieve Table Information","text":"<p>You can retrieve table information using:</p> <pre><code>bin/uc table get \\\n  --full_name &lt;full_name&gt; # (1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of an existing table. The full name is the concatenation of the catalog name, schema name and table name separated by dots (e.g., <code>catalog_name.schema_name.table_name</code>).</li> </ol>"},{"location":"usage/cli/#create-a-table","title":"Create a Table","text":"<p>You can create a table using:</p> <pre><code>bin/uc table create \\\n  --full_name &lt;full_name&gt; \\ # (1)\n  --columns &lt;columns&gt; \\ # (2)\n  --storage_location &lt;storage_location&gt; \\ # (3)\n  [--format &lt;format&gt;] \\ # (4)\n  [--properties &lt;properties&gt;] # (5)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the table, which is a concatenation of the catalog name,    schema name, and table name separated by dots (e.g., <code>catalog_name.schema_name.table_name</code>).</li> <li><code>columns</code>: The columns of the table in SQL-like format <code>\"column_name column_data_type\"</code>.    Supported data types include <code>BOOLEAN</code>, <code>BYTE</code>, <code>SHORT</code>, <code>INT</code>, <code>LONG</code>, <code>FLOAT</code>, <code>DOUBLE</code>, <code>DATE</code>, <code>TIMESTAMP</code>, <code>TIMESTAMP_NTZ</code>, <code>STRING</code>, <code>BINARY</code>, <code>DECIMAL</code>. Separate multiple columns with a comma    (e.g., <code>\"id INT, name STRING\"</code>).</li> <li><code>format</code>: [Optional] The format of the data source. Supported values are <code>DELTA</code>, <code>PARQUET</code>, <code>ORC</code>, <code>JSON</code>,<code>CSV</code>, <code>AVRO</code>, and <code>TEXT</code>. If not specified the default format is <code>DELTA</code>.</li> <li><code>storage_location</code>: The storage location associated with the table. It is a mandatory field for <code>EXTERNAL</code> tables.</li> <li><code>properties</code>: [Optional] The properties of the table in JSON format    (e.g., <code>'{\"key1\": \"value1\", \"key2\": \"value2\"}'</code>). Make sure to either escape the double quotes(<code>\\\"</code>) inside the properties string or just use single quotes(<code>''</code>) around the same.</li> </ol> <p>Here's an example to create an external DELTA table with columns <code>id</code> and <code>name</code> in the schema <code>my_schema</code> of catalog <code>my_catalog</code> with storage location <code>/path/to/storage</code>:</p> <pre><code>bin/uc table create \\\n  --full_name my_catalog.my_schema.my_table \\\n  --columns \"id INT, name STRING\" \\\n  --storage_location \"/path/to/storage\"\n</code></pre> <p>When running against UC server, the storage location can be a local path(absolute path) or an S3 path. When S3 path is provided, the server configuration will vend temporary credentials to access the S3 bucket and server properties must be set up accordingly.</p>"},{"location":"usage/cli/#read-a-delta-table","title":"Read a Delta Table","text":"<p>You can read a Delta table using:</p> <pre><code>bin/uc table read \\\n  --full_name &lt;full_name&gt; \\ # (1)\n  [--max_results &lt;max_results&gt;] # (2)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the table, which is a concatenation of the catalog name,    schema name, and table name separated by dots (e.g., <code>catalog_name.schema_name.table_name</code>).</li> <li><code>max_results</code>: [Optional] The maximum number of rows to return.</li> </ol>"},{"location":"usage/cli/#write-sample-data-to-a-delta-table","title":"Write Sample Data to a Delta Table","text":"<p>You can write sample data to a Delta table using:</p> <pre><code>bin/uc table write \\\n  --full_name &lt;catalog&gt;.&lt;schema&gt;.&lt;table&gt; # (1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the table, which is a concatenation of the catalog name,    schema name, and table name separated by dots (e.g., <code>catalog_name.schema_name.table_name</code>).</li> </ol> <p>This is an experimental feature and only some primitive types are supported for writing sample data.</p>"},{"location":"usage/cli/#delete-a-table","title":"Delete a Table","text":"<p>You can delete an existing table using:</p> <pre><code>bin/uc table delete \\\n  --full_name &lt;full_name&gt; #(1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the table, which is a concatenation of the catalog name,    schema name, and table name separated by dots (e.g., <code>catalog_name.schema_name.table_name</code>).</li> </ol>"},{"location":"usage/cli/#volume-management-cli-usage","title":"Volume Management CLI Usage","text":"<p>You can use the Unity Catalog CLI to manage volumes within your schema. The <code>bin/uc</code> script supports various operations such as creating, retrieving, listing, updating and deleting volumes. Let's take a look at each operation.</p> <p>You can also read more in the Volumes section.</p>"},{"location":"usage/cli/#list-volumes","title":"List Volumes","text":"<p>You can list all volumes stored in a Unity Catalog schema using:</p> <pre><code>bin/uc volume list \\\n  --catalog &lt;catalog&gt; \\ # (1)\n  --schema &lt;schema&gt; \\ # (2)\n  [--max_results &lt;max_results&gt;] # (3)\n</code></pre> <ol> <li><code>catalog</code>: The name of the catalog.</li> <li><code>schema</code>: The name of the schema.</li> <li><code>max_results</code>: [Optional] The maximum number of results to return.</li> </ol>"},{"location":"usage/cli/#retrieve-volume-information","title":"Retrieve Volume Information","text":"<p>You can inspect information about your volume using:</p> <pre><code>bin/uc volume get \\\n  --full_name &lt;full_name&gt; # (1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the volume, which is a concatenation of the catalog name,    schema name, and volume name separated by dots (e.g., <code>catalog_name.schema_name.volume_name</code>).</li> </ol>"},{"location":"usage/cli/#create-a-volume","title":"Create a Volume","text":"<p>You can create a new volume using:</p> <pre><code>bin/uc volume create \\\n  --full_name &lt;full_name&gt; \\ # (1)\n  --storage_location &lt;storage_location&gt; \\ # (2)\n  [--comment &lt;comment&gt;] # (3)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the volume, which is a concatenation of the catalog name,    schema name, and volume name separated by dots (e.g., <code>catalog_name.schema_name.volume_name</code>).</li> <li><code>storage_location</code>: The storage location associated with the volume. When running against UC OSS server,    the storage location can be a local path(absolute path) or an S3 path. When S3 path is provided, the    server configuration will vend temporary credentials to access the S3 bucket and server properties must be set up accordingly. When running against Databricks Unity Catalog, the storage location for EXTERNAL volume can only be an S3 location which has been configured as an <code>external location</code> in your Databricks workspace.</li> <li><code>comment</code>: [Optional] The description of the volume.</li> </ol> <p>Here's an example that creates an external volume with full name <code>my_catalog.my_schema.my_volume</code> with storage location <code>/path/to/storage</code>:</p> <pre><code>bin/uc volume create \\\n  --full_name my_catalog.my_schema.my_volume \\\n  --storage_location \"/path/to/storage\"\n</code></pre>"},{"location":"usage/cli/#update-a-volume","title":"Update a Volume","text":"<p>You can update an existing volume using:</p> <pre><code>bin/uc volume update \\\n  --full_name &lt;catalog&gt;.&lt;schema&gt;.&lt;volume&gt; \\ # (1)\n  --new_name &lt;new_name&gt; \\ # (2)\n  [--comment &lt;comment&gt;] # (3)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the volume, which is a concatenation of the catalog name,    schema name, and volume name separated by dots (e.g., <code>catalog_name.schema_name.volume_name</code>).</li> <li><code>new_name</code>: [Optional] The new name of the volume.</li> <li><code>comment</code>: [Optional] The new description of the volume.</li> </ol> <p>At least one of the optional parameters must be specified.</p> <p>Here's an example:</p> <pre><code>bin/uc volume update \\\n  --full_name my_catalog.my_schema.my_volume \\\n  --new_name my_updated_volume \\\n  --comment \"Updated Volume\"\n</code></pre>"},{"location":"usage/cli/#read-volume-content","title":"Read Volume content","text":"<p>Here's how you can access the contens of a volume:</p> <pre><code>bin/uc volume read \\\n  --full_name &lt;catalog&gt;.&lt;schema&gt;.&lt;volume&gt; \\ # (1)\n  [--path &lt;path&gt;] # (2)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the volume, which is a concatenation of the catalog name,    schema name, and volume name separated by dots (e.g., <code>catalog_name.schema_name.volume_name</code>).</li> <li><code>path</code>: [Optional] The path relative to the volume root. If no path is provided, the volume root is read. If the final path is a directory, the contents of the directory are listed(<code>ls</code>). If the final path is a file, the contents of the file are displayed(<code>cat</code>).</li> </ol>"},{"location":"usage/cli/#write-sample-data-to-a-volume","title":"Write Sample Data to a Volume","text":"<p>Here's how you can write sample date to a volume:</p> <pre><code>bin/uc volume write \\\n  --full_name &lt;full_name&gt; # (1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the volume, which is a concatenation of the catalog name,    schema name, and volume name separated by dots (e.g., <code>catalog_name.schema_name.volume_name</code>).</li> </ol> <p>This operation will write sample text data to a randomly generated file name(UUID) in the volume. This is an experimental feature.</p>"},{"location":"usage/cli/#delete-a-volume","title":"Delete a Volume","text":"<p>You can delete an existing volume using:</p> <pre><code>bin/uc volume delete \\\n  --full_name &lt;full_name&gt; # (1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the volume, which is a concatenation of the catalog name,    schema name, and volume name separated by dots (e.g., <code>catalog_name.schema_name.volume_name</code>).</li> </ol>"},{"location":"usage/cli/#function-management-cli-usage","title":"Function Management CLI Usage","text":"<p>You can use the Unity Catalog CLI to manage functions within your schema. The <code>bin/uc</code> script supports various operations such as creating, retrieving, listing, updating and deleting function. Let's take a look at each operation.</p> <p>You can also read more in the Functions section.</p>"},{"location":"usage/cli/#list-functions","title":"List Functions","text":"<p>You can list functions stored in a Unity Catalog schema using:</p> <pre><code>bin/uc function list \\\n  --catalog &lt;catalog&gt; \\ # (1)\n  --schema &lt;schema&gt; \\ # (2)\n  [--max_results &lt;max_results&gt;] # (3)\n</code></pre> <ol> <li><code>catalog</code>: The name of the catalog.</li> <li><code>schema</code>: The name of the schema.</li> <li><code>max_results</code>: [Optional] The maximum number of results to return.</li> </ol>"},{"location":"usage/cli/#retrieve-function-information","title":"Retrieve Function Information","text":"<p>You can inspect metadata about your function stored in Unity Catalog using:</p> <pre><code>bin/uc function get \\\n  --full_name &lt;full_name&gt; # (1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the function, which is a concatenation of the catalog name,    schema name, and function name separated by dots (e.g., <code>catalog_name.schema_name.function_name</code>).</li> </ol>"},{"location":"usage/cli/#create-a-function","title":"Create a Function","text":"<p>You can create a new function using:</p> <pre><code>bin/uc function create \\\n  --full_name &lt;full_name&gt; \\ # (1)\n  --input_params &lt;input_params&gt; \\ # (2)\n  --data_type &lt;data_type&gt; \\ # (3)\n  --def &lt;definition&gt; \\ # (4)\n  [--comment &lt;comment&gt;] \\ # (5)\n  [--language &lt;language&gt;] # 6)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the function, which is a concatenation of the catalog name, schema name, and function    name separated by dots (e.g., <code>catalog_name.schema_name.function_name</code>).</li> <li><code>input_params</code>: The input parameters to the function in SQL-like format <code>\"param_name param_data_type\"</code>.    Multiple input parameters should be separated by a comma (e.g., <code>\"param1 INT, param2 STRING\"</code>).</li> <li><code>data_type</code>: The data type of the function. Either a type_name (for e.g. <code>INT</code>,<code>DOUBLE</code>, <code>BOOLEAN</code>, <code>DATE</code>), or    <code>TABLE_TYPE</code> if this is a table valued function.</li> <li><code>def</code>: The definition of the function. The definition should be a valid SQL statement or a python routine with the    function logic and return statement.</li> <li><code>comment</code>: [Optional] The description of the function.</li> <li><code>language</code>: [Optional] The language of the function. If not specified, the default value is <code>PYTHON</code>.</li> </ol> <p>Here's an example that creates a Python function that takes two integer inputs and returns the sum of the inputs:</p> <pre><code>bin/uc function create \\\n  --full_name my_catalog.my_schema.my_function \\\n  --input_params \"param1 INT, param2 INT\" \\\n  --data_type INT \\\n  --def \"return param1 + param2\" \\\n  --comment \"Sum Function\"\n</code></pre>"},{"location":"usage/cli/#invoke-a-function","title":"Invoke a Function","text":"<p>You can invoke a function stored in Unity Catalog using:</p> <pre><code>bin/uc function call \\\n  --full_name &lt;catalog&gt;.&lt;schema&gt;.&lt;function_name&gt; \\ # (1)\n  --input_params &lt;input_params&gt; # (2)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the function, which is a concatenation of the catalog name, schema name, and function name separated by dots (e.g., <code>catalog_name.schema_name.function_name</code>).</li> <li><code>input_params</code> : The value of input parameters to the function separated by a comma (e.g., <code>\"param1,param2\"</code>).</li> </ol> <p>This is an experimental feature and only supported for Python functions that take in primitive types as input parameters. It runs the functions using the Python engine script at <code>etc/data/function/python_engine.py</code>.</p> <p>Here's an example that invokes a Python sum function that takes two integer inputs:</p> <pre><code>bin/uc function call \\\n  --full_name my_catalog.my_schema.my_function \\\n  --input_params \"1,2\"\n</code></pre>"},{"location":"usage/cli/#delete-a-function","title":"Delete a Function","text":"<p>You can delete a function using:</p> <pre><code>bin/uc function delete \\\n  --full_name &lt;full_name&gt; # (1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the function, which is a concatenation of the catalog name, schema name, and function    name separated by dots (e.g., <code>catalog_name.schema_name.function_name</code>).</li> </ol>"},{"location":"usage/cli/#registered-model-and-model-version-management","title":"Registered model and model version management","text":"<p>You can use Unity Catalog with MLflow to govern and access your ML and AI models. Read more</p> <p>Please refer to MLflow documentation to learn how to use MLflow to create, register, update, use, and delete registered models and model versions.</p> <p>You can list the registered models in your UC namespace using:</p> <pre><code>bin/uc registered_model list \\\n  --catalog &lt;catalog_name&gt; \\ # (1)\n  --schema &lt;schema_name&gt; # (2)\n</code></pre> <ol> <li><code>catalog</code>: The name of the catalog.</li> <li><code>schema</code>: The name of the schema.</li> </ol> <p>You can list the model versions under a registered model using:</p> <pre><code>bin/uc model_version list \\\n  --full_name &lt;full_name&gt; # (1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the model, which is a concatenation of the catalog name, schema name, and model name separated by dots (e.g., <code>catalog_name.schema_name.model_name</code>).</li> </ol> <p>You can get the metadata of registered models or model versions using:</p> <pre><code>bin/uc registered_model get \\\n  --full_name &lt;full_name&gt; # (1)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the model, which is a concatenation of the catalog name, schema name, and model name separated by dots (e.g., <code>catalog_name.schema_name.model_name</code>).</li> </ol> <p>You can update the comment or name of a registered models using:</p> <pre><code>bin/uc registered_model update \\\n  --full_name &lt;full_name&gt; \\ # (1)\n  --new_name &lt;new_name&gt; \\ # (2)\n  [--comment &lt;comment&gt;] # (3)\n</code></pre> <ol> <li><code>full_name</code>: The full name of the model, which is a concatenation of the catalog name, schema name, and model name separated by dots (e.g., <code>catalog_name.schema_name.model_name</code>).</li> <li><code>new_name</code>: [Optional] The new name of the volume.</li> <li><code>comment</code>: [Optional] The description of the function.</li> </ol> <p>Read more in the Models documentatino.</p>"},{"location":"usage/cli/#cli-server-configuration","title":"CLI Server Configuration","text":"<p>By default, the CLI tool is configured to interact with a local reference server running at <code>http://localhost:8080</code>. The CLI can be configured to talk to Databricks Unity Catalog by one of the following methods:</p> <ul> <li>Include the following params in CLI commands:</li> <li><code>--server &lt;server_url&gt;</code>: The URL of the Unity Catalog server.</li> <li><code>--auth_token &lt;auth_token&gt;</code>: The PAT(Personal Authorization Token) token obtained from Databricks' Workspace.</li> <li>Set the following properties in the CLI configuration file located at <code>examples/cli/src/main/resources/application.properties</code>:</li> <li><code>server</code>: The URL of the Unity Catalog server.</li> <li><code>auth_token</code>: The PAT(Personal Authorization Token) token obtained from Databricks' Workspace.</li> </ul> <p>Each parameter can be configured either from the CLI or the configuration file, independently of each other. The CLI will prioritize the values provided from the CLI over the configuration file.</p> <p>Different look for users CLI commands</p> <p>We're trying out a different look for the CLI commands - which do you prefer - the format above this or the format below? Chime in UC GitHub discussion 529 and let us know!</p>"},{"location":"usage/cli/#manage-users","title":"Manage Users","text":"<p>This section outlines the usage of the <code>bin/uc</code> script for managing users within UC. The script supports various operations such as creating, getting, updating, listing, and deleting users.</p>"},{"location":"usage/cli/#create-user","title":"Create User","text":"<pre><code>bin/uc user create [options]\n</code></pre> <p>Required Params:</p> <pre><code>-- name: The name of the entity.\n-- email : The email address for the user\n</code></pre> <p>Optional Params:</p> <pre><code>-- server: UC Server to connect to. Default is reference server.\n-- auth_token: PAT token to authorize uc requests.\n-- external_id: The identity provider's id for the user\n-- output: To indicate CLI output format preference. Supported values are json and jsonPretty.\n</code></pre>"},{"location":"usage/cli/#delete-user","title":"Delete User","text":"<pre><code>bin/uc user delete [options]\n</code></pre> <p>Required Params:</p> <pre><code>--id The unique id of the user\n</code></pre> <p>Optional Params:</p> <pre><code>--server UC Server to connect to. Default is reference server.\n--auth_token PAT token to authorize uc requests.\n--output To indicate CLI output format preference. Supported values are json and jsonPretty.\n</code></pre>"},{"location":"usage/cli/#get-user","title":"Get User","text":"<pre><code>bin/uc user get [options]\n</code></pre> <p>Required Params:</p> <pre><code>--id The unique id of the user\n</code></pre> <p>Optional Params:</p> <pre><code>--server UC Server to connect to. Default is reference server.\n--auth_token PAT token to authorize uc requests.\n--output To indicate CLI output format preference. Supported values are json and jsonPretty.\n</code></pre>"},{"location":"usage/cli/#list-users","title":"List Users","text":"<pre><code>bin/uc user list [options]\n</code></pre> <p>Required Params:</p> <pre><code>None\n</code></pre> <p>Optional Params:</p> <pre><code>--server UC Server to connect to. Default is reference server.\n--auth_token PAT token to authorize uc requests.\n--output To indicate CLI output format preference. Supported values are json and jsonPretty.\n--filter Query by which the results have to be filtered\n--start_index Specifies the index (starting at 1) of the first result.\n--count Desired number of results per page\n</code></pre>"},{"location":"usage/cli/#update-user","title":"Update User","text":"<pre><code>bin/uc user update [options]\n</code></pre> <p>Required Params:</p> <pre><code>--id The unique id of the user\n</code></pre> <p>Optional Params:</p> <pre><code>--server UC Server to connect to. Default is reference server.\n--auth_token PAT token to authorize uc requests.\n--output To indicate CLI output format preference. Supported values are json and jsonPretty.\n--name The name of the entity.\n--external_id The identity provider's id for the user\n--email The email address for the user\n</code></pre>"},{"location":"usage/cli/#metastore-management-cli-usage","title":"Metastore Management CLI Usage","text":"<p>This section outlines the usage of the <code>bin/uc</code> script to handle operations related to the metastore of the UC OSS server.</p>"},{"location":"usage/cli/#get-metastore-information","title":"Get Metastore Information","text":"<p>Gets information about the metastore hosted by this Unity Catalog service (currently the service hosts only one metastore)</p> <pre><code>bin/uc metastore get\n</code></pre>"},{"location":"usage/functions/","title":"Unity Catalog Functions","text":"<p>This page shows you how to use Unity Catalog to store, access and govern Functions.</p> <p>Functions are units of saved logic that return a scalar value or a set of rows.</p> <p>Using Unity Catalog to store your Functions is great for:</p> <ol> <li>reusing code, and</li> <li>applying permissions or filters.</li> </ol> <p>The following diagram shows an example of a Unity Catalog instance with two functions: <code>sum</code> and <code>my_function</code>:</p> <p></p> <p>Let's look at how this works.</p>"},{"location":"usage/functions/#set-up","title":"Set Up","text":"<p>We'll use a local Unity Catalog server to get started. The default local UC server comes with some sample data.</p> <p>If this is your first time spinning up a UC server, you might want to check out the Quickstart     first.</p> <p>Spin up a local UC server by running the following code in a terminal from the root directory of your local <code>unitycatalog</code> repository:</p> <pre><code>bin/start-uc-server\n</code></pre> <p>Now open a second terminal window to start working with your Unity Catalog instance.</p>"},{"location":"usage/functions/#inspecting-functions","title":"Inspecting Functions","text":"<p>You can list the functions in your UC namespace using:</p> <pre><code>bin/uc function list --catalog unity --schema default\n</code></pre> <p>You should see something that looks like:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    NAME    \u2502CATALOG_\u2502SCHEMA_N\u2502INPUT_PA\u2502DATA_TYP\u2502FULL_DAT\u2502RETURN_P\u2502ROUTINE_\u2502ROUTINE_\u2502ROUTINE_\u2502PARAMETE\u2502IS_DETER\u2502SQL_DATA\u2502IS_NULL_\u2502SECURITY\u2502SPECIFIC\u2502COMMENT \u2502PROPERTI\u2502FULL_NAM\u2502CREATED_\u2502UPDATED_\u2502FUNCTION\u2502EXTERNAL\u2502\n\u2502            \u2502  NAME  \u2502  AME   \u2502  RAMS  \u2502   E    \u2502 A_TYPE \u2502 ARAMS  \u2502  BODY  \u2502DEFINITI\u2502DEPENDEN\u2502R_STYLE \u2502MINISTIC\u2502_ACCESS \u2502  CALL  \u2502 _TYPE  \u2502 _NAME  \u2502        \u2502   ES   \u2502   E    \u2502   AT   \u2502   AT   \u2502  _ID   \u2502_LANGUAG\u2502\n\u2502            \u2502        \u2502        \u2502        \u2502        \u2502        \u2502        \u2502        \u2502   ON   \u2502  CIES  \u2502        \u2502        \u2502        \u2502        \u2502        \u2502        \u2502        \u2502        \u2502        \u2502        \u2502        \u2502        \u2502   E    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502sum         \u2502unity   \u2502default \u2502{\"par...\u2502INT     \u2502INT     \u2502null    \u2502EXTERNAL\u2502t = x...\u2502null    \u2502S       \u2502true    \u2502NO_SQL  \u2502false   \u2502DEFINER \u2502sum     \u2502Adds ...\u2502null    \u2502unity...\u250217183...\u2502null    \u25028e83e...\u2502python  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502lowercase   \u2502unity   \u2502default \u2502{\"par...\u2502STRING  \u2502STRING  \u2502null    \u2502EXTERNAL\u2502g = s...\u2502null    \u2502S       \u2502true    \u2502NO_SQL  \u2502false   \u2502DEFINER \u2502lower...\u2502Conve...\u2502null    \u2502unity...\u250217183...\u2502null    \u250233d81...\u2502python  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>You can get the metadata of one of these functions using:</p> <pre><code>bin/uc function get --full_name unity.default.sum\n</code></pre> <p>You should see something that looks like:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        KEY         \u2502                                               VALUE                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502NAME                \u2502sum                                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CATALOG_NAME        \u2502unity                                                                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCHEMA_NAME         \u2502default                                                                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502INPUT_PARAMS        \u2502{\"parameters\":[{\"name\":\"x\",\"type_text\":\"int\",\"type_json\":\"{\\\"name\\\":\\\"x\\\",\\\"type\\\":\\\"integer\\\",\\\"nul\u2502\n\u2502                    \u2502lable\\\":false,\\\"metadata\\\":{}}\",\"type_name\":\"INT\",\"type_precision\":null,\"type_scale\":null,\"type_inte\u2502\n\u2502                    \u2502rval_type\":null,\"position\":0,\"parameter_mode\":\"IN\",\"parameter_type\":\"PARAM\",\"parameter_default\":null\u2502\n\u2502                    \u2502,\"comment\":null},{\"name\":\"y\",\"type_text\":\"int\",\"type_json\":\"{\\\"name\\\":\\\"y\\\",\\\"type\\\":\\\"integer\\\",\\\"n\u2502\n\u2502                    \u2502ullable\\\":false,\\\"metadata\\\":{}}\",\"type_name\":\"INT\",\"type_precision\":null,\"type_scale\":null,\"type_in\u2502\n\u2502                    \u2502terval_type\":null,\"position\":1,\"parameter_mode\":\"IN\",\"parameter_type\":\"PARAM\",\"parameter_default\":nu\u2502\n\u2502                    \u2502ll,\"comment\":null},{\"name\":\"z\",\"type_text\":\"int\",\"type_json\":\"{\\\"name\\\":\\\"z\\\",\\\"type\\\":\\\"integer\\\",\\\u2502\n\u2502                    \u2502\"nullable\\\":false,\\\"metadata\\\":{}}\",\"type_name\":\"INT\",\"type_precision\":null,\"type_scale\":null,\"type_\u2502\n\u2502                    \u2502interval_type\":null,\"position\":2,\"parameter_mode\":\"IN\",\"parameter_type\":\"PARAM\",\"parameter_default\":\u2502\n\u2502                    \u2502null,\"comment\":null}]}                                                                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502DATA_TYPE           \u2502INT                                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502FULL_DATA_TYPE      \u2502INT                                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RETURN_PARAMS       \u2502null                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502ROUTINE_BODY        \u2502EXTERNAL                                                                                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502ROUTINE_DEFINITION  \u2502t = x + y + z\\nreturn t                                                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502ROUTINE_DEPENDENCIES\u2502null                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502PARAMETER_STYLE     \u2502S                                                                                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502IS_DETERMINISTIC    \u2502true                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SQL_DATA_ACCESS     \u2502NO_SQL                                                                                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502IS_NULL_CALL        \u2502false                                                                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SECURITY_TYPE       \u2502DEFINER                                                                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SPECIFIC_NAME       \u2502sum                                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COMMENT             \u2502Adds two numbers.                                                                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502PROPERTIES          \u2502null                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502FULL_NAME           \u2502unity.default.sum                                                                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_AT          \u25021718315581372                                                                                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_AT          \u2502null                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502FUNCTION_ID         \u25028e83e2d9-e523-46a1-b69c-8fe9212f1057                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502EXTERNAL_LANGUAGE   \u2502python                                                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>The <code>routine definition</code> is probably most helpful here: <code>t = x + y + z\\nreturn t</code></p> <p>It looks like this functions takes in 3 arguments and returns their sum. The <code>DATA_TYPE</code> field tells us that the output should be of <code>INT</code> data type.</p>"},{"location":"usage/functions/#calling-functions-from-unity-catalog","title":"Calling Functions from Unity Catalog","text":"<p>Let's try calling this function.</p> <p>We'll use <code>function call</code> to reference the Function by its full name and pass 3 input parameters:</p> <pre><code>bin/uc function call --full_name unity.default.sum --input_params \"1,2,3\"\n</code></pre> <p>This should return:</p> <p><code>6</code></p> <p>Nicely done! You have called a Function stored in your Unity Catalog.</p>"},{"location":"usage/functions/#adding-functions-to-unity-catalog","title":"Adding Functions to Unity Catalog","text":"<p>Let's create a new function and add it to your Unity Catalog.</p> <p>We'll start with a basic example using only scalar values.</p> <p>Suppose you want to register the following function to Unity Catalog: <code>c = a * b</code></p> <p>To do so, define a new Function by its full name, specify the data type of the output, the input parameters and their data types, and define the function.</p> <pre><code>bin/uc function create --full_name unity.default.my_function \\\n--data_type INT --input_params \"a int, b int\" --def \"c=a*b\\nreturn c\"\n</code></pre> <p>This should output something like:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        KEY         \u2502                                               VALUE                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502NAME                \u2502myFunction                                                                                          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CATALOG_NAME        \u2502unity                                                                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCHEMA_NAME         \u2502default                                                                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502INPUT_PARAMS        \u2502{\"parameters\":[{\"name\":\"a\",\"type_text\":\"int\",\"type_json\":\"{\\\"name\\\":\\\"a\\\",\\\"type\\\":\\\"integer\\\",\\\"nul\u2502\n\u2502                    \u2502lable\\\":true,\\\"metadata\\\":{}}\",\"type_name\":\"INT\",\"type_precision\":null,\"type_scale\":null,\"type_inter\u2502\n\u2502                    \u2502val_type\":null,\"position\":0,\"parameter_mode\":null,\"parameter_type\":null,\"parameter_default\":null,\"co\u2502\n\u2502                    \u2502mment\":null},{\"name\":\"b\",\"type_text\":\"int\",\"type_json\":\"{\\\"name\\\":\\\"b\\\",\\\"type\\\":\\\"integer\\\",\\\"nulla\u2502\n\u2502                    \u2502ble\\\":true,\\\"metadata\\\":{}}\",\"type_name\":\"INT\",\"type_precision\":null,\"type_scale\":null,\"type_interva\u2502\n\u2502                    \u2502l_type\":null,\"position\":1,\"parameter_mode\":null,\"parameter_type\":null,\"parameter_default\":null,\"comm\u2502\n\u2502                    \u2502ent\":null}]}                                                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502DATA_TYPE           \u2502INT                                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502FULL_DATA_TYPE      \u2502INT                                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RETURN_PARAMS       \u2502null                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502ROUTINE_BODY        \u2502EXTERNAL                                                                                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502ROUTINE_DEFINITION  \u2502c=a*b\\nreturn c                                                                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502ROUTINE_DEPENDENCIES\u2502null                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502PARAMETER_STYLE     \u2502S                                                                                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502IS_DETERMINISTIC    \u2502true                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SQL_DATA_ACCESS     \u2502NO_SQL                                                                                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502IS_NULL_CALL        \u2502true                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SECURITY_TYPE       \u2502DEFINER                                                                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SPECIFIC_NAME       \u2502myFunction                                                                                          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COMMENT             \u2502null                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502PROPERTIES          \u2502null                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502FULL_NAME           \u2502unity.default.myFunction                                                                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_AT          \u25021720516826170                                                                                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_AT          \u2502null                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502FUNCTION_ID         \u2502012545ee-2a89-4534-b8e9-f41b09f4b2eb                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502EXTERNAL_LANGUAGE   \u2502python                                                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>You can also store more complex functions. For example, you can import Python modules and use them in your function. Note if you have multiple lines in complex functions, you must insert \"\\n\" to separate lines in the function definition. Otherwise, the function will return \"invalid syntax\" error when it is called.</p> <p>Let's take the example below of a function that uses the Numpy library to simulate a random roll of dice:</p> <pre><code>def myPythonFunction(n_sides, n_dice):\n    import numpy as np\n    rolls=np.random.randint(1, n_sides + 1, size=n_dice)\n    return print(rolls)\"\n</code></pre> <p>You can register this function to your Unity Catalog as follows:</p> <pre><code>bin/uc function create --full_name unity.default.myPythonFunction --data_type INT --input_params \"n_sides int, n_dice int\" --language \"python\" --def \"import numpy as np\\nrolls=np.random.randint(1, n_sides + 1, size=n_dice)\\nreturn print(rolls)\"\n</code></pre> <p>And then call it with:</p> <pre><code>bin/uc function call --full_name unity.default.myPythonFunction --input_params \"6,1\"\n</code></pre> <p>This will simulate rolling a single die with 6 sides.</p>"},{"location":"usage/functions/#function-create-parameters","title":"Function Create Parameters","text":"<p><code>function create</code> takes the following parameters:</p> <p>Required Parameters:</p> <ul> <li><code>--full_name</code>: The full name of the table. The full name is the concatenation of the catalog name, schema name, and     table/volume name separated by a dot. For example, catalog_name.schema_name.table_name.</li> <li><code>--input_params</code>: The input parameters of the function,</li> <li><code>--data_type</code>: The data type of the function.</li> </ul> <p>Optional Parameters:</p> <ul> <li><code>--comment</code>: Comment/Description of the entity.</li> <li><code>--def</code>: The routine definition of the function</li> <li><code>--language</code>: The language of the function, currently only \"python\" is supported.</li> </ul>"},{"location":"usage/models/","title":"Unity Catalog Registered Models and Model Versions","text":"<p>This page shows you how to use Unity Catalog to store, access, and govern Registered Models and Model Versions.</p> <p>Registered Models are logical containers for ML models within Unity Catalog.  A registered model is comprised of any number of Model Versions which represent different iterations of the model that you with to keep track of from within Unity Catalog.</p>"},{"location":"usage/models/#how-unity-catalog-and-mlflow-work-together","title":"How Unity Catalog and MLflow work together","text":"<p>The following diagram shows how Unity Catalog and MLflow work together from tracking to governance.</p> <p></p> <p>The MLflow client connects both MLflow and Unity Catalog services (via <code>port:5000</code> and <code>port:8080</code> respectively).</p> <ol> <li>When you are running your training runs with MLflow, the metrics generated in those training runs are stored within     MLflow.</li> <li>For those same training runs, models are often generated, and those models are also stored within MLflow.</li> <li>Once you have decided which model you want to register, you can register and store that model into Unity Catalog.</li> </ol>"},{"location":"usage/models/#setting-up-mlflow-and-unity-catalog","title":"Setting up MLflow and Unity Catalog","text":"<p>Prerequisites</p> <p>For Unity Catalog MLflow Integration, ensure you are using MLflow version &gt;= 2.16.1 and Unity Catalog &gt;= 0.2.</p>"},{"location":"usage/models/#spin-up-unity-catalog","title":"Spin up Unity Catalog","text":"<p>We will use a local Unity Catalog server to get started.</p> <p>First time working with Unity Catalog?</p> <p>If this is your first time spinning up a UC server, you might want to check out the Quickstart first.</p> <p>Spin up a local UC server by running the following code in a terminal from the root directory of your local <code>unitycatalog</code> repository:</p> <pre><code>bin/start-uc-server\n</code></pre>"},{"location":"usage/models/#install-or-upgrade-mlflow","title":"Install (or upgrade) MLflow","text":"<pre><code>pip install mlflow\n</code></pre> <p>The installation of MLflow includes the MLflow CLI tool, so you can start a local MLflow server with UI by running the command below in your terminal:</p> <pre><code>mlflow ui\n</code></pre> <p>It will generate logs with the IP address of the newly started tracking server which can be used in your MLflow Python workloads, for example:</p> <pre><code>import mlflow\n\nmlflow.set_tracking_uri(\"http://127.0.0.1:5000\") # (1)\nmlflow.set_registry_uri(\"uc:http://127.0.0.1:8080\") # (2)\n</code></pre> <ol> <li>Here we are specifying the MLflow tracking server to store training metrics and models.</li> <li>Here we are specifying that we register our ML model in Unity Catalog.</li> </ol> <p>At this point, your MLflow environment is ready for use with the newly started MLflow tracking server and the Unity Catalog server acting as your model registry.</p> <p>You can quickly train a test model and validate that the Unity Catalog MLflow integration is fully working.</p>"},{"location":"usage/models/#train-and-register-a-sample-model","title":"Train and register a sample model","text":"<p>The following code snippet creates a scikit-learn model and registers the model into Unity Catalog.</p> <pre><code>import os\nfrom sklearn import datasets\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nimport pandas as pd\n\nX, y = datasets.load_iris(return_X_y=True, as_frame=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\nwith mlflow.start_run():\n    # Train a sklearn model on the iris dataset\n    clf = RandomForestClassifier(max_depth=7) \n    clf.fit(X_train, y_train) # (1)\n\n    # Take the first row of the training dataset as the model input example.\n    input_example = X_train.iloc[[0]]\n\n    # Log the model and register it as a new version in UC.\n    mlflow.sklearn.log_model(\n        sk_model=clf,\n        artifact_path=\"model\", # (2)\n\n        # The signature is automatically inferred from the input example\n        # and its predicted output.\n        input_example=input_example,\n        registered_model_name=\"unity.default.iris\", # (3)\n    )\n</code></pre> <ol> <li><code>clf</code> is a Random Forest Classifier and it is being trained from training data (<code>X_train</code>, <code>Y_train</code>) from the Iris     dataset.</li> <li>The <code>artifact_path</code> contains the model we just trained and it is common to have multiple training runs with     multiple models generated and stored with MLflow.</li> <li>Because we had earlier specified <code>mlflow.set_registry_uri(\"uc:http://127.0.0.1:8080\")</code>, the MLflow client will     register the model to Unity Catalog.</li> </ol> <p>Upon successful registration of the model, you should see the following output.</p> <pre><code>Successfully registered model 'unity.default.iris'.\n2024/09/24 20:51:29 INFO mlflow.store.model_registry.abstract_store: Waiting up to 300 seconds for model version to finish creation. Model name: unity.default.iris, version 1\nCreated version '1' of model 'unity.default.iris'.\n&lt;mlflow.models.model.ModelInfo object at 0x13ffb2e80&gt;\n2024/09/24 20:51:29 INFO mlflow.tracking._tracking_service.client: \ud83c\udfc3 View run glamorous-gnu-508 at: http://127.0.0.1:5000/#/experiments/0/runs/b3ab03114a4b4b869f3d30070ffc8a1f.\n2024/09/24 20:51:29 INFO mlflow.tracking._tracking_service.client: \ud83e\uddea View experiment at: http://127.0.0.1:5000/#/experiments/0.\n</code></pre> <p>The results can be seen in the Unity Catalog UI at http://localhost:3000. For more information, dive deeper into the Unity Catalog UI.  </p> <p></p> <p>As you can see in the UI, there is an implied hierarchy of a three-part naming convention within Unity Catalog that is applicable to data and AI assets. The hierarchy of <code>catalog -&gt; schema -&gt; asset</code> plays out as the <code>unity</code> catalog, <code>default</code> schema, and <code>iris</code> asset (in this case ML model).  </p> <p></p> <p>This convention allows us to apply governance to these assets (e.g., models, tables, volumes, and functions) in a similar fashion. You can also see the training run(s) and model(s) in the MLflow UI at http://127.0.0.1:5000/.  </p> <p></p> <p>MLflow Guides</p> <p>Please see the MLflow quickstart guides and the MLflow python API to learn how to use the MLflow client to train, register, and use models from with the Unity Catalog server.</p>"},{"location":"usage/models/#load-the-sample-model","title":"Load the sample model","text":"<p>In a new terminal, you can load your recently registered model using the following code snippet.</p> <pre><code>from sklearn import datasets\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nimport pandas as pd\n\nimport mlflow\nimport mlflow.sklearn\nfrom mlflow.models import infer_signature\n\nmlflow.set_tracking_uri(\"http://127.0.0.1:5000\")\nmlflow.set_registry_uri(\"uc:http://127.0.0.1:8080\") # (1)\n\nX, y = datasets.load_iris(return_X_y=True, as_frame=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Load model\nloaded_model = mlflow.pyfunc.load_model(f\"models:/unity.default.iris/1\") # (2)\npredictions = loaded_model.predict(X_test)\niris_feature_names = datasets.load_iris().feature_names\nresult = pd.DataFrame(X_test, columns=iris_feature_names)\nresult[\"actual_class\"] = y_test\nresult[\"predicted_class\"] = predictions\nresult[:4]\n</code></pre> <ol> <li>Here we are specifying that we are loading our ML model from Unity Catalog.</li> <li>We are loading the ML model <code>unity.default.iris</code>, version <code>1</code> from the Unity Catalog model registry.</li> </ol> <p>This code snippet uses the <code>unity.default.iris</code> model to predict the class (<code>predicted_class</code>) using the test dataset (<code>X_test</code>) and compares it to the actual class (<code>actual_class</code>) from the Iris dataset.</p> <pre><code>     sepal length (cm)  sepal width (cm)  petal length (cm)  petal width (cm)  actual_class  predicted_class\n73                 6.1               2.8                4.7               1.2             1                1\n18                 5.7               3.8                1.7               0.3             0                0\n118                7.7               2.6                6.9               2.3             2                2\n78                 6.0               2.9                4.5               1.5             1                1\n</code></pre> <p>Tip</p> <p>The UC CLI also has support for interacting with models in the Unity Catalog server. It is recommended that you interact with models in Unity Catalog using the MLflow client.</p>"},{"location":"usage/models/#inspecting-registered-models-and-model-versions","title":"Inspecting Registered Models and Model Versions","text":"<p>You can list the registered models in your UC namespace using:</p> List registered models<pre><code>bin/uc registered_model list --catalog unity --schema default\n</code></pre> <p>You should see something that looks like:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   NAME   \u2502   CATALOG_NAME    \u2502    SCHEMA_NAME    \u2502 STORAGE_LOCATION  \u2502     FULL_NAME     \u2502      COMMENT      \u2502    CREATED_AT     \u2502    CREATED_BY     \u2502    UPDATED_AT     \u2502    UPDATED_BY     \u2502              MODEL_ID              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502iris      \u2502unity              \u2502default            \u2502file:/tmp/uc-roo...\u2502unity.default.ir...\u2502null               \u25021725398516483      \u2502null               \u25021725398516483      \u2502null               \u25022ea060a1-2315-490f-8edf-5f6419392de6\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Additionally, you can list the model versions under a registered model using:</p> List model versions<pre><code>bin/uc model_version list --full_name unity.default.iris\n</code></pre> <p>You should see something that looks like this when listing model versions:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  MODEL_NAME  \u2502 CATALOG_NAME \u2502 SCHEMA_NAME  \u2502   VERSION    \u2502    SOURCE    \u2502RUN_ID\u2502    STATUS    \u2502STORAGE_LOCATI\u2502   COMMENT    \u2502  CREATED_AT  \u2502  CREATED_BY  \u2502  UPDATED_AT  \u2502  UPDATED_BY  \u2502          MODEL_VERSION_ID          \u2502\n\u2502              \u2502              \u2502              \u2502              \u2502              \u2502      \u2502              \u2502      ON      \u2502              \u2502              \u2502              \u2502              \u2502              \u2502                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502iris          \u2502unity         \u2502default       \u25021             \u2502my_source     \u2502my_id \u2502PENDING_REG...\u2502file:/tmp/u...\u2502Model         \u25021725847699924 \u2502null          \u25021725847699924 \u2502null          \u2502a61c624f-206a-419b-b065-65acf5f1b8f9\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>You can get the metadata of registered models or model versions using</p> View registered model metadata<pre><code>bin/uc registered_model get --full_name unity.default.iris\n</code></pre> <p>which would return something similar to this:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                 KEY                  \u2502                                                                VALUE                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502NAME                                  \u2502iris                                                                                                                                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CATALOG_NAME                          \u2502unity                                                                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCHEMA_NAME                           \u2502default                                                                                                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502STORAGE_LOCATION                      \u2502file:/tmp/ucroot/f029b870-9468-4f10-badc-630b41e5690d/b08dfd57-a939-46cf-b102-9b906b884fae/models/a4f296f1-94a9-4820-bf0d-d16d77a65f4f\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502FULL_NAME                             \u2502unity.default.iris                                                                                                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COMMENT                               \u2502null                                                                                                                                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_AT                            \u25021725848194737                                                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_BY                            \u2502null                                                                                                                                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_AT                            \u25021725848194737                                                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_BY                            \u2502null                                                                                                                                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502MODEL_ID                              \u2502a4f296f1-94a9-4820-bf0d-d16d77a65f4f                                                                                                  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>or</p> View model version metadata<pre><code>bin/uc model_version get --full_name unity.default.iris --version 1\n</code></pre> <p>which would return something similar to:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                 KEY                  \u2502                                                                                    VALUE                                                                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502MODEL_NAME                            \u2502iris                                                                                                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CATALOG_NAME                          \u2502unity                                                                                                                                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCHEMA_NAME                           \u2502default                                                                                                                                                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502VERSION                               \u25021                                                                                                                                                                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SOURCE                                \u2502my_source                                                                                                                                                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RUN_ID                                \u2502my_id                                                                                                                                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502STATUS                                \u2502PENDING_REGISTRATION                                                                                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502STORAGE_LOCATION                      \u2502file:/tmp/ucroot/f029b870-9468-4f10-badc-630b41e5690d/b08dfd57-a939-46cf-b102-9b906b884fae/models/a4f296f1-94a9-4820-bf0d-d16d77a65f4f/versions/a61c624f-206a-419b-b065-65acf\u2502\n\u2502                                      \u25025f1b8f9                                                                                                                                                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COMMENT                               \u2502Model                                                                                                                                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_AT                            \u25021725847699924                                                                                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_BY                            \u2502null                                                                                                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_AT                            \u25021725847699924                                                                                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_BY                            \u2502null                                                                                                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502MODEL_VERSION_ID                      \u2502a61c624f-206a-419b-b065-65acf5f1b8f9                                                                                                                                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/models/#updating-registered-models-and-model-versions","title":"Updating registered models and model versions","text":"<p>You can update the comment or name of a registered models using the Unity Catalog CLI.</p> Comment a registered model<pre><code>bin/uc registered_model update --full_name unity.default.iris --new_name iris2 --comment \"new comment\"\n</code></pre> <p>which will return the updated metadata of the registered model:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                 KEY                  \u2502                                                                VALUE                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502NAME                                  \u2502iris2                                                                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CATALOG_NAME                          \u2502unity                                                                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCHEMA_NAME                           \u2502default                                                                                                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502STORAGE_LOCATION                      \u2502file:/tmp/ucroot/f029b870-9468-4f10-badc-630b41e5690d/b08dfd57-a939-46cf-b102-9b906b884fae/models/a4f296f1-94a9-4820-bf0d-d16d77a65f4f\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502FULL_NAME                             \u2502unity.default.iris2                                                                                                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COMMENT                               \u2502new comment                                                                                                                           \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_AT                            \u25021725848194737                                                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_BY                            \u2502null                                                                                                                                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_AT                            \u25021725848487645                                                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_BY                            \u2502null                                                                                                                                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502MODEL_ID                              \u2502a4f296f1-94a9-4820-bf0d-d16d77a65f4f                                                                                                  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Additionally, you can update the comment of a model version as well:</p> Comment a model version<pre><code>bin/uc model_version --full_name unity.default.iris2 --version 1 --comment \"New model version comment\"\n</code></pre> <p>which will return the updated model version metadata:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                 KEY                  \u2502                                                                                    VALUE                                                                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502MODEL_NAME                            \u2502iris2                                                                                                                                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CATALOG_NAME                          \u2502unity                                                                                                                                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCHEMA_NAME                           \u2502default                                                                                                                                                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502VERSION                               \u25021                                                                                                                                                                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SOURCE                                \u2502my_source                                                                                                                                                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RUN_ID                                \u2502my_id                                                                                                                                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502STATUS                                \u2502PENDING_REGISTRATION                                                                                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502STORAGE_LOCATION                      \u2502file:/tmp/ucroot/f029b870-9468-4f10-badc-630b41e5690d/b08dfd57-a939-46cf-b102-9b906b884fae/models/a4f296f1-94a9-4820-bf0d-d16d77a65f4f/versions/055401d8-b141-4eaa-a05c-2f6a8\u2502\n\u2502                                      \u250269f779b                                                                                                                                                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COMMENT                               \u2502New model version comment                                                                                                                                                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_AT                            \u25021725848675124                                                                                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_BY                            \u2502null                                                                                                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_AT                            \u25021725848680088                                                                                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_BY                            \u2502null                                                                                                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502MODEL_VERSION_ID                      \u2502055401d8-b141-4eaa-a05c-2f6a869f779b                                                                                                                                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/models/#deleting-registered-models-and-model-versions","title":"Deleting registered models and model versions","text":"<p>Using the Unity Catalog CLI you can also delete model versions and registered models.</p> Delete model version<pre><code># Delete model version \nbin/uc model_version delete --full_name unity.default.iris2 --version 1\n</code></pre> <p>and</p> Delete registered model<pre><code>bin/uc registered_model delete --full_name unity.default.iris2\n</code></pre>"},{"location":"usage/ui/","title":"Unity Catalog UI","text":"<p>The Unity Catalog UI allows you to interact with a Unity Catalog server to view or create data and AI assets.</p> <p></p>"},{"location":"usage/ui/#start-unity-catalog-ui-locally","title":"Start Unity Catalog UI locally","text":"<p>To use the Unity Catalog UI, start a new terminal and ensure you have already started the UC server (e.g., <code>./bin/start-uc-server</code>)</p> <p>Prerequisites</p> <p>The Unity Catalog UI requires both Node and Yarn.</p> <p>To start the UI locally, run the following commands to start <code>yarn</code></p> <pre><code>cd /ui\nyarn install\nyarn start\n</code></pre>"},{"location":"usage/ui/#assets","title":"Assets","text":""},{"location":"usage/ui/#catalogs","title":"Catalogs","text":"<p>The following steps show how you can create, describe, and delete UC catalogs.</p> 1. List and create catalogs2. Create catalog dialog3. Delete a catalog <p>After clicking the top Catalog button, you will see your list of catalogs.  To create a catalog, click the Create Catalog button to the right.</p> <p></p> <p>Specify the name and include any comments when creating your catalog.</p> <p></p> <p>Click the horizontal three dots next to Create Schema button to delete your catalog.</p> <p></p>"},{"location":"usage/ui/#schemas","title":"Schemas","text":"<p>The following steps show how you can create, describe, and delete UC schemas.</p> 1. List and create schemas2. Create schemas dialog3. Delete a schema <p>After clicking on any catalog, the main dialog contains the list of available schemas.  Click the Create Schemas button to the right to create a new schema.</p> <p></p> <p>Specify the name and include any comments when creating your schema.</p> <p></p> <p>Click the horizontal three dots to the right to delete your schema.</p> <p></p>"},{"location":"usage/ui/#tables","title":"Tables","text":"<p>The following steps show how you can view your UC table metadata and descriptions.</p> 1. View tables in schema (1)2. View tables in schema (2)3. View table metadata <p>Click on the schema (e.g., <code>unity.demo</code>) to view its tables.</p> <p></p> <p>Click on the schema (e.g., <code>unity.default</code>) to view its tables.</p> <p></p> <p>Click on any table (e.g., <code>unity.default.marksheet</code>) to view its metadata.  You also have the option to delete the table via the three horizontal dots on the right.</p> <p></p>"},{"location":"usage/ui/#volumes","title":"Volumes","text":"<p>The following steps show how you can view your UC volume metadata and descriptions.</p> 1. Traverse to volumes2. View volume metadata3. Edit volume description <p>Using the left-hand nav bar, click on catalog &gt; schema (e.g., <code>unity</code> &gt; <code>default</code>) to view the available volumes.</p> <p></p> <p>Click on the volume (e.g., <code>unity.default.txt_files</code>) to view its metadata.  You have the option to delete it by click on the three horizontal dots to the right.</p> <p></p> <p>Click the edit button to change its descripton.</p> <p></p>"},{"location":"usage/ui/#functions","title":"Functions","text":"<p>The following steps show how you can view your UC functions metadata and descriptions.</p> 1. Traverse to functions2. View functions metadata <p>Using the left-hand nav bar, click on catalog &gt; schema (e.g., <code>unity</code> &gt; <code>default</code>) to view the available functions.</p> <p></p> <p>Click on the volume (e.g., <code>unity.default.lowercase</code>) to view its metadata.  You have the option to delete it by click on the three horizontal dots to the right.</p> <p></p>"},{"location":"usage/ui/#models","title":"Models","text":"<p>The following steps show how you can list, describe and delete your UC models.</p> 1. List and create models2. Create model3. Create model dialog4. Edit model description5. Delete a model <p>After clicking on any schema &gt; models, the main dialog contains the list of available models.  Click the horizontal three dots button to the right to create a new model.</p> <p></p> <p>Click the edit button to change its descripton.</p> <p></p> <p>Specify the name and include any comments when creating your model.</p> <p></p> <p>Click the edit button to change its descripton.</p> <p></p> <p>Click the horizontal three dots to the right to delete your model.</p> <p></p>"},{"location":"usage/ui/#model-versions","title":"Model Versions","text":"<p>The following steps show how you can view your UC model versions and their metadata.</p> 1. Traverse to models2. View model versions3. View model version metadata4. Edit model version description5. Delete a model version <p>Using the left-hand nav bar, click on catalog &gt; schema (e.g., <code>unity</code> &gt; <code>default</code>) to view the available models.</p> <p></p> <p>Click on the model (e.g., <code>unity.default.iris</code>) to view its version(s).</p> <p></p> <p>Click on the model version to view its details.</p> <p></p> <p>Click the edit button to change its descripton.</p> <p></p> <p>Click the horizontal three dots to the right to delete your model version.</p> <p></p>"},{"location":"usage/volumes/","title":"Unity Catalog Volumes","text":"<p>Unity Catalog volumes are good for registering datasets that are non-tabular or not supported as Unity Catalog tables.</p> <p>Unity Catalog volumes are a great option for JSON files, text files, or Lance datasets.</p> <p>Here's an example of a schema that contains three volumes:</p> <p></p>"},{"location":"usage/volumes/#basic-unity-catalog-volume-operations","title":"Basic Unity Catalog volume operations","text":"<p>Let's list the volumes.</p> <pre><code>bin/uc volume list --catalog unity --schema default\n</code></pre> <p></p> <p>You should see a few volumes. Let's get the metadata of one of those volumes.</p> <pre><code>bin/uc volume get --full_name unity.default.json_files\n</code></pre> <p></p> <p>Now let's list the directories/files in this volume.</p> <pre><code>bin/uc volume read --full_name unity.default.json_files\n</code></pre> <p></p> <p>You should see two JSON files listed and one directory. Let's view the contents of one file.</p> <pre><code>bin/uc volume read --full_name unity.default.json_files --path c.json\n</code></pre> <p></p> <p>Voil\u00e0! You have read the content of a file stored in a volume. We can also list the contents of any subdirectory. For example:</p> <pre><code>bin/uc volume read --full_name unity.default.json_files --path dir1\n</code></pre> <p>Now let's try creating a new external volume. First physically create a directory with some files in it.</p> <p>For example, create a directory <code>/tmp/my_volume</code> and put some files in it.  Then create the volume in UC.</p> <pre><code>bin/uc volume create --full_name unity.default.my_volume \\\n--storage_location /tmp/my_volume\n</code></pre> <p>Add a file to the volume:</p> <pre><code>mkdir /tmp/my_volume\ntouch /tmp/my_volume/whatever.txt\n</code></pre> <p>Now you can see the contents of this volume.</p> <pre><code>bin/uc volume read --full_name unity.default.my_volume\n</code></pre> <p></p>"},{"location":"usage/tables/deltalake/","title":"Delta Lake","text":"<p>This page explains how you can work with Delta Lake tables in your Unity Catalog.</p> <p>To follow along, make sure you have a local instance of Unity Catalog running by launching the following command from a terminal window:</p> <pre><code>bin/start-uc-server\n</code></pre> <p>This local UC server will come with some sample data pre-loaded.</p> <p>You can list all the tables in your Unity Catalog using:</p> <pre><code>bin/uc table list --catalog unity --schema default\n</code></pre> <p>Your output should look something like this:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502      NAME       \u2502 CATALOG_NAME \u2502 ... \u2502              TABLE_ID              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502marksheet        \u2502unity         \u2502 ... \u2502c389adfa-5c8f-497b-8f70-26c2cca4976d\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502marksheet_uniform\u2502unity         \u2502 ... \u25029a73eb46-adf0-4457-9bd8-9ab491865e0d\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502numbers          \u2502unity         \u2502 ... \u250232025924-be53-4d67-ac39-501a86046c01\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502user_countries   \u2502unity         \u2502 ... \u250226ed93b5-9a18-4726-8ae8-c89dfcfea069\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>As you can see, there are 4 tables in this catalog. All 4 tables are in the DELTA format.</p> <p>Let's take a look at how we can work with these Delta Lake tables.</p>"},{"location":"usage/tables/deltalake/#how-to-get-table-metadata","title":"How to Get Table Metadata","text":"<p>Delta Lake tables have rich metadata. You can use the <code>bin/uc table get ...</code> command to take a look at a table's metadata.</p> <p>Let's take a look at the <code>numbers</code> table:</p> <pre><code>bin/uc table get --full_name unity.default.numbers\n</code></pre> <p>Your output should look something like this:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        KEY         \u2502                                               VALUE                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502NAME                \u2502numbers                                                                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CATALOG_NAME        \u2502unity                                                                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCHEMA_NAME         \u2502default                                                                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502TABLE_TYPE          \u2502EXTERNAL                                                                                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502DATA_SOURCE_FORMAT  \u2502DELTA                                                                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COLUMNS             \u2502{\"name\":\"as_int\",\"type_text\":\"int\",\"type_json\":\"{\\\"name\\\":\\\"as_int\\\",\\\"type\\\":\\\"integer\\\",\\\"nullable\u2502\n\u2502                    \u2502\\\":false,\\\"metadata\\\":{}}\",\"type_name\":\"INT\",\"type_precision\":0,\"type_scale\":0,\"type_interval_type\":\u2502\n\u2502                    \u2502null,\"position\":0,\"comment\":\"Int                    column\",\"nullable\":false,\"partition_index\":null}\u2502\n\u2502                    \u2502{\"name\":\"as_double\",\"type_text\":\"double\",\"type_json\":\"{\\\"name\\\":\\\"as_double\\\",\\\"type\\\":\\\"double\\\",\\\"\u2502\n\u2502                    \u2502nullable\\\":false,\\\"metadata\\\":{}}\",\"type_name\":\"DOUBLE\",\"type_precision\":0,\"type_scale\":0,\"type_inte\u2502\n\u2502                    \u2502rval_type\":null,\"position\":1,\"comment\":\"Double column\",\"nullable\":false,\"partition_index\":null}     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502STORAGE_LOCATION    \u2502file:///Users/avriiil/Documents/git/my-forks/unitycatalog/etc/data/external/unity/default/tables/nu\u2502\n\u2502                    \u2502mbers/                                                                                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COMMENT             \u2502External table                                                                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502PROPERTIES          \u2502{\"key1\":\"value1\",\"key2\":\"value2\"}                                                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_AT          \u25021721238005617                                                                                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_AT          \u25021721238005617                                                                                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502TABLE_ID            \u250232025924-be53-4d67-ac39-501a86046c01                                                                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/tables/deltalake/#how-to-read-delta-tables","title":"How to Read Delta Tables","text":"<p>Use the <code>bin/uc table read ...</code> command to read your Delta table. You can optionally limit the number of results with the <code>max_results</code> flag.</p> <pre><code>bin/uc table read --full_name unity.default.numbers --max_results 3\n</code></pre> <p>This should output:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502as_int(integer)                        \u2502as_double(double)                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502564                                    \u2502188.75535598441473                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502755                                    \u2502883.6105633023361                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502644                                    \u2502203.4395591086936                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/tables/deltalake/#how-to-create-a-new-delta-table","title":"How to Create a New Delta Table","text":"<p>Use the <code>bin/uc table create ...</code> command to create a new Delta table in your Unity Catalog.</p> <p>This command has multiple parameters:</p> Parameter Description <code>full_name</code> The full name of the table, which is a concatenation of the catalog name, schema name, and table name separated by dots (e.g., <code>catalog_name.schema_name.table_name</code>). <code>columns</code> The columns of the table in SQL-like format \"column_name column_data_type\". Supported data types include <code>BOOLEAN, BYTE, SHORT, INT, LONG, FLOAT, DOUBLE, DATE, TIMESTAMP, TIMESTAMP_NTZ, STRING, BINARY, DECIMAL</code>. Separate multiple columns with a comma (e.g., \"<code>id INT, name STRING</code>\"). <code>format</code> [Optional] The format of the data source. Supported values are DELTA, PARQUET, ORC, JSON, CSV, AVRO, and TEXT. If not specified the default format is DELTA. <code>storage_location</code> The storage location associated with the table. It is a mandatory field for EXTERNAL tables. <code>properties</code> [Optional] The properties of the entity in JSON format (e.g., <code>'{\"key1\": \"value1\", \"key2\": \"value2\"}'</code>). Make sure to either escape the double quotes(\") inside the properties string or just use single quotes(<code>''</code>) around the same. <p>Run the command below with the correct <code>path/to/storage</code> to create a new DELTA table with 2 columns: <code>some_numbers</code> and <code>some_letters</code>. You can get the storage location from the <code>STORAGE_LOCATION</code> field of your <code>bin/uc table get ...</code> call above.</p> <pre><code>bin/uc table create --full_name unity.default.test --columns \"some_numbers INT, some_letters STRING, some_times TIMESTAMP\" --storage_location file:///Users/avriiil/Documents/git/my-forks/unitycatalog/etc/data/external/unity/default/tables/test\n</code></pre> <p>This should output:</p> <pre><code>Table created successfully at: file:///Users/avriiil/Documents/git/my-forks/unitycatalog/etc/data/external/unity/default/tables/test\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        KEY         \u2502                                               VALUE                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502NAME                \u2502test                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CATALOG_NAME        \u2502unity                                                                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCHEMA_NAME         \u2502default                                                                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502TABLE_TYPE          \u2502EXTERNAL                                                                                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502DATA_SOURCE_FORMAT  \u2502DELTA                                                                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COLUMNS             \u2502{\"name\":\"some_numbers\",\"type_text\":\"int\",\"type_json\":\"{\\\"name\\\":\\\"some_numbers\\\",\\\"type\\\":\\\"integer\\\u2502\n\u2502                    \u2502\",\\\"nullable\\\":true,\\\"metadata\\\":{}}\",\"type_name\":\"INT\",\"type_precision\":0,\"type_scale\":0,\"type_inte\u2502\n\u2502                    \u2502rval_type\":null,\"position\":0,\"comment\":null,\"nullable\":true,\"partition_index\":null}                 \u2502\n\u2502                    \u2502{\"name\":\"some_letters\",\"type_text\":\"string\",\"type_json\":\"{\\\"name\\\":\\\"some_letters\\\",\\\"type\\\":\\\"strin\u2502\n\u2502                    \u2502g\\\",\\\"nullable\\\":true,\\\"metadata\\\":{}}\",\"type_name\":\"STRING\",\"type_precision\":0,\"type_scale\":0,\"type\u2502\n\u2502                    \u2502_interval_type\":null,\"position\":1,\"comment\":null,\"nullable\":true,\"partition_index\":null}            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502STORAGE_LOCATION    \u2502file:///Users/avriiil/Documents/git/my-forks/unitycatalog/etc/data/external/unity/default/tables/te \u2502\n\u2502                    \u2502st2                                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COMMENT             \u2502null                                                                                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502PROPERTIES          \u2502{}                                                                                                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CREATED_AT          \u25021721644623209                                                                                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502UPDATED_AT          \u25021721644623209                                                                                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502TABLE_ID            \u25022e8b23f2-4ff7-4a10-8d23-b8c7bae2bdb0                                                                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/tables/deltalake/#how-to-write-to-delta-tables","title":"How to Write to Delta Tables","text":"<p>Use the <code>bin/uc write ...</code> command to write data to a Delta table.</p> <p>Let's use our new <code>test</code> table as an example. This table should be empty. Let's confirm:</p> <pre><code>bin/uc table read --full_name unity.default.test\n</code></pre> <p>This should output:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502some_numbers(integer)                  \u2502some_letters(string)                  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Now use the following command to write some sample data to this table.</p> <pre><code>bin/uc table write --full_name &lt;catalog&gt;.&lt;schema&gt;.&lt;table&gt;\n</code></pre> <p>This is an experimental feature. Currently, this will only write sample data and supports only some primitive data types.</p>"},{"location":"usage/tables/deltalake/#how-to-delete-a-delta-table","title":"How to Delete a Delta Table","text":"<p>Use the <code>bin/uc table delete ...</code> command to delete a Delta table from your Unity Catalog.</p> <p>Let's remove the <code>test</code> table we've just created:</p> <pre><code> bin/uc table delete --full_name unity.default.test\n</code></pre> <p>This will remove the Delta table. Let's confirm by listing the tables in our catalog and schema:</p> <pre><code>bin/uc table list --catalog unity --schema default\n</code></pre> <p>This should output:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502      NAME       \u2502 CATALOG_NAME \u2502 ... \u2502              TABLE_ID              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502marksheet        \u2502unity         \u2502 ... \u2502c389adfa-5c8f-497b-8f70-26c2cca4976d\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502marksheet_uniform\u2502unity         \u2502 ... \u25029a73eb46-adf0-4457-9bd8-9ab491865e0d\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502numbers          \u2502unity         \u2502 ... \u250232025924-be53-4d67-ac39-501a86046c01\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502user_countries   \u2502unity         \u2502 ... \u250226ed93b5-9a18-4726-8ae8-c89dfcfea069\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Nicely done!</p>"},{"location":"usage/tables/deltalake/#delta-lake-with-daft","title":"Delta Lake with Daft","text":"<p>Here is an example of how you can use Delta Lake\u2019s powerful features from Unity Catalog using Daft</p> <p>You need to have a Unity Catalog server running to connect to.</p> <p>For testing purposes, you can spin up a local server by running the code below in a terminal:</p> <pre><code>bin/start-uc-server\n</code></pre> <p>Then import Daft and the UnityCatalog abstraction:</p> <pre><code>import daft\nfrom daft.unity_catalog import UnityCatalog\n</code></pre> <p>Next, point Daft to your UC server</p> <pre><code>unity = UnityCatalog(\n    endpoint=\"http://127.0.0.1:8080\",\n    token=\"not-used\",\n)\n</code></pre> <p>And now you can access your Delta tables stored in Unity Catalog. First by listing the tables:</p> <pre><code>print(unity.list_tables(\"unity.default\"))\n</code></pre> <p>This should output:</p> <pre><code>['unity.default.numbers', 'unity.default.marksheet_uniform', 'unity.default.marksheet']\n</code></pre> <p>And then accessing the Delta table stored in Unity Catalog:</p> <pre><code>unity_table = unity.load_table(\"unity.default.numbers\")\ndf = daft.read_delta_lake(unity_table)\ndf.show()\n</code></pre> <p>This should output:</p> <pre><code>as_int  as_double\n564     188.755356\n755     883.610563\n644     203.439559\n75      277.880219\n42      403.857969\n680     797.691220\n821     767.799854\n484     344.003740\n477     380.678561\n131     35.443732\n294     209.322436\n150     329.197303\n539     425.661029\n247     477.742227\n958     509.371273\n</code></pre> <p>Take a look at the Integrations page for more examples of working with Delta tables stored in Unity Catalog.</p>"},{"location":"usage/tables/formats/","title":"Table Formats","text":"<p>This page explains how you can work with various table storage format tables in your Unity Catalog. It will also explain the advantages and drawbacks of working with these storage formats including Parquet, ORC, JSON, CSV, Avro, and TEXT.</p>"},{"location":"usage/tables/formats/#set-up-unity-catalog","title":"Set up Unity Catalog","text":"<p>To follow along, make sure you have a local instance of Unity Catalog running by launching the following command from a terminal window:</p> <pre><code>bin/start-uc-server\n</code></pre> <p>This local UC server will come with some sample data pre-loaded. To list all of the tables in your local Unity Catalog, use:</p> <pre><code>bin/uc table list --catalog unity --schema default\n</code></pre> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502      NAME       \u2502 CATALOG_NAME \u2502 ... \u2502              TABLE_ID              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502marksheet        \u2502unity         \u2502 ... \u2502c389adfa-5c8f-497b-8f70-26c2cca4976d\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502marksheet_uniform\u2502unity         \u2502 ... \u25029a73eb46-adf0-4457-9bd8-9ab491865e0d\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502numbers          \u2502unity         \u2502 ... \u250232025924-be53-4d67-ac39-501a86046c01\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502user_countries   \u2502unity         \u2502 ... \u250226ed93b5-9a18-4726-8ae8-c89dfcfea069\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>As you can see, there are currently four (4) Delta tables pre-loaded in this catalog.  </p>"},{"location":"usage/tables/formats/#create-a-table-using-a-different-storage-format","title":"Create a table using a different storage format","text":"<p>To create a table storage format table such as Parquet, ORC, Avro, CSV, JSON, or TEXT, use the <code>bin/uc table create ...</code> command with the <code>--format</code> flag.</p> <p>The following creates a new table in the <code>path/to/storage</code> LOCATION two colummns: <code>some_numbers</code> and <code>some_letters</code></p> ParquetJSONCSVORCAvroText <pre><code>bin/uc table create --full_name unity.default.test \\\n   --columns \"some_numbers INT, some_letters STRING\" \\\n   --storage_location /path/to/storage \\\n   --format PARQUET\n</code></pre> <pre><code>bin/uc table create --full_name unity.default.test \\\n   --columns \"some_numbers INT, some_letters STRING\" \\\n   --storage_location /path/to/storage \\\n   --format JSON\n</code></pre> <pre><code>bin/uc table create --full_name unity.default.test \\\n   --columns \"some_numbers INT, some_letters STRING\" \\\n   --storage_location /path/to/storage \\\n   --format CSV\n</code></pre> <pre><code>bin/uc table create --full_name unity.default.test \\\n   --columns \"some_numbers INT, some_letters STRING\" \\\n   --storage_location /path/to/storage \\\n   --format ORC\n</code></pre> <pre><code>bin/uc table create --full_name unity.default.test \\\n   --columns \"some_numbers INT, some_letters STRING\" \\\n   --storage_location /path/to/storage \\\n   --format AVRO\n</code></pre> <pre><code>bin/uc table create --full_name unity.default.test \\\n   --columns \"some_numbers INT, some_letters STRING\" \\\n   --storage_location /path/to/storage \\\n   --format TEXT\n</code></pre> <p>Setting your /path/to/storage</p> <p>You will need to manually set the <code>/path/to/storage</code> to the correct storage location. If you don't know where Unity Catalog is storing your files, then take a look at the metadata of an existing table using <code>bin/uc table get --full_name &lt;catalog.schema.table&gt;</code> to see its storage location.</p> <p>After you run the <code>table create</code> command, your output should look similar to the following abridged output of a JSON table:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        KEY        \u2502                  VALUE                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502NAME               \u2502test_json                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CATALOG_NAME       \u2502unity                                          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCHEMA_NAME        \u2502default                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502TABLE_TYPE         \u2502EXTERNAL                                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502DATA_SOURCE_FORMAT \u2502JSON                                           \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502COLUMNS            \u2502{\"name\":\"some_numbers\",\"type_text\":\"int\",\"type\\\u2502\n\u2502                   \u2502\"nullable\\\":true,\\\"metadata\\\":{}}\",\"type_name\"t\u2502\n\u2502                   \u2502ype\":null,\"position\":0,\"comment\":null,\"nullabl \u2502\n\u2502                   \u2502{\"name\":\"some_letters\",\"type_text\":\"string\",\"t\"\u2502\n\u2502                   \u2502,\\\"nullable\\\":true,\\\"metadata\\\":{}}\",\"type_namr\u2502\n\u2502                   \u2502val_type\":null,\"position\":1,\"comment\":null,\"nu \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502STORAGE_LOCATION   \u2502file:///tmp/tables/test_json/                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502...                \u2502...                                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502TABLE_ID           \u25029d73eb9c-8d40-46f2-a2c0-4e5d2a3e0611           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>This command has multiple parameters:</p> Parameter Description <code>full_name</code> The full name of the table, which is a concatenation of the catalog name, schema name, and table name separated by dots (e.g., catalog_name.schema_name.table_name). <code>columns</code> The columns of the table in SQL-like format \"column_name column_data_type\". Supported data types include <code>BOOLEAN, BYTE, SHORT, INT, LONG, FLOAT, DOUBLE, DATE, TIMESTAMP, TIMESTAMP_NTZ, STRING, BINARY, DECIMAL</code>. Separate multiple columns with a comma (e.g., \"<code>id INT, name STRING</code>\") <code>format</code> [Optional] The format of the data source. Supported values are DELTA, PARQUET, ORC, JSON, CSV, AVRO, and TEXT. If not specified the default format is DELTA. <code>storage_location</code> The storage location associated with the table. It is a mandatory field for EXTERNAL tables. <code>properties</code> [Optional] The properties of the entity in JSON format (e.g., '{\"key1\": \"value1\", \"key2\": \"value2\"}'). Make sure to either escape the double quotes(\\\") inside the properties string or just use single quotes('') around the same."},{"location":"usage/tables/formats/#challenges-using-table-storage-formats","title":"Challenges using table storage formats","text":"<p>While popular, each table storage format (e.g., Parquet, ORC, JSON, CSV, Avro, TEXT, etc.) has their own set of distinct advantages. But the challenges when working with these formats include:</p> <ul> <li>No ACID transactions for these data lakes meaning it's easier to accidentally corrupt your data</li> <li>It is not easy to delete rows from these tables</li> <li>These table storage foramts do not offer DML transactions</li> <li>They lack advanced features from schema evolution and enforcement to deletion vectors to change data feed</li> <li>Slow file listing overhead when working with cloud object stores such as AWS S3, Azure ADLSgen2, and     Google Cloud Storage</li> <li>Potentialy expensive footer reads to gather statistics for file skipping</li> </ul> <p>Open table formats like Apache Iceberg and Delta Lake are specifically designed to overcome these challenges. Storing your data in a lakehouse format is almost always more advantageous than storing it in traditional table storage formats.</p>"},{"location":"usage/tables/uniform/","title":"Unity Catalog with UniForm tables","text":"<p>UniForm tables are Delta tables with both Delta Lake and Iceberg metadata. UniForm tables can easily be read by Delta or Iceberg clients.</p> <p>UniForm makes it easy for all engines to read Delta tables, even engines that only have Iceberg connectors and don't have Delta Lake connectors.</p>"},{"location":"usage/tables/uniform/#read-delta-uniform-tables-via-iceberg-rest-catalog","title":"Read Delta Uniform tables via Iceberg REST Catalog","text":"<p>Delta Tables with Uniform enabled can be accessed via Iceberg REST Catalog. The Iceberg REST Catalog is served at <code>http://127.0.0.1:8080/api/2.1/unity-catalog/iceberg/</code>.</p> <p>A pre-populated Delta Uniform table can be prepared by running</p> <pre><code>cp -r etc/data/external/unity/default/tables/marksheet_uniform /tmp/marksheet_uniform\n</code></pre>"},{"location":"usage/tables/uniform/#setting-up-rest-catalog-with-apache-spark","title":"Setting up REST Catalog with Apache Spark","text":"<p>The following is an example of the settings to configure OSS Apache Spark to read UniForm as Iceberg:</p> <pre><code>\"spark.sql.extensions\": \"org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions\",\n\"spark.sql.catalog.iceberg\": \"org.apache.iceberg.spark.SparkCatalog\",\n\"spark.sql.catalog.iceberg.catalog-impl\": \"org.apache.iceberg.rest.RESTCatalog\",\n\"spark.sql.catalog.iceberg.uri\": \"http://127.0.0.1:8080/api/2.1/unity-catalog/iceberg\",\n\"spark.sql.catalog.iceberg.warehouse\": \"&lt;catalog-name&gt;\",\n\"spark.sql.catalog.iceberg.token\": \"not_used\",\n</code></pre> <p>When querying Iceberg REST Catalog for Unity Catalog, tables are identified using the following pattern <code>iceberg.&lt;schema-name&gt;.&lt;table-name&gt;</code> (e.g. <code>iceberg.default.marksheet_uniform</code>).</p> <p>NOTE: If you want your Spark catalog name to be the same as your UC catalog name, replace <code>iceberg</code> in the above configurations with <code>&lt;catalog-name&gt;</code>,  then tables are identified by the following pattern <code>&lt;catalog-name&gt;.&lt;schema-name&gt;.&lt;table-name&gt;</code> (e.g. <code>unity.default.marksheet_uniform</code>).</p>"}]}